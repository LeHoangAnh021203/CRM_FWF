"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/services/page",{

/***/ "(app-pages-browser)/./src/app/services/page.tsx":
/*!***********************************!*\
  !*** ./src/app/services/page.tsx ***!
  \***********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ CustomerReportPage)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _internationalized_date__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @internationalized/date */ \"(app-pages-browser)/./node_modules/@internationalized/date/dist/queries.mjs\");\n/* harmony import */ var _internationalized_date__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @internationalized/date */ \"(app-pages-browser)/./node_modules/@internationalized/date/dist/string.mjs\");\n/* harmony import */ var _ServicesFilter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ServicesFilter */ \"(app-pages-browser)/./src/app/services/ServicesFilter.tsx\");\n/* harmony import */ var _ServiceWeeklyChartData__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ServiceWeeklyChartData */ \"(app-pages-browser)/./src/app/services/ServiceWeeklyChartData.tsx\");\n/* harmony import */ var _ServicePieChartData__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ServicePieChartData */ \"(app-pages-browser)/./src/app/services/ServicePieChartData.tsx\");\n/* harmony import */ var _ServiceBottomPieData__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ServiceBottomPieData */ \"(app-pages-browser)/./src/app/services/ServiceBottomPieData.tsx\");\n/* harmony import */ var _ServiceStatCards__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ServiceStatCards */ \"(app-pages-browser)/./src/app/services/ServiceStatCards.tsx\");\n/* harmony import */ var _ServiceStoreChartData__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./ServiceStoreChartData */ \"(app-pages-browser)/./src/app/services/ServiceStoreChartData.tsx\");\n/* harmony import */ var _ServicesRegionData__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./ServicesRegionData */ \"(app-pages-browser)/./src/app/services/ServicesRegionData.tsx\");\n/* harmony import */ var _ServicesTable__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./ServicesTable */ \"(app-pages-browser)/./src/app/services/ServicesTable.tsx\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\n\n\n\n\n\n\n\n\n\nconst API_BASE_URL = \"https://d287f270836a.ngrok-free.app\";\nfunction useApiData(url, fromDate, toDate) {\n    _s();\n    const [data, setData] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"useApiData.useEffect\": ()=>{\n            // Skip API calls if URL is not available\n            if (!url || !API_BASE_URL) {\n                setLoading(false);\n                return;\n            }\n            setLoading(true);\n            setError(null);\n            fetch(url, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    fromDate,\n                    toDate\n                })\n            }).then({\n                \"useApiData.useEffect\": (res)=>{\n                    if (!res.ok) {\n                        // Don't throw error for 404, just return null data\n                        if (res.status === 404) {\n                            return null;\n                        }\n                        throw new Error(\"API error: \" + res.status);\n                    }\n                    return res.json();\n                }\n            }[\"useApiData.useEffect\"]).then({\n                \"useApiData.useEffect\": (data)=>{\n                    setData(data);\n                    setLoading(false);\n                }\n            }[\"useApiData.useEffect\"]).catch({\n                \"useApiData.useEffect\": (err)=>{\n                    // Only set error for non-404 errors\n                    if (!err.message.includes(\"404\")) {\n                        setError(err.message);\n                    }\n                    setLoading(false);\n                }\n            }[\"useApiData.useEffect\"]);\n        }\n    }[\"useApiData.useEffect\"], [\n        url,\n        fromDate,\n        toDate\n    ]);\n    return {\n        data,\n        loading,\n        error\n    };\n}\n_s(useApiData, \"RiL7vLwmC7ZWXKL/bXt2EIBjBYk=\");\nfunction CustomerReportPage() {\n    _s1();\n    var _s = $RefreshSig$();\n    const [startDate, setStartDate] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)((0,_internationalized_date__WEBPACK_IMPORTED_MODULE_10__.today)((0,_internationalized_date__WEBPACK_IMPORTED_MODULE_10__.getLocalTimeZone)()).subtract({\n        days: 7\n    }));\n    const [endDate, setEndDate] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)((0,_internationalized_date__WEBPACK_IMPORTED_MODULE_10__.today)((0,_internationalized_date__WEBPACK_IMPORTED_MODULE_10__.getLocalTimeZone)()));\n    const [selectedBranches, setSelectedBranches] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        \"CustomerReportPage.useState\": ()=>getInitialArray(\"selectedBranches\", [])\n    }[\"CustomerReportPage.useState\"]);\n    const [selectedRegions, setSelectedRegions] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        \"CustomerReportPage.useState\": ()=>getInitialArray(\"selectedRegions\", [])\n    }[\"CustomerReportPage.useState\"]);\n    const [selectedServiceTypes, setSelectedServiceTypes] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        \"CustomerReportPage.useState\": ()=>getInitialArray(\"selectedServiceTypes\", [\n                \"Khách hàng Thành viên\",\n                \"KH trải nghiệm\",\n                \"Added on\",\n                \"Quà tặng\"\n            ])\n    }[\"CustomerReportPage.useState\"]);\n    const [selectedGenders, setSelectedGenders] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        \"CustomerReportPage.useState\": ()=>getInitialArray(\"selectedGenders\", [\n                \"Nam\",\n                \"Nữ\",\n                \"#N/A\"\n            ])\n    }[\"CustomerReportPage.useState\"]);\n    // Save state to localStorage whenever it changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CustomerReportPage.useEffect\": ()=>{\n            if (true) {\n                const dateData = {\n                    year: startDate.year,\n                    month: startDate.month,\n                    day: startDate.day\n                };\n                localStorage.setItem(\"services_startDate\", JSON.stringify(dateData));\n            }\n        }\n    }[\"CustomerReportPage.useEffect\"], [\n        startDate\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CustomerReportPage.useEffect\": ()=>{\n            if (true) {\n                const dateData = {\n                    year: endDate.year,\n                    month: endDate.month,\n                    day: endDate.day\n                };\n                localStorage.setItem(\"services_endDate\", JSON.stringify(dateData));\n            }\n        }\n    }[\"CustomerReportPage.useEffect\"], [\n        endDate\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CustomerReportPage.useEffect\": ()=>{\n            if (true) {\n                localStorage.setItem(\"services_selectedBranches\", JSON.stringify(selectedBranches));\n            }\n        }\n    }[\"CustomerReportPage.useEffect\"], [\n        selectedBranches\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CustomerReportPage.useEffect\": ()=>{\n            if (true) {\n                localStorage.setItem(\"services_selectedRegions\", JSON.stringify(selectedRegions));\n            }\n        }\n    }[\"CustomerReportPage.useEffect\"], [\n        selectedRegions\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CustomerReportPage.useEffect\": ()=>{\n            if (true) {\n                localStorage.setItem(\"services_selectedServiceTypes\", JSON.stringify(selectedServiceTypes));\n            }\n        }\n    }[\"CustomerReportPage.useEffect\"], [\n        selectedServiceTypes\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CustomerReportPage.useEffect\": ()=>{\n            if (true) {\n                localStorage.setItem(\"services_selectedGenders\", JSON.stringify(selectedGenders));\n            }\n        }\n    }[\"CustomerReportPage.useEffect\"], [\n        selectedGenders\n    ]);\n    const fromDate = startDate ? \"\".concat(startDate.year, \"-\").concat(String(startDate.month).padStart(2, \"0\"), \"-\").concat(String(startDate.day).padStart(2, \"0\"), \"T00:00:00\") : \"\";\n    const toDate = endDate ? \"\".concat(endDate.year, \"-\").concat(String(endDate.month).padStart(2, \"0\"), \"-\").concat(String(endDate.day).padStart(2, \"0\"), \"T23:59:59\") : \"\";\n    // API call cho dữ liệu dịch vụ theo loại\n    const { data: serviceTypeData } = useApiData(\"\".concat(API_BASE_URL, \"/api/service-record/service-type-breakdown\"), fromDate, toDate);\n    const { data: serviceSummary, loading: serviceSummaryLoading, error: serviceSummaryError } = useApiData(\"\".concat(API_BASE_URL, \"/api/service-record/service-summary\"), fromDate, toDate);\n    const { data: regionData, loading: regionLoading, error: regionError } = useApiData(\"\".concat(API_BASE_URL, \"/api/service-record/region\"), fromDate, toDate);\n    const { data: shopData, loading: shopLoading, error: shopError } = useApiData(\"\".concat(API_BASE_URL, \"/api/service-record/shop\"), fromDate, toDate);\n    const { data: top10ServicesRevenueData, loading: top10ServicesLoading, error: top10ServicesError } = useApiData(\"\".concat(API_BASE_URL, \"/api/service-record/top10-services-revenue\"), fromDate, toDate);\n    const { data: top10ServicesUsageData, loading: top10ServicesUsageLoading, error: top10ServicesUsageError } = useApiData(\"\".concat(API_BASE_URL, \"/api/service-record/top10-services-usage\"), fromDate, toDate);\n    const { data: bottom3ServicesUsageData, loading: bottom3ServicesUsageLoading, error: bottom3ServicesUsageError } = useApiData(\"\".concat(API_BASE_URL, \"/api/service-record/bottom3-services-usage\"), fromDate, toDate);\n    const { data: bottom3ServicesRevenueData, loading: bottom3ServicesRevenueLoading, error: bottom3ServicesRevenueError } = useApiData(\"\".concat(API_BASE_URL, \"/api/service-record/bottom3-services-revenue\"), fromDate, toDate);\n    const { data: serviceTableData, loading: serviceTableLoading, error: serviceTableError } = useApiData(\"\".concat(API_BASE_URL, \"/api/service-record/top-table\"), fromDate, toDate);\n    // Hook lấy width window với debounce để tránh performance issues\n    function useWindowWidth() {\n        _s();\n        const [width, setWidth] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(1024);\n        (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n            \"CustomerReportPage.useWindowWidth.useEffect\": ()=>{\n                let timeoutId;\n                function handleResize() {\n                    clearTimeout(timeoutId);\n                    timeoutId = setTimeout({\n                        \"CustomerReportPage.useWindowWidth.useEffect.handleResize\": ()=>{\n                            setWidth(window.innerWidth);\n                        }\n                    }[\"CustomerReportPage.useWindowWidth.useEffect.handleResize\"], 100); // Debounce 100ms\n                }\n                handleResize();\n                window.addEventListener(\"resize\", handleResize);\n                return ({\n                    \"CustomerReportPage.useWindowWidth.useEffect\": ()=>{\n                        window.removeEventListener(\"resize\", handleResize);\n                        clearTimeout(timeoutId);\n                    }\n                })[\"CustomerReportPage.useWindowWidth.useEffect\"];\n            }\n        }[\"CustomerReportPage.useWindowWidth.useEffect\"], []);\n        return width;\n    }\n    _s(useWindowWidth, \"A0ohrnA7OUGzUufHaOdqkuy5d9A=\");\n    const windowWidth = useWindowWidth();\n    const isMobile = windowWidth < 640;\n    const ALL_SERVICE_TYPES = [\n        {\n            key: \"Khách hàng Thành viên\",\n            label: \"Combo\"\n        },\n        {\n            key: \"KH trải nghiệm\",\n            label: \"Dịch vụ\"\n        },\n        {\n            key: \"Added on\",\n            label: \"Added on\"\n        },\n        {\n            key: \"Quà tặng\",\n            label: \"Gifts\"\n        },\n        {\n            key: \"Fox card\",\n            label: \"Fox card\"\n        }\n    ];\n    const ALL_GENDERS = [\n        \"Nam\",\n        \"Nữ\",\n        \"#N/A\"\n    ];\n    const [regionSearch] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const locationOptions = react__WEBPACK_IMPORTED_MODULE_1___default().useMemo({\n        \"CustomerReportPage.useMemo[locationOptions]\": ()=>[\n                \"Crescent Mall Q7\",\n                \"Vincom Thảo Điền\",\n                \"Vista Verde\",\n                \"Aeon Mall Tân Phú Celadon\",\n                \"Westpoint Phạm Hùng\",\n                \"Aeon Mall Bình Tân\",\n                \"Vincom Phan Văn Trị\",\n                \"Vincom Landmark 81\",\n                \"TTTM Estella Place\",\n                \"Võ Thị Sáu Q.1\",\n                \"The Sun Avenue\",\n                \"Trương Định Q.3\",\n                \"Hoa Lan Q.PN\",\n                \"Nowzone Q.1\",\n                \"Everrich Infinity Q.5\",\n                \"SC VivoCity\",\n                \"Đảo Ngọc Ngũ Xã HN\",\n                \"Vincom Lê Văn Việt\",\n                \"The Bonatica Q.TB\",\n                \"Midtown Q.7\",\n                \"Trần Phú Đà Nẵng\",\n                \"Vincom Quang Trung\",\n                \"Vincom Bà Triệu\",\n                \"Imperia Sky Garden HN\",\n                \"Gold Coast Nha Trang\",\n                \"Riviera Point Q7\",\n                \"Saigon Ofice\",\n                \"Millenium Apartment Q.4\",\n                \"Parc Mall Q.8\",\n                \"Saigon Mia Trung Sơn\"\n            ]\n    }[\"CustomerReportPage.useMemo[locationOptions]\"], []);\n    const locationRegionMap = react__WEBPACK_IMPORTED_MODULE_1___default().useMemo({\n        \"CustomerReportPage.useMemo[locationRegionMap]\": ()=>({\n                \"Crescent Mall Q7\": \"HCM\",\n                \"Vincom Thảo Điền\": \"HCM\",\n                \"Vista Verde\": \"HCM\",\n                \"Aeon Mall Tân Phú Celadon\": \"HCM\",\n                \"Westpoint Phạm Hùng\": \"HCM\",\n                \"Aeon Mall Bình Tân\": \"HCM\",\n                \"Vincom Phan Văn Trị\": \"HCM\",\n                \"Vincom Landmark 81\": \"HCM\",\n                \"TTTM Estella Place\": \"HCM\",\n                \"Võ Thị Sáu Q.1\": \"HCM\",\n                \"The Sun Avenue\": \"HCM\",\n                \"Trương Định Q.3\": \"HCM\",\n                \"Hoa Lan Q.PN\": \"HCM\",\n                \"Nowzone Q.1\": \"HCM\",\n                \"Everrich Infinity Q.5\": \"HCM\",\n                \"SC VivoCity\": \"HCM\",\n                \"Vincom Lê Văn Việt\": \"HCM\",\n                \"The Bonatica Q.TB\": \"HCM\",\n                \"Midtown Q.7\": \"HCM\",\n                \"Riviera Point Q7\": \"HCM\",\n                \"Saigon Ofice\": \"HCM\",\n                \"Millenium Apartment Q.4\": \"HCM\",\n                \"Parc Mall Q.8\": \"HCM\",\n                \"Saigon Mia Trung Sơn\": \"HCM\",\n                \"Đảo Ngọc Ngũ Xã HN\": \"Hà Nội\",\n                \"Imperia Sky Garden HN\": \"Hà Nội\",\n                \"Vincom Bà Triệu\": \"Hà Nội\",\n                \"Gold Coast Nha Trang\": \"Nha Trang\",\n                \"Trần Phú Đà Nẵng\": \"Đà Nẵng\",\n                \"Vincom Quang Trung\": \"HCM\"\n            })\n    }[\"CustomerReportPage.useMemo[locationRegionMap]\"], []);\n    const data = react__WEBPACK_IMPORTED_MODULE_1___default().useMemo({\n        \"CustomerReportPage.useMemo[data]\": ()=>[\n                ...Array.from({\n                    length: 30\n                }, {\n                    \"CustomerReportPage.useMemo[data]\": (_, i)=>{\n                        const day = i + 1;\n                        const dateStr = \"\".concat(day, \" thg 6\");\n                        const allLocations = [\n                            \"Crescent Mall Q7\",\n                            \"Vincom Thảo Điền\",\n                            \"Vista Verde\",\n                            \"Aeon Mall Tân Phú Celadon\",\n                            \"Westpoint Phạm Hùng\",\n                            \"Aeon Mall Bình Tân\",\n                            \"Vincom Phan Văn Trị\",\n                            \"Vincom Landmark 81\",\n                            \"TTTM Estella Place\",\n                            \"Võ Thị Sáu Q.1\",\n                            \"The Sun Avenue\",\n                            \"Trương Định Q.3\",\n                            \"Hoa Lan Q.PN\",\n                            \"Nowzone Q.1\",\n                            \"Everrich Infinity Q.5\",\n                            \"SC VivoCity\",\n                            \"Đảo Ngọc Ngũ Xã HN\",\n                            \"Vincom Lê Văn Việt\",\n                            \"The Bonatica Q.TB\",\n                            \"Midtown Q.7\",\n                            \"Trần Phú Đà Nẵng\",\n                            \"Vincom Quang Trung\",\n                            \"Vincom Bà Triệu\",\n                            \"Imperia Sky Garden HN\",\n                            \"Gold Coast Nha Trang\",\n                            \"Riviera Point Q7\",\n                            \"Saigon Ofice\",\n                            \"Millenium Apartment Q.4\",\n                            \"Parc Mall Q.8\",\n                            \"Saigon Mia Trung Sơn\"\n                        ];\n                        return [\n                            {\n                                date: dateStr,\n                                value: 1200000 + i % 5 * 20000 + i * 1000,\n                                value2: 1000000 + i % 3 * 15000 + i * 800,\n                                type: \"KH trải nghiệm\",\n                                status: \"New\",\n                                gender: \"Nam\",\n                                region: locationRegionMap[allLocations[i % allLocations.length]],\n                                branch: allLocations[i % allLocations.length]\n                            },\n                            {\n                                date: dateStr,\n                                value: 1250000 + i % 4 * 18000 + i * 1200,\n                                value2: 1050000 + i % 2 * 17000 + i * 900,\n                                type: \"KH trải nghiệm\",\n                                status: \"New\",\n                                gender: \"Nữ\",\n                                region: locationRegionMap[allLocations[(i + 1) % allLocations.length]],\n                                branch: allLocations[(i + 1) % allLocations.length]\n                            },\n                            {\n                                date: dateStr,\n                                value: 1300000 + i % 6 * 22000 + i * 1100,\n                                value2: 1100000 + i % 4 * 13000 + i * 700,\n                                type: \"Khách hàng Thành viên\",\n                                status: \"New\",\n                                gender: \"Nam\",\n                                region: locationRegionMap[allLocations[(i + 2) % allLocations.length]],\n                                branch: allLocations[(i + 2) % allLocations.length]\n                            },\n                            {\n                                date: dateStr,\n                                value: 1350000 + i % 3 * 25000 + i * 900,\n                                value2: 1150000 + i % 5 * 12000 + i * 600,\n                                type: \"Khách hàng Thành viên\",\n                                status: \"New\",\n                                gender: \"Nữ\",\n                                region: locationRegionMap[allLocations[(i + 3) % allLocations.length]],\n                                branch: allLocations[(i + 3) % allLocations.length]\n                            }\n                        ];\n                    }\n                }[\"CustomerReportPage.useMemo[data]\"]).flat()\n            ]\n    }[\"CustomerReportPage.useMemo[data]\"], [\n        locationRegionMap\n    ]);\n    const TotalRegionalSales = [\n        {\n            date: \"9 thg 6, 2025\",\n            HCM: 100,\n            HaNoi: 90,\n            DaNang: 80,\n            NhaTrang: 70,\n            DaDongCua: 60,\n            type: \"Tổng\",\n            status: \"All\"\n        },\n        {\n            date: \"8 thg 6, 2025\",\n            HCM: 100,\n            HaNoi: 90,\n            DaNang: 80,\n            NhaTrang: 70,\n            DaDongCua: 60,\n            type: \"Tổng\",\n            status: \"All\"\n        },\n        {\n            date: \"7 thg 6, 2025\",\n            HCM: 100,\n            HaNoi: 90,\n            DaNang: 80,\n            NhaTrang: 70,\n            DaDongCua: 60,\n            type: \"Tổng\",\n            status: \"All\"\n        },\n        {\n            date: \"6 thg 6, 2025\",\n            HCM: 100,\n            HaNoi: 90,\n            DaNang: 80,\n            NhaTrang: 70,\n            DaDongCua: 60,\n            type: \"Tổng\",\n            status: \"All\"\n        },\n        {\n            date: \"5 thg 6, 2025\",\n            HCM: 100,\n            HaNoi: 90,\n            DaNang: 80,\n            NhaTrang: 70,\n            DaDongCua: 60,\n            type: \"Tổng\",\n            status: \"All\"\n        },\n        {\n            date: \"4 thg 6, 2025\",\n            HCM: 100,\n            HaNoi: 90,\n            DaNang: 80,\n            NhaTrang: 70,\n            DaDongCua: 60,\n            type: \"Tổng\",\n            status: \"All\"\n        },\n        {\n            date: \"3 thg 6, 2025\",\n            HCM: 100,\n            HaNoi: 90,\n            DaNang: 80,\n            NhaTrang: 70,\n            DaDongCua: 60,\n            type: \"Tổng\",\n            status: \"All\"\n        },\n        {\n            date: \"1 thg 6, 2025\",\n            HCM: 100,\n            HaNoi: 90,\n            DaNang: 80,\n            NhaTrang: 70,\n            DaDongCua: 60,\n            type: \"Tổng\",\n            status: \"All\"\n        },\n        {\n            date: \"2 thg 6, 2025\",\n            HCM: 100,\n            HaNoi: 90,\n            DaNang: 80,\n            NhaTrang: 70,\n            DaDongCua: 60,\n            type: \"Tổng\",\n            status: \"All\"\n        }\n    ];\n    function formatMoneyShort(val) {\n        if (val >= 1000000000000) return (val / 1000000000000).toFixed(1) + \" T\";\n        if (val >= 1000000000) return (val / 1000000000).toFixed(1) + \" T\";\n        if (val >= 1000000) return (val / 1000000).toFixed(1) + \" Tr\";\n        return val.toLocaleString();\n    }\n    const REGIONS = [\n        \"HCM\",\n        \"Hà Nội\",\n        \"Đà Nẵng\",\n        \"Nha Trang\",\n        \"Đã Đóng Cửa\",\n        \"Khác\"\n    ];\n    const isInWeek = react__WEBPACK_IMPORTED_MODULE_1___default().useCallback({\n        \"CustomerReportPage.useCallback[isInWeek]\": (d, start, end)=>{\n            const dDate = parseVNDate(d.date);\n            return dDate.compare(start) >= 0 && dDate.compare(end) <= 0;\n        }\n    }[\"CustomerReportPage.useCallback[isInWeek]\"], []);\n    // Đặt các biến tuần lên trước\n    const weekStart = startDate;\n    const weekEnd = endDate;\n    const prevWeekStart = startDate.subtract({\n        days: 7\n    });\n    const prevWeekEnd = startDate.subtract({\n        days: 1\n    });\n    const weekRevenueData = filterData(TotalRegionalSales, selectedRegions, selectedBranches);\n    const prevWeekRevenueData = filterData(TotalRegionalSales, selectedRegions, selectedBranches);\n    // Helper to map region display name to data key\n    function getRegionKey(region) {\n        switch(region){\n            case \"HCM\":\n                return \"HCM\";\n            case \"Hà Nội\":\n                return \"HaNoi\";\n            case \"Đà Nẵng\":\n                return \"DaNang\";\n            case \"Nha Trang\":\n                return \"NhaTrang\";\n            case \"Đã Đóng Cửa\":\n                return \"DaDongCua\";\n            case \"Khác\":\n                return \"Khac\";\n            default:\n                return \"HCM\";\n        }\n    }\n    const regionStats = REGIONS.map((region)=>{\n        const ordersThisWeek = data.filter((d)=>d.region === region && isInWeek(d, weekStart, weekEnd)).length;\n        const ordersLastWeek = data.filter((d)=>d.region === region && isInWeek(d, prevWeekStart, prevWeekEnd)).length;\n        const deltaOrders = ordersThisWeek - ordersLastWeek;\n        const regionKey = getRegionKey(region);\n        const revenueThisWeek = weekRevenueData.reduce((sum, item)=>{\n            var _item_regionKey;\n            return sum + Number((_item_regionKey = item[regionKey]) !== null && _item_regionKey !== void 0 ? _item_regionKey : 0);\n        }, 0);\n        const revenueLastWeek = prevWeekRevenueData.reduce((sum, item)=>{\n            var _item_regionKey;\n            return sum + Number((_item_regionKey = item[regionKey]) !== null && _item_regionKey !== void 0 ? _item_regionKey : 0);\n        }, 0);\n        const percentDelta = revenueLastWeek === 0 ? null : (revenueThisWeek - revenueLastWeek) / revenueLastWeek * 100;\n        return {\n            region,\n            ordersThisWeek,\n            deltaOrders,\n            revenueThisWeek,\n            percentDelta,\n            revenueLastWeek\n        };\n    });\n    function parseVNDate(str) {\n        let match = str.match(/^(\\d{1,2}) thg (\\d{1,2}), (\\d{4})$/);\n        if (match) {\n            const [, day, month, year] = match;\n            return (0,_internationalized_date__WEBPACK_IMPORTED_MODULE_11__.parseDate)(\"\".concat(year, \"-\").concat(month.padStart(2, \"0\"), \"-\").concat(day.padStart(2, \"0\")));\n        }\n        match = str.match(/^(\\d{1,2}) thg (\\d{1,2})$/);\n        if (match) {\n            const [, day, month] = match;\n            const year = String(new Date().getFullYear());\n            return (0,_internationalized_date__WEBPACK_IMPORTED_MODULE_11__.parseDate)(\"\".concat(year, \"-\").concat(month.padStart(2, \"0\"), \"-\").concat(day.padStart(2, \"0\")));\n        }\n        throw new Error(\"Invalid date format: \" + str);\n    }\n    // Sửa filterData để lọc theo region/branch nếu có\n    function filterData(data, selectedRegions, selectedBranches) {\n        return data.filter((item)=>{\n            const matchRegion = !selectedRegions || selectedRegions.length === 0 || !item.region || selectedRegions.includes(item.region);\n            const matchBranch = !selectedBranches || selectedBranches.length === 0 || !item.branch || selectedBranches.includes(item.branch);\n            return matchRegion && matchBranch;\n        });\n    }\n    const [serviceSearch] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [genderSearch] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const serviceDropdownRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const genderDropdownRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    // Đóng dropdown khi click ngoài\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CustomerReportPage.useEffect\": ()=>{\n            function handleClick(e) {\n                if (serviceDropdownRef.current && !serviceDropdownRef.current.contains(e.target)) {}\n                if (genderDropdownRef.current && !genderDropdownRef.current.contains(e.target)) {}\n            }\n            document.addEventListener(\"mousedown\", handleClick);\n            return ({\n                \"CustomerReportPage.useEffect\": ()=>document.removeEventListener(\"mousedown\", handleClick)\n            })[\"CustomerReportPage.useEffect\"];\n        }\n    }[\"CustomerReportPage.useEffect\"], []);\n    // Filter options theo search\n    const filteredServiceTypes = ALL_SERVICE_TYPES.filter((s)=>s.label.toLowerCase().includes(serviceSearch.toLowerCase()));\n    const filteredGenders = ALL_GENDERS.filter((g)=>g.toLowerCase().includes(genderSearch.toLowerCase()));\n    const regionOptions = regionStats.map((r)=>({\n            name: r.region,\n            total: Object.values(locationRegionMap).filter((reg)=>reg === r.region).length\n        }));\n    const filteredRegionOptions = react__WEBPACK_IMPORTED_MODULE_1___default().useMemo({\n        \"CustomerReportPage.useMemo[filteredRegionOptions]\": ()=>regionOptions.filter({\n                \"CustomerReportPage.useMemo[filteredRegionOptions]\": (r)=>r.name.toLowerCase().includes(regionSearch.toLowerCase())\n            }[\"CustomerReportPage.useMemo[filteredRegionOptions]\"])\n    }[\"CustomerReportPage.useMemo[filteredRegionOptions]\"], [\n        regionOptions,\n        regionSearch\n    ]);\n    // Tính top 10 location (chi nhánh/cửa hàng) theo thực thu tuần này\n    const locationRevenueMap = {};\n    locationOptions.forEach((loc)=>{\n        locationRevenueMap[loc] = data.filter((d)=>d.branch === loc && isInWeek(d, weekStart, weekEnd)).reduce((sum, d)=>sum + d.value, 0);\n    });\n    const ordersByDay = {};\n    data.forEach((d)=>{\n        if (d.type !== \"Khách hàng Thành viên\") {\n            if (!ordersByDay[d.date]) {\n                ordersByDay[d.date] = {\n                    count: 0,\n                    avgPerShop: 0\n                };\n            }\n            ordersByDay[d.date].count++;\n        }\n    });\n    // Tính trung bình số lượng đơn tại mỗi shop cho từng ngày\n    Object.keys(ordersByDay).forEach((date)=>{\n        // Đếm số shop có đơn trong ngày đó\n        const shops = new Set(data.filter((d)=>d.date === date && d.type !== \"Khách hàng Thành viên\").map((d)=>d.branch));\n        ordersByDay[date].avgPerShop = shops.size > 0 ? Math.round(ordersByDay[date].count / shops.size) : 0;\n    });\n    const ordersByDayArr = Object.entries(ordersByDay).sort((a, b)=>{\n        // Sort theo ngày tăng dần\n        const [d1, m1] = a[0].split(\" thg \");\n        const [d2, m2] = b[0].split(\" thg \");\n        return Number(m1) !== Number(m2) ? Number(m1) - Number(m2) : Number(d1) - Number(d2);\n    });\n    // Giả lập số đơn hàng mỗi ngày (ví dụ 31 ngày)\n    const fakeOrderCounts = [\n        240,\n        173,\n        201,\n        281,\n        269,\n        167,\n        166,\n        131,\n        228,\n        247,\n        380,\n        403,\n        217,\n        193,\n        210,\n        236,\n        244,\n        367,\n        411,\n        271,\n        256,\n        288,\n        291,\n        358,\n        398,\n        309,\n        191,\n        49,\n        17,\n        31,\n        67\n    ];\n    // Gán lại vào ordersByDayArr\n    ordersByDayArr.forEach((param, idx)=>{\n        let [, val] = param;\n        val.count = fakeOrderCounts[idx % fakeOrderCounts.length];\n        // Tạo trung bình shop ngẫu nhiên (5-15)\n        val.avgPerShop = 5 + Math.floor(Math.random() * 11);\n    });\n    const weekDates = react__WEBPACK_IMPORTED_MODULE_1___default().useMemo({\n        \"CustomerReportPage.useMemo[weekDates]\": ()=>{\n            const dates = [];\n            let d = weekStart;\n            while(d.compare(weekEnd) <= 0){\n                dates.push(d);\n                d = d.add({\n                    days: 1\n                });\n            }\n            return dates;\n        }\n    }[\"CustomerReportPage.useMemo[weekDates]\"], [\n        weekStart,\n        weekEnd\n    ]);\n    // Xử lý dữ liệu API cho chart tổng dịch vụ thực hiện trong tuần\n    const weeklyServiceChartData = react__WEBPACK_IMPORTED_MODULE_1___default().useMemo({\n        \"CustomerReportPage.useMemo[weeklyServiceChartData]\": ()=>{\n            if (!serviceTypeData) {\n                // Fallback data nếu API chưa load\n                return weekDates.map({\n                    \"CustomerReportPage.useMemo[weeklyServiceChartData]\": (dateObj)=>{\n                        const dateStr = \"\".concat(dateObj.day, \" thg \").concat(dateObj.month);\n                        return {\n                            date: dateStr,\n                            combo: 0,\n                            service: 0,\n                            addedon: 0,\n                            foxcard: 0\n                        };\n                    }\n                }[\"CustomerReportPage.useMemo[weeklyServiceChartData]\"]);\n            }\n            // Tạo map để nhóm dữ liệu theo ngày\n            const dataByDate = new Map();\n            // Khởi tạo dữ liệu cho tất cả các ngày trong tuần\n            weekDates.forEach({\n                \"CustomerReportPage.useMemo[weeklyServiceChartData]\": (dateObj)=>{\n                    const dateKey = \"\".concat(dateObj.year, \"-\").concat(String(dateObj.month).padStart(2, \"0\"), \"-\").concat(String(dateObj.day).padStart(2, \"0\"));\n                    dataByDate.set(dateKey, {\n                        combo: 0,\n                        service: 0,\n                        addedon: 0,\n                        foxcard: 0\n                    });\n                }\n            }[\"CustomerReportPage.useMemo[weeklyServiceChartData]\"]);\n            // Xử lý dữ liệu từ API\n            serviceTypeData.forEach({\n                \"CustomerReportPage.useMemo[weeklyServiceChartData]\": (item)=>{\n                    const dateKey = item.date;\n                    const existing = dataByDate.get(dateKey);\n                    if (existing) {\n                        switch(item.type){\n                            case \"Combo\":\n                                existing.combo = item.count;\n                                break;\n                            case \"Dịch vụ\":\n                                existing.service = item.count;\n                                break;\n                            case \"Khác\":\n                                existing.addedon = item.count;\n                                break;\n                            default:\n                                break;\n                        }\n                    }\n                }\n            }[\"CustomerReportPage.useMemo[weeklyServiceChartData]\"]);\n            // Chuyển đổi thành format cho chart\n            return weekDates.map({\n                \"CustomerReportPage.useMemo[weeklyServiceChartData]\": (dateObj)=>{\n                    const dateKey = \"\".concat(dateObj.year, \"-\").concat(String(dateObj.month).padStart(2, \"0\"), \"-\").concat(String(dateObj.day).padStart(2, \"0\"));\n                    const data = dataByDate.get(dateKey) || {\n                        combo: 0,\n                        service: 0,\n                        addedon: 0,\n                        foxcard: 0\n                    };\n                    const total = data.combo + data.service + data.addedon;\n                    const foxcard = Math.round(total * 0.218);\n                    return {\n                        date: \"\".concat(dateObj.day, \" thg \").concat(dateObj.month),\n                        combo: data.combo,\n                        service: data.service,\n                        addedon: data.addedon,\n                        foxcard: foxcard\n                    };\n                }\n            }[\"CustomerReportPage.useMemo[weeklyServiceChartData]\"]);\n        }\n    }[\"CustomerReportPage.useMemo[weeklyServiceChartData]\"], [\n        serviceTypeData,\n        weekDates\n    ]);\n    // Xử lý dữ liệu cho chart tổng dịch vụ thực hiện theo khu vực\n    const regionChartData = react__WEBPACK_IMPORTED_MODULE_1___default().useMemo({\n        \"CustomerReportPage.useMemo[regionChartData]\": ()=>{\n            if (!regionData) return [];\n            // Nhóm dữ liệu theo khu vực\n            const regionMap = new Map();\n            regionData.forEach({\n                \"CustomerReportPage.useMemo[regionChartData]\": (item)=>{\n                    if (!regionMap.has(item.region)) {\n                        regionMap.set(item.region, {\n                            combo: 0,\n                            service: 0,\n                            other: 0\n                        });\n                    }\n                    const region = regionMap.get(item.region);\n                    switch(item.type){\n                        case \"Combo\":\n                            region.combo = item.total;\n                            break;\n                        case \"Dịch vụ\":\n                            region.service = item.total;\n                            break;\n                        case \"Khác\":\n                            region.other = item.total;\n                            break;\n                    }\n                }\n            }[\"CustomerReportPage.useMemo[regionChartData]\"]);\n            // Chuyển đổi thành format cho chart\n            return Array.from(regionMap.entries()).map({\n                \"CustomerReportPage.useMemo[regionChartData]\": (param)=>{\n                    let [regionName, data] = param;\n                    return {\n                        region: regionName,\n                        combo: data.combo,\n                        service: data.service,\n                        other: data.other,\n                        total: data.combo + data.service + data.other\n                    };\n                }\n            }[\"CustomerReportPage.useMemo[regionChartData]\"]).sort({\n                \"CustomerReportPage.useMemo[regionChartData]\": (a, b)=>b.total - a.total\n            }[\"CustomerReportPage.useMemo[regionChartData]\"]); // Sắp xếp theo tổng giảm dần\n        }\n    }[\"CustomerReportPage.useMemo[regionChartData]\"], [\n        regionData\n    ]);\n    // Dữ liệu cho bảng dịch vụ\n    const serviceData = react__WEBPACK_IMPORTED_MODULE_1___default().useMemo({\n        \"CustomerReportPage.useMemo[serviceData]\": ()=>{\n            if (!serviceTypeData) return [];\n            const serviceMap = new Map();\n            serviceTypeData.forEach({\n                \"CustomerReportPage.useMemo[serviceData]\": (item)=>{\n                    const key = item.type;\n                    if (!serviceMap.has(key)) {\n                        serviceMap.set(key, {\n                            count: 0,\n                            type: item.type\n                        });\n                    }\n                    serviceMap.get(key).count += item.count;\n                }\n            }[\"CustomerReportPage.useMemo[serviceData]\"]);\n            const totalCount = Array.from(serviceMap.values()).reduce({\n                \"CustomerReportPage.useMemo[serviceData].totalCount\": (sum, item)=>sum + item.count\n            }[\"CustomerReportPage.useMemo[serviceData].totalCount\"], 0);\n            return Array.from(serviceMap.entries()).map({\n                \"CustomerReportPage.useMemo[serviceData]\": (param)=>{\n                    let [key, item] = param;\n                    return {\n                        tenDichVu: key,\n                        loaiDichVu: key,\n                        soLuong: item.count,\n                        tongGia: item.count * 1000000,\n                        percentSoLuong: totalCount > 0 ? (item.count / totalCount * 100).toFixed(1) : \"0.0\",\n                        percentTongGia: totalCount > 0 ? (item.count / totalCount * 100).toFixed(1) : \"0.0\"\n                    };\n                }\n            }[\"CustomerReportPage.useMemo[serviceData]\"]);\n        }\n    }[\"CustomerReportPage.useMemo[serviceData]\"], [\n        serviceTypeData\n    ]);\n    // Lấy danh sách các cửa hàng\n    const storeNames = locationOptions;\n    // Bổ sung data mẫu cho các trường type và gender nếu chưa có\n    // (Chỉ thêm vào cuối mảng data, không ảnh hưởng logic cũ)\n    if (!data.some((d)=>d.type === \"Added on\")) {\n        data.push({\n            date: \"\".concat(weekStart.day, \" thg \").concat(weekStart.month),\n            value: 1000000,\n            value2: 500000,\n            type: \"Added on\",\n            status: \"New\",\n            gender: \"Nam\",\n            region: \"HCM\",\n            branch: \"Crescent Mall Q7\"\n        });\n    }\n    if (!data.some((d)=>d.type === \"Quà tặng\")) {\n        data.push({\n            date: \"\".concat(weekStart.day, \" thg \").concat(weekStart.month),\n            value: 800000,\n            value2: 300000,\n            type: \"Quà tặng\",\n            status: \"New\",\n            gender: \"#N/A\",\n            region: \"HCM\",\n            branch: \"Vincom Landmark 81\"\n        });\n    }\n    if (!data.some((d)=>d.gender === \"#N/A\")) {\n        data.push({\n            date: \"\".concat(weekStart.day, \" thg \").concat(weekStart.month),\n            value: 1200000,\n            value2: 600000,\n            type: \"KH trải nghiệm\",\n            status: \"New\",\n            gender: \"#N/A\",\n            region: \"HCM\",\n            branch: \"Vista Verde\"\n        });\n    }\n    // Tính số lượng từng loại dịch vụ theo từng cửa hàng từ API data\n    const storeServiceChartData = shopData ? (()=>{\n        // Group data by shop name\n        const shopGroups = shopData.reduce((acc, item)=>{\n            if (!acc[item.shopName]) {\n                acc[item.shopName] = {};\n            }\n            acc[item.shopName][item.serviceType] = item.total;\n            return acc;\n        }, {});\n        // Convert to chart format\n        return Object.entries(shopGroups).map((param)=>{\n            let [shopName, services] = param;\n            const combo = services[\"Combo\"] || 0;\n            const service = services[\"Dịch vụ\"] || 0;\n            const other = services[\"Khác\"] || 0;\n            const total = combo + service + other;\n            return {\n                store: shopName,\n                combo,\n                service,\n                other,\n                total\n            };\n        }).sort((a, b)=>b.total - a.total);\n    })() : storeNames.map((store)=>{\n        const storeData = data.filter((d)=>d.branch === store && isInWeek(d, weekStart, weekEnd) && selectedServiceTypes.includes(d.type) && selectedGenders.includes(d.gender));\n        const combo = storeData.filter((d)=>d.type === \"Khách hàng Thành viên\").length;\n        const service = storeData.filter((d)=>d.type === \"KH trải nghiệm\").length;\n        const addedon = storeData.filter((d)=>d.type === \"Added on\").length;\n        const gifts = storeData.filter((d)=>d.type === \"Quà tặng\").length;\n        // Fox card: giả lập 21.8% tổng số đơn của cửa hàng\n        const total = combo + service + addedon + gifts;\n        const foxcard = Math.round(total * 0.218);\n        return {\n            store,\n            combo,\n            service,\n            addedon,\n            gifts,\n            foxcard,\n            total\n        };\n    }).sort((a, b)=>b.total - a.total);\n    // Tính tổng actual price cho từng giới tính trong tuần (theo filter dịch vụ nếu muốn)\n    const genderActualPrice = ALL_GENDERS.map((gender)=>{\n        // Lọc theo tuần, theo filter dịch vụ nếu muốn\n        const filtered = data.filter((d)=>d.gender === gender && isInWeek(d, weekStart, weekEnd) && selectedServiceTypes.includes(d.type));\n        const total = filtered.reduce((sum, d)=>sum + d.value, 0);\n        return {\n            gender,\n            total\n        };\n    });\n    // Filtered data for pie charts and other components\n    const filteredPieData = data.filter((d)=>isInWeek(d, weekStart, weekEnd) && (selectedRegions.length === 0 || !d.region || selectedRegions.includes(d.region)) && (selectedBranches.length === 0 || !d.branch || selectedBranches.includes(d.branch)) && selectedServiceTypes.includes(d.type) && selectedGenders.includes(d.gender));\n    // Pie chart data for tỉ lệ dịch vụ/combo/cộng thêm (có filter)\n    const pieChartData = react__WEBPACK_IMPORTED_MODULE_1___default().useMemo({\n        \"CustomerReportPage.useMemo[pieChartData]\": ()=>{\n            if (serviceSummary) {\n                // Sử dụng dữ liệu API serviceSummary\n                const pieData = [\n                    {\n                        key: \"combo\",\n                        label: \"Combo\",\n                        value: serviceSummary.totalCombo,\n                        color: \"#795548\"\n                    },\n                    {\n                        key: \"service\",\n                        label: \"Dịch vụ\",\n                        value: serviceSummary.totalLe,\n                        color: \"#c5e1a5\"\n                    },\n                    {\n                        key: \"addedon\",\n                        label: \"Added on\",\n                        value: serviceSummary.totalCT,\n                        color: \"#f16a3f\"\n                    },\n                    {\n                        key: \"gifts\",\n                        label: \"Gifts\",\n                        value: serviceSummary.totalGift,\n                        color: \"#8fd1fc\"\n                    }\n                ];\n                const totalPie = pieData.reduce({\n                    \"CustomerReportPage.useMemo[pieChartData].totalPie\": (sum, d)=>sum + d.value\n                }[\"CustomerReportPage.useMemo[pieChartData].totalPie\"], 0);\n                const foxCardValue = Math.round(totalPie * 0.218);\n                return [\n                    ...pieData,\n                    {\n                        key: \"foxcard\",\n                        label: \"Fox card\",\n                        value: foxCardValue,\n                        color: \"#b26e7a\"\n                    }\n                ];\n            }\n            // Fallback data nếu API chưa load\n            const pieData = [\n                {\n                    key: \"combo\",\n                    label: \"Combo\",\n                    value: filteredPieData.filter({\n                        \"CustomerReportPage.useMemo[pieChartData]\": (d)=>d.type === \"Khách hàng Thành viên\"\n                    }[\"CustomerReportPage.useMemo[pieChartData]\"]).length,\n                    color: \"#795548\"\n                },\n                {\n                    key: \"service\",\n                    label: \"Dịch vụ\",\n                    value: filteredPieData.filter({\n                        \"CustomerReportPage.useMemo[pieChartData]\": (d)=>d.type === \"KH trải nghiệm\"\n                    }[\"CustomerReportPage.useMemo[pieChartData]\"]).length,\n                    color: \"#c5e1a5\"\n                },\n                {\n                    key: \"addedon\",\n                    label: \"Added on\",\n                    value: filteredPieData.filter({\n                        \"CustomerReportPage.useMemo[pieChartData]\": (d)=>d.type === \"Added on\"\n                    }[\"CustomerReportPage.useMemo[pieChartData]\"]).length,\n                    color: \"#f16a3f\"\n                },\n                {\n                    key: \"gifts\",\n                    label: \"Gifts\",\n                    value: filteredPieData.filter({\n                        \"CustomerReportPage.useMemo[pieChartData]\": (d)=>d.type === \"Quà tặng\"\n                    }[\"CustomerReportPage.useMemo[pieChartData]\"]).length,\n                    color: \"#8fd1fc\"\n                }\n            ];\n            const totalPie = pieData.reduce({\n                \"CustomerReportPage.useMemo[pieChartData].totalPie\": (sum, d)=>sum + d.value\n            }[\"CustomerReportPage.useMemo[pieChartData].totalPie\"], 0);\n            const foxCardValue = Math.round(totalPie * 0.218);\n            return [\n                ...pieData,\n                {\n                    key: \"foxcard\",\n                    label: \"Fox card\",\n                    value: foxCardValue,\n                    color: \"#b26e7a\"\n                }\n            ];\n        }\n    }[\"CustomerReportPage.useMemo[pieChartData]\"], [\n        serviceSummary,\n        filteredPieData\n    ]);\n    // PieChart top 10 dịch vụ theo số lượng (có filter)\n    const pieTop10Data = react__WEBPACK_IMPORTED_MODULE_1___default().useMemo({\n        \"CustomerReportPage.useMemo[pieTop10Data]\": ()=>{\n            if (top10ServicesUsageData) {\n                // Sử dụng dữ liệu API - số lượng\n                return top10ServicesUsageData.map({\n                    \"CustomerReportPage.useMemo[pieTop10Data]\": (service, idx)=>({\n                            name: service.serviceName,\n                            value: service.count,\n                            color: \"hsl(0,0%,\".concat(40 + idx * 5, \"%)\")\n                        })\n                }[\"CustomerReportPage.useMemo[pieTop10Data]\"]);\n            }\n            // Fallback data nếu API chưa load\n            const filteredServiceData = data.filter({\n                \"CustomerReportPage.useMemo[pieTop10Data].filteredServiceData\": (d)=>isInWeek(d, weekStart, weekEnd) && (selectedRegions.length === 0 || !d.region || selectedRegions.includes(d.region)) && (selectedBranches.length === 0 || !d.branch || selectedBranches.includes(d.branch)) && selectedServiceTypes.includes(d.type) && selectedGenders.includes(d.gender)\n            }[\"CustomerReportPage.useMemo[pieTop10Data].filteredServiceData\"]);\n            // Lấy tên dịch vụ (ưu tiên d.serviceName, fallback d.type)\n            const serviceCountMap = new Map();\n            filteredServiceData.forEach({\n                \"CustomerReportPage.useMemo[pieTop10Data]\": (d)=>{\n                    const name = d.serviceName || d.type;\n                    serviceCountMap.set(name, (serviceCountMap.get(name) || 0) + 1);\n                }\n            }[\"CustomerReportPage.useMemo[pieTop10Data]\"]);\n            const sortedServices = Array.from(serviceCountMap.entries()).sort({\n                \"CustomerReportPage.useMemo[pieTop10Data].sortedServices\": (a, b)=>b[1] - a[1]\n            }[\"CustomerReportPage.useMemo[pieTop10Data].sortedServices\"]);\n            const top10Services = sortedServices.slice(0, 10);\n            const otherCount = sortedServices.slice(10).reduce({\n                \"CustomerReportPage.useMemo[pieTop10Data].otherCount\": (sum, param)=>{\n                    let [, count] = param;\n                    return sum + count;\n                }\n            }[\"CustomerReportPage.useMemo[pieTop10Data].otherCount\"], 0);\n            const result = top10Services.map({\n                \"CustomerReportPage.useMemo[pieTop10Data].result\": (param, idx)=>{\n                    let [name, value] = param;\n                    return {\n                        name,\n                        value,\n                        color: \"hsl(0,0%,\".concat(40 + idx * 5, \"%)\")\n                    };\n                }\n            }[\"CustomerReportPage.useMemo[pieTop10Data].result\"]);\n            if (otherCount > 0) {\n                result.push({\n                    name: \"Khác\",\n                    value: otherCount,\n                    color: \"#ededed\"\n                });\n            }\n            return result;\n        }\n    }[\"CustomerReportPage.useMemo[pieTop10Data]\"], [\n        top10ServicesUsageData,\n        data,\n        weekStart,\n        weekEnd,\n        isInWeek,\n        selectedRegions,\n        selectedBranches,\n        selectedServiceTypes,\n        selectedGenders\n    ]);\n    // PieChart top 10 dịch vụ theo giá buổi (có filter)\n    const pieTop10AvgData = react__WEBPACK_IMPORTED_MODULE_1___default().useMemo({\n        \"CustomerReportPage.useMemo[pieTop10AvgData]\": ()=>{\n            if (top10ServicesRevenueData) {\n                // Sử dụng dữ liệu API - doanh thu\n                return top10ServicesRevenueData.map({\n                    \"CustomerReportPage.useMemo[pieTop10AvgData]\": (service, idx)=>({\n                            name: service.serviceName,\n                            value: service.servicePrice,\n                            color: \"hsl(30, 100%, \".concat(45 + idx * 5, \"%)\")\n                        })\n                }[\"CustomerReportPage.useMemo[pieTop10AvgData]\"]);\n            }\n            // Fallback data nếu API chưa load\n            const serviceValueMap = new Map();\n            filteredPieData.forEach({\n                \"CustomerReportPage.useMemo[pieTop10AvgData]\": (d)=>{\n                    const name = d.serviceName || d.type;\n                    if (!serviceValueMap.has(name)) {\n                        serviceValueMap.set(name, {\n                            totalValue: 0,\n                            count: 0\n                        });\n                    }\n                    const obj = serviceValueMap.get(name);\n                    obj.totalValue += d.value;\n                    obj.count += 1;\n                }\n            }[\"CustomerReportPage.useMemo[pieTop10AvgData]\"]);\n            const serviceAvgArr = Array.from(serviceValueMap.entries()).map({\n                \"CustomerReportPage.useMemo[pieTop10AvgData].serviceAvgArr\": (param)=>{\n                    let [name, { totalValue, count }] = param;\n                    return {\n                        name,\n                        avg: count > 0 ? totalValue / count : 0,\n                        count\n                    };\n                }\n            }[\"CustomerReportPage.useMemo[pieTop10AvgData].serviceAvgArr\"]);\n            const sortedAvg = serviceAvgArr.sort({\n                \"CustomerReportPage.useMemo[pieTop10AvgData].sortedAvg\": (a, b)=>b.avg - a.avg\n            }[\"CustomerReportPage.useMemo[pieTop10AvgData].sortedAvg\"]);\n            const top10Avg = sortedAvg.slice(0, 10);\n            const otherAvgSum = sortedAvg.slice(10).reduce({\n                \"CustomerReportPage.useMemo[pieTop10AvgData].otherAvgSum\": (sum, s)=>sum + s.avg\n            }[\"CustomerReportPage.useMemo[pieTop10AvgData].otherAvgSum\"], 0);\n            const result = top10Avg.map({\n                \"CustomerReportPage.useMemo[pieTop10AvgData].result\": (s, idx)=>({\n                        name: s.name,\n                        value: s.avg,\n                        color: \"hsl(30, 100%, \".concat(45 + idx * 5, \"%)\")\n                    })\n            }[\"CustomerReportPage.useMemo[pieTop10AvgData].result\"]);\n            if (sortedAvg.length > 10) {\n                result.push({\n                    name: \"Khác\",\n                    value: otherAvgSum,\n                    color: \"#ffe0b2\"\n                });\n            }\n            return result;\n        }\n    }[\"CustomerReportPage.useMemo[pieTop10AvgData]\"], [\n        top10ServicesRevenueData,\n        filteredPieData\n    ]);\n    const renderPieLabel = (param)=>{\n        let { percent, x, y, index } = param;\n        var _pieTop10Data_;\n        if (isMobile && percent !== undefined && percent < 0.15) return null;\n        if (percent !== undefined && percent < 0.05) return null;\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"text\", {\n            x: x,\n            y: y,\n            fill: ((_pieTop10Data_ = pieTop10Data[index !== null && index !== void 0 ? index : 0]) === null || _pieTop10Data_ === void 0 ? void 0 : _pieTop10Data_.color) || \"#333\",\n            fontSize: isMobile ? 10 : 14,\n            fontWeight: \"bold\",\n            textAnchor: \"middle\",\n            dominantBaseline: \"central\",\n            children: [\n                (percent * 100).toFixed(1),\n                \"%\"\n            ]\n        }, void 0, true, {\n            fileName: \"/Users/lehoanganh/Documents/FB Network/FE/src/app/services/page.tsx\",\n            lineNumber: 1357,\n            columnNumber: 7\n        }, this);\n    };\n    const bottom3Data = react__WEBPACK_IMPORTED_MODULE_1___default().useMemo({\n        \"CustomerReportPage.useMemo[bottom3Data]\": ()=>{\n            if (bottom3ServicesUsageData) {\n                // Sử dụng dữ liệu API\n                const grayShades = [\n                    \"#bdbdbd\",\n                    \"#9e9e9e\",\n                    \"#e0e0e0\"\n                ];\n                return bottom3ServicesUsageData.map({\n                    \"CustomerReportPage.useMemo[bottom3Data]\": (service, idx)=>({\n                            name: service.serviceName,\n                            value: service.count,\n                            color: grayShades[idx % grayShades.length]\n                        })\n                }[\"CustomerReportPage.useMemo[bottom3Data]\"]);\n            }\n            // Fallback data nếu API chưa load\n            const serviceCountMap = new Map();\n            filteredPieData.forEach({\n                \"CustomerReportPage.useMemo[bottom3Data]\": (d)=>{\n                    const name = d.serviceName || d.type;\n                    serviceCountMap.set(name, (serviceCountMap.get(name) || 0) + 1);\n                }\n            }[\"CustomerReportPage.useMemo[bottom3Data]\"]);\n            const sorted = Array.from(serviceCountMap.entries()).sort({\n                \"CustomerReportPage.useMemo[bottom3Data].sorted\": (a, b)=>a[1] - b[1]\n            }[\"CustomerReportPage.useMemo[bottom3Data].sorted\"]);\n            const bottom3 = sorted.slice(0, 3);\n            const grayShades = [\n                \"#bdbdbd\",\n                \"#9e9e9e\",\n                \"#e0e0e0\"\n            ];\n            return bottom3.map({\n                \"CustomerReportPage.useMemo[bottom3Data]\": (param, idx)=>{\n                    let [name, value] = param;\n                    return {\n                        name,\n                        value,\n                        color: grayShades[idx % grayShades.length]\n                    };\n                }\n            }[\"CustomerReportPage.useMemo[bottom3Data]\"]);\n        }\n    }[\"CustomerReportPage.useMemo[bottom3Data]\"], [\n        bottom3ServicesUsageData,\n        filteredPieData\n    ]);\n    // Data cho bottom 3 dịch vụ theo giá buổi\n    const bottom3RevenueData = react__WEBPACK_IMPORTED_MODULE_1___default().useMemo({\n        \"CustomerReportPage.useMemo[bottom3RevenueData]\": ()=>{\n            if (bottom3ServicesRevenueData) {\n                // Sử dụng dữ liệu API\n                const grayShades = [\n                    \"#bdbdbd\",\n                    \"#9e9e9e\",\n                    \"#e0e0e0\"\n                ];\n                return bottom3ServicesRevenueData.map({\n                    \"CustomerReportPage.useMemo[bottom3RevenueData]\": (service, idx)=>({\n                            name: service.serviceName,\n                            value: service.servicePrice,\n                            color: grayShades[idx % grayShades.length]\n                        })\n                }[\"CustomerReportPage.useMemo[bottom3RevenueData]\"]);\n            }\n            // Fallback data nếu API chưa load\n            const serviceValueMap = new Map();\n            filteredPieData.forEach({\n                \"CustomerReportPage.useMemo[bottom3RevenueData]\": (d)=>{\n                    const name = d.serviceName || d.type;\n                    if (!serviceValueMap.has(name)) {\n                        serviceValueMap.set(name, {\n                            totalValue: 0,\n                            count: 0\n                        });\n                    }\n                    const obj = serviceValueMap.get(name);\n                    obj.totalValue += d.value;\n                    obj.count += 1;\n                }\n            }[\"CustomerReportPage.useMemo[bottom3RevenueData]\"]);\n            const serviceAvgArr = Array.from(serviceValueMap.entries()).map({\n                \"CustomerReportPage.useMemo[bottom3RevenueData].serviceAvgArr\": (param)=>{\n                    let [name, { totalValue, count }] = param;\n                    return {\n                        name,\n                        avg: count > 0 ? totalValue / count : 0,\n                        count\n                    };\n                }\n            }[\"CustomerReportPage.useMemo[bottom3RevenueData].serviceAvgArr\"]);\n            const sortedAvg = serviceAvgArr.sort({\n                \"CustomerReportPage.useMemo[bottom3RevenueData].sortedAvg\": (a, b)=>a.avg - b.avg\n            }[\"CustomerReportPage.useMemo[bottom3RevenueData].sortedAvg\"]);\n            const bottom3 = sortedAvg.slice(0, 3);\n            const grayShades = [\n                \"#bdbdbd\",\n                \"#9e9e9e\",\n                \"#e0e0e0\"\n            ];\n            return bottom3.map({\n                \"CustomerReportPage.useMemo[bottom3RevenueData]\": (s, idx)=>({\n                        name: s.name,\n                        value: s.avg,\n                        color: grayShades[idx % grayShades.length]\n                    })\n            }[\"CustomerReportPage.useMemo[bottom3RevenueData]\"]);\n        }\n    }[\"CustomerReportPage.useMemo[bottom3RevenueData]\"], [\n        bottom3ServicesRevenueData,\n        filteredPieData\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"p-2 sm:p-4 md:p-6\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"mb-6\",\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \" p-2\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                            className: \"text-2xl font-semibold text-gray-900 mb-2\",\n                            children: \"Services Report\"\n                        }, void 0, false, {\n                            fileName: \"/Users/lehoanganh/Documents/FB Network/FE/src/app/services/page.tsx\",\n                            lineNumber: 1447,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_ServicesFilter__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                            startDate: startDate,\n                            endDate: endDate,\n                            setStartDate: setStartDate,\n                            setEndDate: setEndDate,\n                            selectedRegions: selectedRegions,\n                            setSelectedRegions: setSelectedRegions,\n                            selectedBranches: selectedBranches,\n                            setSelectedBranches: setSelectedBranches,\n                            selectedServiceTypes: selectedServiceTypes,\n                            setSelectedServiceTypes: setSelectedServiceTypes,\n                            selectedGenders: selectedGenders,\n                            setSelectedGenders: setSelectedGenders,\n                            regionOptions: regionOptions,\n                            locationOptions: locationOptions,\n                            filteredRegionOptions: filteredRegionOptions,\n                            ALL_SERVICE_TYPES: ALL_SERVICE_TYPES,\n                            ALL_GENDERS: ALL_GENDERS,\n                            filteredServiceTypes: filteredServiceTypes,\n                            filteredGenders: filteredGenders,\n                            genderActualPrice: genderActualPrice,\n                            formatMoneyShort: formatMoneyShort\n                        }, void 0, false, {\n                            fileName: \"/Users/lehoanganh/Documents/FB Network/FE/src/app/services/page.tsx\",\n                            lineNumber: 1450,\n                            columnNumber: 11\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/lehoanganh/Documents/FB Network/FE/src/app/services/page.tsx\",\n                    lineNumber: 1446,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_ServiceWeeklyChartData__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                    weeklyServiceChartData: weeklyServiceChartData,\n                    isMobile: isMobile\n                }, void 0, false, {\n                    fileName: \"/Users/lehoanganh/Documents/FB Network/FE/src/app/services/page.tsx\",\n                    lineNumber: 1476,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_ServicePieChartData__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                    pieChartData: pieChartData,\n                    pieTop10Data: pieTop10Data,\n                    pieTop10AvgData: pieTop10AvgData,\n                    top10ServicesLoading: top10ServicesLoading,\n                    top10ServicesError: top10ServicesError,\n                    top10ServicesUsageLoading: top10ServicesUsageLoading,\n                    top10ServicesUsageError: top10ServicesUsageError,\n                    isMobile: isMobile,\n                    renderPieLabel: renderPieLabel\n                }, void 0, false, {\n                    fileName: \"/Users/lehoanganh/Documents/FB Network/FE/src/app/services/page.tsx\",\n                    lineNumber: 1480,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_ServiceBottomPieData__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n                    bottom3ServicesUsageData: bottom3ServicesUsageData,\n                    bottom3ServicesUsageLoading: bottom3ServicesUsageLoading,\n                    bottom3ServicesUsageError: bottom3ServicesUsageError,\n                    bottom3ServicesRevenueLoading: bottom3ServicesRevenueLoading,\n                    bottom3ServicesRevenueError: bottom3ServicesRevenueError,\n                    bottom3Data: bottom3Data,\n                    bottom3RevenueData: bottom3RevenueData,\n                    filteredPieData: filteredPieData,\n                    isMobile: isMobile\n                }, void 0, false, {\n                    fileName: \"/Users/lehoanganh/Documents/FB Network/FE/src/app/services/page.tsx\",\n                    lineNumber: 1492,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_ServiceStatCards__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n                    serviceSummary: serviceSummary,\n                    serviceSummaryLoading: serviceSummaryLoading,\n                    serviceSummaryError: serviceSummaryError\n                }, void 0, false, {\n                    fileName: \"/Users/lehoanganh/Documents/FB Network/FE/src/app/services/page.tsx\",\n                    lineNumber: 1506,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_ServiceStoreChartData__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {\n                    shopLoading: shopLoading,\n                    shopError: shopError,\n                    isMobile: isMobile,\n                    storeServiceChartData: storeServiceChartData\n                }, void 0, false, {\n                    fileName: \"/Users/lehoanganh/Documents/FB Network/FE/src/app/services/page.tsx\",\n                    lineNumber: 1513,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_ServicesRegionData__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n                    regionLoading: regionLoading,\n                    regionError: regionError,\n                    isMobile: isMobile,\n                    regionChartData: regionChartData\n                }, void 0, false, {\n                    fileName: \"/Users/lehoanganh/Documents/FB Network/FE/src/app/services/page.tsx\",\n                    lineNumber: 1521,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_ServicesTable__WEBPACK_IMPORTED_MODULE_9__[\"default\"], {\n                    serviceTableData: serviceTableData,\n                    serviceTableLoading: serviceTableLoading,\n                    serviceTableError: serviceTableError,\n                    serviceData: serviceData\n                }, void 0, false, {\n                    fileName: \"/Users/lehoanganh/Documents/FB Network/FE/src/app/services/page.tsx\",\n                    lineNumber: 1529,\n                    columnNumber: 9\n                }, this)\n            ]\n        }, void 0, true, {\n            fileName: \"/Users/lehoanganh/Documents/FB Network/FE/src/app/services/page.tsx\",\n            lineNumber: 1445,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/lehoanganh/Documents/FB Network/FE/src/app/services/page.tsx\",\n        lineNumber: 1444,\n        columnNumber: 5\n    }, this);\n}\n_s1(CustomerReportPage, \"FQWdeP67jUxIvAaos8gh4WbTyX0=\", true, function() {\n    return [\n        useApiData,\n        useApiData,\n        useApiData,\n        useApiData,\n        useApiData,\n        useApiData,\n        useApiData,\n        useApiData,\n        useApiData\n    ];\n});\n_c = CustomerReportPage;\nvar _c;\n$RefreshReg$(_c, \"CustomerReportPage\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/services/page.tsx\n"));

/***/ })

});