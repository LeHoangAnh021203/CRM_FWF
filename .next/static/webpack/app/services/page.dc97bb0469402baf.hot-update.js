"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/services/page",{

/***/ "(app-pages-browser)/./src/app/services/page.tsx":
/*!***********************************!*\
  !*** ./src/app/services/page.tsx ***!
  \***********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ CustomerReportPage)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _internationalized_date__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @internationalized/date */ \"(app-pages-browser)/./node_modules/@internationalized/date/dist/string.mjs\");\n/* harmony import */ var _internationalized_date__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @internationalized/date */ \"(app-pages-browser)/./node_modules/@internationalized/date/dist/queries.mjs\");\n/* harmony import */ var _ServicesFilter__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./ServicesFilter */ \"(app-pages-browser)/./src/app/services/ServicesFilter.tsx\");\n/* harmony import */ var _ServiceWeeklyChartData__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ServiceWeeklyChartData */ \"(app-pages-browser)/./src/app/services/ServiceWeeklyChartData.tsx\");\n/* harmony import */ var _ServicePieChartData__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ServicePieChartData */ \"(app-pages-browser)/./src/app/services/ServicePieChartData.tsx\");\n/* harmony import */ var _ServiceBottomPieData__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ServiceBottomPieData */ \"(app-pages-browser)/./src/app/services/ServiceBottomPieData.tsx\");\n/* harmony import */ var _ServiceStatCards__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ServiceStatCards */ \"(app-pages-browser)/./src/app/services/ServiceStatCards.tsx\");\n/* harmony import */ var _ServiceStoreChartData__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./ServiceStoreChartData */ \"(app-pages-browser)/./src/app/services/ServiceStoreChartData.tsx\");\n/* harmony import */ var _ServicesRegionData__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./ServicesRegionData */ \"(app-pages-browser)/./src/app/services/ServicesRegionData.tsx\");\n/* harmony import */ var _ServicesTable__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./ServicesTable */ \"(app-pages-browser)/./src/app/services/ServicesTable.tsx\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\n\n\n\n\n\n\n\n\n\nconst API_BASE_URL = \"https://d287f270836a.ngrok-free.app\";\nfunction useApiData(url, fromDate, toDate) {\n    _s();\n    const [data, setData] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"useApiData.useEffect\": ()=>{\n            // Skip API calls if URL is not available\n            if (!url || !API_BASE_URL) {\n                setLoading(false);\n                return;\n            }\n            setLoading(true);\n            setError(null);\n            fetch(url, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    fromDate,\n                    toDate\n                })\n            }).then({\n                \"useApiData.useEffect\": (res)=>{\n                    if (!res.ok) {\n                        // Don't throw error for 404, just return null data\n                        if (res.status === 404) {\n                            return null;\n                        }\n                        throw new Error(\"API error: \" + res.status);\n                    }\n                    return res.json();\n                }\n            }[\"useApiData.useEffect\"]).then({\n                \"useApiData.useEffect\": (data)=>{\n                    setData(data);\n                    setLoading(false);\n                }\n            }[\"useApiData.useEffect\"]).catch({\n                \"useApiData.useEffect\": (err)=>{\n                    // Only set error for non-404 errors\n                    if (!err.message.includes(\"404\")) {\n                        setError(err.message);\n                    }\n                    setLoading(false);\n                }\n            }[\"useApiData.useEffect\"]);\n        }\n    }[\"useApiData.useEffect\"], [\n        url,\n        fromDate,\n        toDate\n    ]);\n    return {\n        data,\n        loading,\n        error\n    };\n}\n_s(useApiData, \"RiL7vLwmC7ZWXKL/bXt2EIBjBYk=\");\nfunction CustomerReportPage() {\n    _s1();\n    var _s = $RefreshSig$();\n    // Load initial state from localStorage or use defaults\n    const getInitialDate = (key, defaultValue)=>{\n        if (true) {\n            const saved = localStorage.getItem(\"services_\".concat(key));\n            if (saved) {\n                try {\n                    const parsed = JSON.parse(saved);\n                    // Create date string in YYYY-MM-DD format\n                    const dateString = \"\".concat(parsed.year, \"-\").concat(String(parsed.month).padStart(2, '0'), \"-\").concat(String(parsed.day).padStart(2, '0'));\n                    return (0,_internationalized_date__WEBPACK_IMPORTED_MODULE_10__.parseDate)(dateString);\n                } catch (e) {\n                    console.warn(\"Failed to parse saved date for \".concat(key, \":\"), e);\n                }\n            }\n        }\n        return defaultValue;\n    };\n    const getInitialArray = (key, defaultValue)=>{\n        if (true) {\n            const saved = localStorage.getItem(\"services_\".concat(key));\n            if (saved) {\n                try {\n                    return JSON.parse(saved);\n                } catch (e) {\n                    console.warn(\"Failed to parse saved array for \".concat(key, \":\"), e);\n                }\n            }\n        }\n        return defaultValue;\n    };\n    const [startDate, setStartDate] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        \"CustomerReportPage.useState\": ()=>getInitialDate('startDate', (0,_internationalized_date__WEBPACK_IMPORTED_MODULE_11__.today)((0,_internationalized_date__WEBPACK_IMPORTED_MODULE_11__.getLocalTimeZone)()).subtract({\n                days: 7\n            }))\n    }[\"CustomerReportPage.useState\"]);\n    const [endDate, setEndDate] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        \"CustomerReportPage.useState\": ()=>getInitialDate('endDate', (0,_internationalized_date__WEBPACK_IMPORTED_MODULE_11__.today)((0,_internationalized_date__WEBPACK_IMPORTED_MODULE_11__.getLocalTimeZone)()))\n    }[\"CustomerReportPage.useState\"]);\n    const [selectedBranches, setSelectedBranches] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        \"CustomerReportPage.useState\": ()=>getInitialArray('selectedBranches', [])\n    }[\"CustomerReportPage.useState\"]);\n    const [selectedRegions, setSelectedRegions] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        \"CustomerReportPage.useState\": ()=>getInitialArray('selectedRegions', [])\n    }[\"CustomerReportPage.useState\"]);\n    const [selectedServiceTypes, setSelectedServiceTypes] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        \"CustomerReportPage.useState\": ()=>getInitialArray('selectedServiceTypes', [\n                \"Khách hàng Thành viên\",\n                \"KH trải nghiệm\",\n                \"Added on\",\n                \"Quà tặng\"\n            ])\n    }[\"CustomerReportPage.useState\"]);\n    const [selectedGenders, setSelectedGenders] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({\n        \"CustomerReportPage.useState\": ()=>getInitialArray('selectedGenders', [\n                \"Nam\",\n                \"Nữ\",\n                \"#N/A\"\n            ])\n    }[\"CustomerReportPage.useState\"]);\n    // Save state to localStorage whenever it changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CustomerReportPage.useEffect\": ()=>{\n            if (true) {\n                const dateData = {\n                    year: startDate.year,\n                    month: startDate.month,\n                    day: startDate.day\n                };\n                localStorage.setItem('services_startDate', JSON.stringify(dateData));\n                console.log('Saved startDate to localStorage:', dateData);\n            }\n        }\n    }[\"CustomerReportPage.useEffect\"], [\n        startDate\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CustomerReportPage.useEffect\": ()=>{\n            if (true) {\n                localStorage.setItem('services_endDate', JSON.stringify({\n                    year: endDate.year,\n                    month: endDate.month,\n                    day: endDate.day\n                }));\n            }\n        }\n    }[\"CustomerReportPage.useEffect\"], [\n        endDate\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CustomerReportPage.useEffect\": ()=>{\n            if (true) {\n                localStorage.setItem('services_selectedBranches', JSON.stringify(selectedBranches));\n            }\n        }\n    }[\"CustomerReportPage.useEffect\"], [\n        selectedBranches\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CustomerReportPage.useEffect\": ()=>{\n            if (true) {\n                localStorage.setItem('services_selectedRegions', JSON.stringify(selectedRegions));\n            }\n        }\n    }[\"CustomerReportPage.useEffect\"], [\n        selectedRegions\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CustomerReportPage.useEffect\": ()=>{\n            if (true) {\n                localStorage.setItem('services_selectedServiceTypes', JSON.stringify(selectedServiceTypes));\n            }\n        }\n    }[\"CustomerReportPage.useEffect\"], [\n        selectedServiceTypes\n    ]);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CustomerReportPage.useEffect\": ()=>{\n            if (true) {\n                localStorage.setItem('services_selectedGenders', JSON.stringify(selectedGenders));\n            }\n        }\n    }[\"CustomerReportPage.useEffect\"], [\n        selectedGenders\n    ]);\n    const fromDate = startDate ? \"\".concat(startDate.year, \"-\").concat(String(startDate.month).padStart(2, \"0\"), \"-\").concat(String(startDate.day).padStart(2, \"0\"), \"T00:00:00\") : \"\";\n    const toDate = endDate ? \"\".concat(endDate.year, \"-\").concat(String(endDate.month).padStart(2, \"0\"), \"-\").concat(String(endDate.day).padStart(2, \"0\"), \"T23:59:59\") : \"\";\n    // API call cho dữ liệu dịch vụ theo loại\n    const { data: serviceTypeData } = useApiData(\"\".concat(API_BASE_URL, \"/api/service-record/service-type-breakdown\"), fromDate, toDate);\n    const { data: serviceSummary, loading: serviceSummaryLoading, error: serviceSummaryError } = useApiData(\"\".concat(API_BASE_URL, \"/api/service-record/service-summary\"), fromDate, toDate);\n    const { data: regionData, loading: regionLoading, error: regionError } = useApiData(\"\".concat(API_BASE_URL, \"/api/service-record/region\"), fromDate, toDate);\n    const { data: shopData, loading: shopLoading, error: shopError } = useApiData(\"\".concat(API_BASE_URL, \"/api/service-record/shop\"), fromDate, toDate);\n    const { data: top10ServicesRevenueData, loading: top10ServicesLoading, error: top10ServicesError } = useApiData(\"\".concat(API_BASE_URL, \"/api/service-record/top10-services-revenue\"), fromDate, toDate);\n    const { data: top10ServicesUsageData, loading: top10ServicesUsageLoading, error: top10ServicesUsageError } = useApiData(\"\".concat(API_BASE_URL, \"/api/service-record/top10-services-usage\"), fromDate, toDate);\n    const { data: bottom3ServicesUsageData, loading: bottom3ServicesUsageLoading, error: bottom3ServicesUsageError } = useApiData(\"\".concat(API_BASE_URL, \"/api/service-record/bottom3-services-usage\"), fromDate, toDate);\n    const { data: bottom3ServicesRevenueData, loading: bottom3ServicesRevenueLoading, error: bottom3ServicesRevenueError } = useApiData(\"\".concat(API_BASE_URL, \"/api/service-record/bottom3-services-revenue\"), fromDate, toDate);\n    const { data: serviceTableData, loading: serviceTableLoading, error: serviceTableError } = useApiData(\"\".concat(API_BASE_URL, \"/api/service-record/top-table\"), fromDate, toDate);\n    // Hook lấy width window với debounce để tránh performance issues\n    function useWindowWidth() {\n        _s();\n        const [width, setWidth] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(1024);\n        (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n            \"CustomerReportPage.useWindowWidth.useEffect\": ()=>{\n                let timeoutId;\n                function handleResize() {\n                    clearTimeout(timeoutId);\n                    timeoutId = setTimeout({\n                        \"CustomerReportPage.useWindowWidth.useEffect.handleResize\": ()=>{\n                            setWidth(window.innerWidth);\n                        }\n                    }[\"CustomerReportPage.useWindowWidth.useEffect.handleResize\"], 100); // Debounce 100ms\n                }\n                handleResize();\n                window.addEventListener(\"resize\", handleResize);\n                return ({\n                    \"CustomerReportPage.useWindowWidth.useEffect\": ()=>{\n                        window.removeEventListener(\"resize\", handleResize);\n                        clearTimeout(timeoutId);\n                    }\n                })[\"CustomerReportPage.useWindowWidth.useEffect\"];\n            }\n        }[\"CustomerReportPage.useWindowWidth.useEffect\"], []);\n        return width;\n    }\n    _s(useWindowWidth, \"A0ohrnA7OUGzUufHaOdqkuy5d9A=\");\n    const windowWidth = useWindowWidth();\n    const isMobile = windowWidth < 640;\n    const ALL_SERVICE_TYPES = [\n        {\n            key: \"Khách hàng Thành viên\",\n            label: \"Combo\"\n        },\n        {\n            key: \"KH trải nghiệm\",\n            label: \"Dịch vụ\"\n        },\n        {\n            key: \"Added on\",\n            label: \"Added on\"\n        },\n        {\n            key: \"Quà tặng\",\n            label: \"Gifts\"\n        },\n        {\n            key: \"Fox card\",\n            label: \"Fox card\"\n        }\n    ];\n    const ALL_GENDERS = [\n        \"Nam\",\n        \"Nữ\",\n        \"#N/A\"\n    ];\n    const [regionSearch] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const locationOptions = react__WEBPACK_IMPORTED_MODULE_1___default().useMemo({\n        \"CustomerReportPage.useMemo[locationOptions]\": ()=>[\n                \"Crescent Mall Q7\",\n                \"Vincom Thảo Điền\",\n                \"Vista Verde\",\n                \"Aeon Mall Tân Phú Celadon\",\n                \"Westpoint Phạm Hùng\",\n                \"Aeon Mall Bình Tân\",\n                \"Vincom Phan Văn Trị\",\n                \"Vincom Landmark 81\",\n                \"TTTM Estella Place\",\n                \"Võ Thị Sáu Q.1\",\n                \"The Sun Avenue\",\n                \"Trương Định Q.3\",\n                \"Hoa Lan Q.PN\",\n                \"Nowzone Q.1\",\n                \"Everrich Infinity Q.5\",\n                \"SC VivoCity\",\n                \"Đảo Ngọc Ngũ Xã HN\",\n                \"Vincom Lê Văn Việt\",\n                \"The Bonatica Q.TB\",\n                \"Midtown Q.7\",\n                \"Trần Phú Đà Nẵng\",\n                \"Vincom Quang Trung\",\n                \"Vincom Bà Triệu\",\n                \"Imperia Sky Garden HN\",\n                \"Gold Coast Nha Trang\",\n                \"Riviera Point Q7\",\n                \"Saigon Ofice\",\n                \"Millenium Apartment Q.4\",\n                \"Parc Mall Q.8\",\n                \"Saigon Mia Trung Sơn\"\n            ]\n    }[\"CustomerReportPage.useMemo[locationOptions]\"], []);\n    const locationRegionMap = react__WEBPACK_IMPORTED_MODULE_1___default().useMemo({\n        \"CustomerReportPage.useMemo[locationRegionMap]\": ()=>({\n                \"Crescent Mall Q7\": \"HCM\",\n                \"Vincom Thảo Điền\": \"HCM\",\n                \"Vista Verde\": \"HCM\",\n                \"Aeon Mall Tân Phú Celadon\": \"HCM\",\n                \"Westpoint Phạm Hùng\": \"HCM\",\n                \"Aeon Mall Bình Tân\": \"HCM\",\n                \"Vincom Phan Văn Trị\": \"HCM\",\n                \"Vincom Landmark 81\": \"HCM\",\n                \"TTTM Estella Place\": \"HCM\",\n                \"Võ Thị Sáu Q.1\": \"HCM\",\n                \"The Sun Avenue\": \"HCM\",\n                \"Trương Định Q.3\": \"HCM\",\n                \"Hoa Lan Q.PN\": \"HCM\",\n                \"Nowzone Q.1\": \"HCM\",\n                \"Everrich Infinity Q.5\": \"HCM\",\n                \"SC VivoCity\": \"HCM\",\n                \"Vincom Lê Văn Việt\": \"HCM\",\n                \"The Bonatica Q.TB\": \"HCM\",\n                \"Midtown Q.7\": \"HCM\",\n                \"Riviera Point Q7\": \"HCM\",\n                \"Saigon Ofice\": \"HCM\",\n                \"Millenium Apartment Q.4\": \"HCM\",\n                \"Parc Mall Q.8\": \"HCM\",\n                \"Saigon Mia Trung Sơn\": \"HCM\",\n                \"Đảo Ngọc Ngũ Xã HN\": \"Hà Nội\",\n                \"Imperia Sky Garden HN\": \"Hà Nội\",\n                \"Vincom Bà Triệu\": \"Hà Nội\",\n                \"Gold Coast Nha Trang\": \"Nha Trang\",\n                \"Trần Phú Đà Nẵng\": \"Đà Nẵng\",\n                \"Vincom Quang Trung\": \"HCM\"\n            })\n    }[\"CustomerReportPage.useMemo[locationRegionMap]\"], []);\n    const data = react__WEBPACK_IMPORTED_MODULE_1___default().useMemo({\n        \"CustomerReportPage.useMemo[data]\": ()=>[\n                ...Array.from({\n                    length: 30\n                }, {\n                    \"CustomerReportPage.useMemo[data]\": (_, i)=>{\n                        const day = i + 1;\n                        const dateStr = \"\".concat(day, \" thg 6\");\n                        const allLocations = [\n                            \"Crescent Mall Q7\",\n                            \"Vincom Thảo Điền\",\n                            \"Vista Verde\",\n                            \"Aeon Mall Tân Phú Celadon\",\n                            \"Westpoint Phạm Hùng\",\n                            \"Aeon Mall Bình Tân\",\n                            \"Vincom Phan Văn Trị\",\n                            \"Vincom Landmark 81\",\n                            \"TTTM Estella Place\",\n                            \"Võ Thị Sáu Q.1\",\n                            \"The Sun Avenue\",\n                            \"Trương Định Q.3\",\n                            \"Hoa Lan Q.PN\",\n                            \"Nowzone Q.1\",\n                            \"Everrich Infinity Q.5\",\n                            \"SC VivoCity\",\n                            \"Đảo Ngọc Ngũ Xã HN\",\n                            \"Vincom Lê Văn Việt\",\n                            \"The Bonatica Q.TB\",\n                            \"Midtown Q.7\",\n                            \"Trần Phú Đà Nẵng\",\n                            \"Vincom Quang Trung\",\n                            \"Vincom Bà Triệu\",\n                            \"Imperia Sky Garden HN\",\n                            \"Gold Coast Nha Trang\",\n                            \"Riviera Point Q7\",\n                            \"Saigon Ofice\",\n                            \"Millenium Apartment Q.4\",\n                            \"Parc Mall Q.8\",\n                            \"Saigon Mia Trung Sơn\"\n                        ];\n                        return [\n                            {\n                                date: dateStr,\n                                value: 1200000 + i % 5 * 20000 + i * 1000,\n                                value2: 1000000 + i % 3 * 15000 + i * 800,\n                                type: \"KH trải nghiệm\",\n                                status: \"New\",\n                                gender: \"Nam\",\n                                region: locationRegionMap[allLocations[i % allLocations.length]],\n                                branch: allLocations[i % allLocations.length]\n                            },\n                            {\n                                date: dateStr,\n                                value: 1250000 + i % 4 * 18000 + i * 1200,\n                                value2: 1050000 + i % 2 * 17000 + i * 900,\n                                type: \"KH trải nghiệm\",\n                                status: \"New\",\n                                gender: \"Nữ\",\n                                region: locationRegionMap[allLocations[(i + 1) % allLocations.length]],\n                                branch: allLocations[(i + 1) % allLocations.length]\n                            },\n                            {\n                                date: dateStr,\n                                value: 1300000 + i % 6 * 22000 + i * 1100,\n                                value2: 1100000 + i % 4 * 13000 + i * 700,\n                                type: \"Khách hàng Thành viên\",\n                                status: \"New\",\n                                gender: \"Nam\",\n                                region: locationRegionMap[allLocations[(i + 2) % allLocations.length]],\n                                branch: allLocations[(i + 2) % allLocations.length]\n                            },\n                            {\n                                date: dateStr,\n                                value: 1350000 + i % 3 * 25000 + i * 900,\n                                value2: 1150000 + i % 5 * 12000 + i * 600,\n                                type: \"Khách hàng Thành viên\",\n                                status: \"New\",\n                                gender: \"Nữ\",\n                                region: locationRegionMap[allLocations[(i + 3) % allLocations.length]],\n                                branch: allLocations[(i + 3) % allLocations.length]\n                            }\n                        ];\n                    }\n                }[\"CustomerReportPage.useMemo[data]\"]).flat()\n            ]\n    }[\"CustomerReportPage.useMemo[data]\"], [\n        locationRegionMap\n    ]);\n    const TotalRegionalSales = [\n        {\n            date: \"9 thg 6, 2025\",\n            HCM: 100,\n            HaNoi: 90,\n            DaNang: 80,\n            NhaTrang: 70,\n            DaDongCua: 60,\n            type: \"Tổng\",\n            status: \"All\"\n        },\n        {\n            date: \"8 thg 6, 2025\",\n            HCM: 100,\n            HaNoi: 90,\n            DaNang: 80,\n            NhaTrang: 70,\n            DaDongCua: 60,\n            type: \"Tổng\",\n            status: \"All\"\n        },\n        {\n            date: \"7 thg 6, 2025\",\n            HCM: 100,\n            HaNoi: 90,\n            DaNang: 80,\n            NhaTrang: 70,\n            DaDongCua: 60,\n            type: \"Tổng\",\n            status: \"All\"\n        },\n        {\n            date: \"6 thg 6, 2025\",\n            HCM: 100,\n            HaNoi: 90,\n            DaNang: 80,\n            NhaTrang: 70,\n            DaDongCua: 60,\n            type: \"Tổng\",\n            status: \"All\"\n        },\n        {\n            date: \"5 thg 6, 2025\",\n            HCM: 100,\n            HaNoi: 90,\n            DaNang: 80,\n            NhaTrang: 70,\n            DaDongCua: 60,\n            type: \"Tổng\",\n            status: \"All\"\n        },\n        {\n            date: \"4 thg 6, 2025\",\n            HCM: 100,\n            HaNoi: 90,\n            DaNang: 80,\n            NhaTrang: 70,\n            DaDongCua: 60,\n            type: \"Tổng\",\n            status: \"All\"\n        },\n        {\n            date: \"3 thg 6, 2025\",\n            HCM: 100,\n            HaNoi: 90,\n            DaNang: 80,\n            NhaTrang: 70,\n            DaDongCua: 60,\n            type: \"Tổng\",\n            status: \"All\"\n        },\n        {\n            date: \"1 thg 6, 2025\",\n            HCM: 100,\n            HaNoi: 90,\n            DaNang: 80,\n            NhaTrang: 70,\n            DaDongCua: 60,\n            type: \"Tổng\",\n            status: \"All\"\n        },\n        {\n            date: \"2 thg 6, 2025\",\n            HCM: 100,\n            HaNoi: 90,\n            DaNang: 80,\n            NhaTrang: 70,\n            DaDongCua: 60,\n            type: \"Tổng\",\n            status: \"All\"\n        }\n    ];\n    function formatMoneyShort(val) {\n        if (val >= 1000000000000) return (val / 1000000000000).toFixed(1) + \" T\";\n        if (val >= 1000000000) return (val / 1000000000).toFixed(1) + \" T\";\n        if (val >= 1000000) return (val / 1000000).toFixed(1) + \" Tr\";\n        return val.toLocaleString();\n    }\n    const REGIONS = [\n        \"HCM\",\n        \"Hà Nội\",\n        \"Đà Nẵng\",\n        \"Nha Trang\",\n        \"Đã Đóng Cửa\",\n        \"Khác\"\n    ];\n    const isInWeek = react__WEBPACK_IMPORTED_MODULE_1___default().useCallback({\n        \"CustomerReportPage.useCallback[isInWeek]\": (d, start, end)=>{\n            const dDate = parseVNDate(d.date);\n            return dDate.compare(start) >= 0 && dDate.compare(end) <= 0;\n        }\n    }[\"CustomerReportPage.useCallback[isInWeek]\"], []);\n    // Đặt các biến tuần lên trước\n    const weekStart = startDate;\n    const weekEnd = endDate;\n    const prevWeekStart = startDate.subtract({\n        days: 7\n    });\n    const prevWeekEnd = startDate.subtract({\n        days: 1\n    });\n    const weekRevenueData = filterData(TotalRegionalSales, selectedRegions, selectedBranches);\n    const prevWeekRevenueData = filterData(TotalRegionalSales, selectedRegions, selectedBranches);\n    // Helper to map region display name to data key\n    function getRegionKey(region) {\n        switch(region){\n            case \"HCM\":\n                return \"HCM\";\n            case \"Hà Nội\":\n                return \"HaNoi\";\n            case \"Đà Nẵng\":\n                return \"DaNang\";\n            case \"Nha Trang\":\n                return \"NhaTrang\";\n            case \"Đã Đóng Cửa\":\n                return \"DaDongCua\";\n            case \"Khác\":\n                return \"Khac\";\n            default:\n                return \"HCM\";\n        }\n    }\n    const regionStats = REGIONS.map((region)=>{\n        const ordersThisWeek = data.filter((d)=>d.region === region && isInWeek(d, weekStart, weekEnd)).length;\n        const ordersLastWeek = data.filter((d)=>d.region === region && isInWeek(d, prevWeekStart, prevWeekEnd)).length;\n        const deltaOrders = ordersThisWeek - ordersLastWeek;\n        const regionKey = getRegionKey(region);\n        const revenueThisWeek = weekRevenueData.reduce((sum, item)=>{\n            var _item_regionKey;\n            return sum + Number((_item_regionKey = item[regionKey]) !== null && _item_regionKey !== void 0 ? _item_regionKey : 0);\n        }, 0);\n        const revenueLastWeek = prevWeekRevenueData.reduce((sum, item)=>{\n            var _item_regionKey;\n            return sum + Number((_item_regionKey = item[regionKey]) !== null && _item_regionKey !== void 0 ? _item_regionKey : 0);\n        }, 0);\n        const percentDelta = revenueLastWeek === 0 ? null : (revenueThisWeek - revenueLastWeek) / revenueLastWeek * 100;\n        return {\n            region,\n            ordersThisWeek,\n            deltaOrders,\n            revenueThisWeek,\n            percentDelta,\n            revenueLastWeek\n        };\n    });\n    function parseVNDate(str) {\n        let match = str.match(/^(\\d{1,2}) thg (\\d{1,2}), (\\d{4})$/);\n        if (match) {\n            const [, day, month, year] = match;\n            return (0,_internationalized_date__WEBPACK_IMPORTED_MODULE_10__.parseDate)(\"\".concat(year, \"-\").concat(month.padStart(2, \"0\"), \"-\").concat(day.padStart(2, \"0\")));\n        }\n        match = str.match(/^(\\d{1,2}) thg (\\d{1,2})$/);\n        if (match) {\n            const [, day, month] = match;\n            const year = String(new Date().getFullYear());\n            return (0,_internationalized_date__WEBPACK_IMPORTED_MODULE_10__.parseDate)(\"\".concat(year, \"-\").concat(month.padStart(2, \"0\"), \"-\").concat(day.padStart(2, \"0\")));\n        }\n        throw new Error(\"Invalid date format: \" + str);\n    }\n    // Sửa filterData để lọc theo region/branch nếu có\n    function filterData(data, selectedRegions, selectedBranches) {\n        return data.filter((item)=>{\n            const matchRegion = !selectedRegions || selectedRegions.length === 0 || !item.region || selectedRegions.includes(item.region);\n            const matchBranch = !selectedBranches || selectedBranches.length === 0 || !item.branch || selectedBranches.includes(item.branch);\n            return matchRegion && matchBranch;\n        });\n    }\n    const [serviceSearch] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const [genderSearch] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    const serviceDropdownRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const genderDropdownRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    // Đóng dropdown khi click ngoài\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)({\n        \"CustomerReportPage.useEffect\": ()=>{\n            function handleClick(e) {\n                if (serviceDropdownRef.current && !serviceDropdownRef.current.contains(e.target)) {}\n                if (genderDropdownRef.current && !genderDropdownRef.current.contains(e.target)) {}\n            }\n            document.addEventListener(\"mousedown\", handleClick);\n            return ({\n                \"CustomerReportPage.useEffect\": ()=>document.removeEventListener(\"mousedown\", handleClick)\n            })[\"CustomerReportPage.useEffect\"];\n        }\n    }[\"CustomerReportPage.useEffect\"], []);\n    // Filter options theo search\n    const filteredServiceTypes = ALL_SERVICE_TYPES.filter((s)=>s.label.toLowerCase().includes(serviceSearch.toLowerCase()));\n    const filteredGenders = ALL_GENDERS.filter((g)=>g.toLowerCase().includes(genderSearch.toLowerCase()));\n    const regionOptions = regionStats.map((r)=>({\n            name: r.region,\n            total: Object.values(locationRegionMap).filter((reg)=>reg === r.region).length\n        }));\n    const filteredRegionOptions = react__WEBPACK_IMPORTED_MODULE_1___default().useMemo({\n        \"CustomerReportPage.useMemo[filteredRegionOptions]\": ()=>regionOptions.filter({\n                \"CustomerReportPage.useMemo[filteredRegionOptions]\": (r)=>r.name.toLowerCase().includes(regionSearch.toLowerCase())\n            }[\"CustomerReportPage.useMemo[filteredRegionOptions]\"])\n    }[\"CustomerReportPage.useMemo[filteredRegionOptions]\"], [\n        regionOptions,\n        regionSearch\n    ]);\n    // Tính top 10 location (chi nhánh/cửa hàng) theo thực thu tuần này\n    const locationRevenueMap = {};\n    locationOptions.forEach((loc)=>{\n        locationRevenueMap[loc] = data.filter((d)=>d.branch === loc && isInWeek(d, weekStart, weekEnd)).reduce((sum, d)=>sum + d.value, 0);\n    });\n    const ordersByDay = {};\n    data.forEach((d)=>{\n        if (d.type !== \"Khách hàng Thành viên\") {\n            if (!ordersByDay[d.date]) {\n                ordersByDay[d.date] = {\n                    count: 0,\n                    avgPerShop: 0\n                };\n            }\n            ordersByDay[d.date].count++;\n        }\n    });\n    // Tính trung bình số lượng đơn tại mỗi shop cho từng ngày\n    Object.keys(ordersByDay).forEach((date)=>{\n        // Đếm số shop có đơn trong ngày đó\n        const shops = new Set(data.filter((d)=>d.date === date && d.type !== \"Khách hàng Thành viên\").map((d)=>d.branch));\n        ordersByDay[date].avgPerShop = shops.size > 0 ? Math.round(ordersByDay[date].count / shops.size) : 0;\n    });\n    const ordersByDayArr = Object.entries(ordersByDay).sort((a, b)=>{\n        // Sort theo ngày tăng dần\n        const [d1, m1] = a[0].split(\" thg \");\n        const [d2, m2] = b[0].split(\" thg \");\n        return Number(m1) !== Number(m2) ? Number(m1) - Number(m2) : Number(d1) - Number(d2);\n    });\n    // Giả lập số đơn hàng mỗi ngày (ví dụ 31 ngày)\n    const fakeOrderCounts = [\n        240,\n        173,\n        201,\n        281,\n        269,\n        167,\n        166,\n        131,\n        228,\n        247,\n        380,\n        403,\n        217,\n        193,\n        210,\n        236,\n        244,\n        367,\n        411,\n        271,\n        256,\n        288,\n        291,\n        358,\n        398,\n        309,\n        191,\n        49,\n        17,\n        31,\n        67\n    ];\n    // Gán lại vào ordersByDayArr\n    ordersByDayArr.forEach((param, idx)=>{\n        let [, val] = param;\n        val.count = fakeOrderCounts[idx % fakeOrderCounts.length];\n        // Tạo trung bình shop ngẫu nhiên (5-15)\n        val.avgPerShop = 5 + Math.floor(Math.random() * 11);\n    });\n    const weekDates = react__WEBPACK_IMPORTED_MODULE_1___default().useMemo({\n        \"CustomerReportPage.useMemo[weekDates]\": ()=>{\n            const dates = [];\n            let d = weekStart;\n            while(d.compare(weekEnd) <= 0){\n                dates.push(d);\n                d = d.add({\n                    days: 1\n                });\n            }\n            return dates;\n        }\n    }[\"CustomerReportPage.useMemo[weekDates]\"], [\n        weekStart,\n        weekEnd\n    ]);\n    // Xử lý dữ liệu API cho chart tổng dịch vụ thực hiện trong tuần\n    const weeklyServiceChartData = react__WEBPACK_IMPORTED_MODULE_1___default().useMemo({\n        \"CustomerReportPage.useMemo[weeklyServiceChartData]\": ()=>{\n            if (!serviceTypeData) {\n                // Fallback data nếu API chưa load\n                return weekDates.map({\n                    \"CustomerReportPage.useMemo[weeklyServiceChartData]\": (dateObj)=>{\n                        const dateStr = \"\".concat(dateObj.day, \" thg \").concat(dateObj.month);\n                        return {\n                            date: dateStr,\n                            combo: 0,\n                            service: 0,\n                            addedon: 0,\n                            foxcard: 0\n                        };\n                    }\n                }[\"CustomerReportPage.useMemo[weeklyServiceChartData]\"]);\n            }\n            // Tạo map để nhóm dữ liệu theo ngày\n            const dataByDate = new Map();\n            // Khởi tạo dữ liệu cho tất cả các ngày trong tuần\n            weekDates.forEach({\n                \"CustomerReportPage.useMemo[weeklyServiceChartData]\": (dateObj)=>{\n                    const dateKey = \"\".concat(dateObj.year, \"-\").concat(String(dateObj.month).padStart(2, \"0\"), \"-\").concat(String(dateObj.day).padStart(2, \"0\"));\n                    dataByDate.set(dateKey, {\n                        combo: 0,\n                        service: 0,\n                        addedon: 0,\n                        foxcard: 0\n                    });\n                }\n            }[\"CustomerReportPage.useMemo[weeklyServiceChartData]\"]);\n            // Xử lý dữ liệu từ API\n            serviceTypeData.forEach({\n                \"CustomerReportPage.useMemo[weeklyServiceChartData]\": (item)=>{\n                    const dateKey = item.date;\n                    const existing = dataByDate.get(dateKey);\n                    if (existing) {\n                        switch(item.type){\n                            case \"Combo\":\n                                existing.combo = item.count;\n                                break;\n                            case \"Dịch vụ\":\n                                existing.service = item.count;\n                                break;\n                            case \"Khác\":\n                                existing.addedon = item.count;\n                                break;\n                            default:\n                                break;\n                        }\n                    }\n                }\n            }[\"CustomerReportPage.useMemo[weeklyServiceChartData]\"]);\n            // Chuyển đổi thành format cho chart\n            return weekDates.map({\n                \"CustomerReportPage.useMemo[weeklyServiceChartData]\": (dateObj)=>{\n                    const dateKey = \"\".concat(dateObj.year, \"-\").concat(String(dateObj.month).padStart(2, \"0\"), \"-\").concat(String(dateObj.day).padStart(2, \"0\"));\n                    const data = dataByDate.get(dateKey) || {\n                        combo: 0,\n                        service: 0,\n                        addedon: 0,\n                        foxcard: 0\n                    };\n                    const total = data.combo + data.service + data.addedon;\n                    const foxcard = Math.round(total * 0.218);\n                    return {\n                        date: \"\".concat(dateObj.day, \" thg \").concat(dateObj.month),\n                        combo: data.combo,\n                        service: data.service,\n                        addedon: data.addedon,\n                        foxcard: foxcard\n                    };\n                }\n            }[\"CustomerReportPage.useMemo[weeklyServiceChartData]\"]);\n        }\n    }[\"CustomerReportPage.useMemo[weeklyServiceChartData]\"], [\n        serviceTypeData,\n        weekDates\n    ]);\n    // Xử lý dữ liệu cho chart tổng dịch vụ thực hiện theo khu vực\n    const regionChartData = react__WEBPACK_IMPORTED_MODULE_1___default().useMemo({\n        \"CustomerReportPage.useMemo[regionChartData]\": ()=>{\n            if (!regionData) return [];\n            // Nhóm dữ liệu theo khu vực\n            const regionMap = new Map();\n            regionData.forEach({\n                \"CustomerReportPage.useMemo[regionChartData]\": (item)=>{\n                    if (!regionMap.has(item.region)) {\n                        regionMap.set(item.region, {\n                            combo: 0,\n                            service: 0,\n                            other: 0\n                        });\n                    }\n                    const region = regionMap.get(item.region);\n                    switch(item.type){\n                        case \"Combo\":\n                            region.combo = item.total;\n                            break;\n                        case \"Dịch vụ\":\n                            region.service = item.total;\n                            break;\n                        case \"Khác\":\n                            region.other = item.total;\n                            break;\n                    }\n                }\n            }[\"CustomerReportPage.useMemo[regionChartData]\"]);\n            // Chuyển đổi thành format cho chart\n            return Array.from(regionMap.entries()).map({\n                \"CustomerReportPage.useMemo[regionChartData]\": (param)=>{\n                    let [regionName, data] = param;\n                    return {\n                        region: regionName,\n                        combo: data.combo,\n                        service: data.service,\n                        other: data.other,\n                        total: data.combo + data.service + data.other\n                    };\n                }\n            }[\"CustomerReportPage.useMemo[regionChartData]\"]).sort({\n                \"CustomerReportPage.useMemo[regionChartData]\": (a, b)=>b.total - a.total\n            }[\"CustomerReportPage.useMemo[regionChartData]\"]); // Sắp xếp theo tổng giảm dần\n        }\n    }[\"CustomerReportPage.useMemo[regionChartData]\"], [\n        regionData\n    ]);\n    // Dữ liệu cho bảng dịch vụ\n    const serviceData = react__WEBPACK_IMPORTED_MODULE_1___default().useMemo({\n        \"CustomerReportPage.useMemo[serviceData]\": ()=>{\n            if (!serviceTypeData) return [];\n            const serviceMap = new Map();\n            serviceTypeData.forEach({\n                \"CustomerReportPage.useMemo[serviceData]\": (item)=>{\n                    const key = item.type;\n                    if (!serviceMap.has(key)) {\n                        serviceMap.set(key, {\n                            count: 0,\n                            type: item.type\n                        });\n                    }\n                    serviceMap.get(key).count += item.count;\n                }\n            }[\"CustomerReportPage.useMemo[serviceData]\"]);\n            const totalCount = Array.from(serviceMap.values()).reduce({\n                \"CustomerReportPage.useMemo[serviceData].totalCount\": (sum, item)=>sum + item.count\n            }[\"CustomerReportPage.useMemo[serviceData].totalCount\"], 0);\n            return Array.from(serviceMap.entries()).map({\n                \"CustomerReportPage.useMemo[serviceData]\": (param)=>{\n                    let [key, item] = param;\n                    return {\n                        tenDichVu: key,\n                        loaiDichVu: key,\n                        soLuong: item.count,\n                        tongGia: item.count * 1000000,\n                        percentSoLuong: totalCount > 0 ? (item.count / totalCount * 100).toFixed(1) : \"0.0\",\n                        percentTongGia: totalCount > 0 ? (item.count / totalCount * 100).toFixed(1) : \"0.0\"\n                    };\n                }\n            }[\"CustomerReportPage.useMemo[serviceData]\"]);\n        }\n    }[\"CustomerReportPage.useMemo[serviceData]\"], [\n        serviceTypeData\n    ]);\n    // Lấy danh sách các cửa hàng\n    const storeNames = locationOptions;\n    // Bổ sung data mẫu cho các trường type và gender nếu chưa có\n    // (Chỉ thêm vào cuối mảng data, không ảnh hưởng logic cũ)\n    if (!data.some((d)=>d.type === \"Added on\")) {\n        data.push({\n            date: \"\".concat(weekStart.day, \" thg \").concat(weekStart.month),\n            value: 1000000,\n            value2: 500000,\n            type: \"Added on\",\n            status: \"New\",\n            gender: \"Nam\",\n            region: \"HCM\",\n            branch: \"Crescent Mall Q7\"\n        });\n    }\n    if (!data.some((d)=>d.type === \"Quà tặng\")) {\n        data.push({\n            date: \"\".concat(weekStart.day, \" thg \").concat(weekStart.month),\n            value: 800000,\n            value2: 300000,\n            type: \"Quà tặng\",\n            status: \"New\",\n            gender: \"#N/A\",\n            region: \"HCM\",\n            branch: \"Vincom Landmark 81\"\n        });\n    }\n    if (!data.some((d)=>d.gender === \"#N/A\")) {\n        data.push({\n            date: \"\".concat(weekStart.day, \" thg \").concat(weekStart.month),\n            value: 1200000,\n            value2: 600000,\n            type: \"KH trải nghiệm\",\n            status: \"New\",\n            gender: \"#N/A\",\n            region: \"HCM\",\n            branch: \"Vista Verde\"\n        });\n    }\n    // Tính số lượng từng loại dịch vụ theo từng cửa hàng từ API data\n    const storeServiceChartData = shopData ? (()=>{\n        // Group data by shop name\n        const shopGroups = shopData.reduce((acc, item)=>{\n            if (!acc[item.shopName]) {\n                acc[item.shopName] = {};\n            }\n            acc[item.shopName][item.serviceType] = item.total;\n            return acc;\n        }, {});\n        // Convert to chart format\n        return Object.entries(shopGroups).map((param)=>{\n            let [shopName, services] = param;\n            const combo = services[\"Combo\"] || 0;\n            const service = services[\"Dịch vụ\"] || 0;\n            const other = services[\"Khác\"] || 0;\n            const total = combo + service + other;\n            return {\n                store: shopName,\n                combo,\n                service,\n                other,\n                total\n            };\n        }).sort((a, b)=>b.total - a.total);\n    })() : storeNames.map((store)=>{\n        const storeData = data.filter((d)=>d.branch === store && isInWeek(d, weekStart, weekEnd) && selectedServiceTypes.includes(d.type) && selectedGenders.includes(d.gender));\n        const combo = storeData.filter((d)=>d.type === \"Khách hàng Thành viên\").length;\n        const service = storeData.filter((d)=>d.type === \"KH trải nghiệm\").length;\n        const addedon = storeData.filter((d)=>d.type === \"Added on\").length;\n        const gifts = storeData.filter((d)=>d.type === \"Quà tặng\").length;\n        // Fox card: giả lập 21.8% tổng số đơn của cửa hàng\n        const total = combo + service + addedon + gifts;\n        const foxcard = Math.round(total * 0.218);\n        return {\n            store,\n            combo,\n            service,\n            addedon,\n            gifts,\n            foxcard,\n            total\n        };\n    }).sort((a, b)=>b.total - a.total);\n    // Tính tổng actual price cho từng giới tính trong tuần (theo filter dịch vụ nếu muốn)\n    const genderActualPrice = ALL_GENDERS.map((gender)=>{\n        // Lọc theo tuần, theo filter dịch vụ nếu muốn\n        const filtered = data.filter((d)=>d.gender === gender && isInWeek(d, weekStart, weekEnd) && selectedServiceTypes.includes(d.type));\n        const total = filtered.reduce((sum, d)=>sum + d.value, 0);\n        return {\n            gender,\n            total\n        };\n    });\n    // Filtered data for pie charts and other components\n    const filteredPieData = data.filter((d)=>isInWeek(d, weekStart, weekEnd) && (selectedRegions.length === 0 || !d.region || selectedRegions.includes(d.region)) && (selectedBranches.length === 0 || !d.branch || selectedBranches.includes(d.branch)) && selectedServiceTypes.includes(d.type) && selectedGenders.includes(d.gender));\n    // Pie chart data for tỉ lệ dịch vụ/combo/cộng thêm (có filter)\n    const pieChartData = react__WEBPACK_IMPORTED_MODULE_1___default().useMemo({\n        \"CustomerReportPage.useMemo[pieChartData]\": ()=>{\n            if (serviceSummary) {\n                // Sử dụng dữ liệu API serviceSummary\n                const pieData = [\n                    {\n                        key: \"combo\",\n                        label: \"Combo\",\n                        value: serviceSummary.totalCombo,\n                        color: \"#795548\"\n                    },\n                    {\n                        key: \"service\",\n                        label: \"Dịch vụ\",\n                        value: serviceSummary.totalLe,\n                        color: \"#c5e1a5\"\n                    },\n                    {\n                        key: \"addedon\",\n                        label: \"Added on\",\n                        value: serviceSummary.totalCT,\n                        color: \"#f16a3f\"\n                    },\n                    {\n                        key: \"gifts\",\n                        label: \"Gifts\",\n                        value: serviceSummary.totalGift,\n                        color: \"#8fd1fc\"\n                    }\n                ];\n                const totalPie = pieData.reduce({\n                    \"CustomerReportPage.useMemo[pieChartData].totalPie\": (sum, d)=>sum + d.value\n                }[\"CustomerReportPage.useMemo[pieChartData].totalPie\"], 0);\n                const foxCardValue = Math.round(totalPie * 0.218);\n                return [\n                    ...pieData,\n                    {\n                        key: \"foxcard\",\n                        label: \"Fox card\",\n                        value: foxCardValue,\n                        color: \"#b26e7a\"\n                    }\n                ];\n            }\n            // Fallback data nếu API chưa load\n            const pieData = [\n                {\n                    key: \"combo\",\n                    label: \"Combo\",\n                    value: filteredPieData.filter({\n                        \"CustomerReportPage.useMemo[pieChartData]\": (d)=>d.type === \"Khách hàng Thành viên\"\n                    }[\"CustomerReportPage.useMemo[pieChartData]\"]).length,\n                    color: \"#795548\"\n                },\n                {\n                    key: \"service\",\n                    label: \"Dịch vụ\",\n                    value: filteredPieData.filter({\n                        \"CustomerReportPage.useMemo[pieChartData]\": (d)=>d.type === \"KH trải nghiệm\"\n                    }[\"CustomerReportPage.useMemo[pieChartData]\"]).length,\n                    color: \"#c5e1a5\"\n                },\n                {\n                    key: \"addedon\",\n                    label: \"Added on\",\n                    value: filteredPieData.filter({\n                        \"CustomerReportPage.useMemo[pieChartData]\": (d)=>d.type === \"Added on\"\n                    }[\"CustomerReportPage.useMemo[pieChartData]\"]).length,\n                    color: \"#f16a3f\"\n                },\n                {\n                    key: \"gifts\",\n                    label: \"Gifts\",\n                    value: filteredPieData.filter({\n                        \"CustomerReportPage.useMemo[pieChartData]\": (d)=>d.type === \"Quà tặng\"\n                    }[\"CustomerReportPage.useMemo[pieChartData]\"]).length,\n                    color: \"#8fd1fc\"\n                }\n            ];\n            const totalPie = pieData.reduce({\n                \"CustomerReportPage.useMemo[pieChartData].totalPie\": (sum, d)=>sum + d.value\n            }[\"CustomerReportPage.useMemo[pieChartData].totalPie\"], 0);\n            const foxCardValue = Math.round(totalPie * 0.218);\n            return [\n                ...pieData,\n                {\n                    key: \"foxcard\",\n                    label: \"Fox card\",\n                    value: foxCardValue,\n                    color: \"#b26e7a\"\n                }\n            ];\n        }\n    }[\"CustomerReportPage.useMemo[pieChartData]\"], [\n        serviceSummary,\n        filteredPieData\n    ]);\n    // PieChart top 10 dịch vụ theo số lượng (có filter)\n    const pieTop10Data = react__WEBPACK_IMPORTED_MODULE_1___default().useMemo({\n        \"CustomerReportPage.useMemo[pieTop10Data]\": ()=>{\n            if (top10ServicesRevenueData) {\n                // Sử dụng dữ liệu API\n                return top10ServicesRevenueData.map({\n                    \"CustomerReportPage.useMemo[pieTop10Data]\": (service, idx)=>({\n                            name: service.serviceName,\n                            value: service.servicePrice,\n                            color: \"hsl(0,0%,\".concat(40 + idx * 5, \"%)\")\n                        })\n                }[\"CustomerReportPage.useMemo[pieTop10Data]\"]);\n            }\n            // Fallback data nếu API chưa load\n            const filteredServiceData = data.filter({\n                \"CustomerReportPage.useMemo[pieTop10Data].filteredServiceData\": (d)=>isInWeek(d, weekStart, weekEnd) && (selectedRegions.length === 0 || !d.region || selectedRegions.includes(d.region)) && (selectedBranches.length === 0 || !d.branch || selectedBranches.includes(d.branch)) && selectedServiceTypes.includes(d.type) && selectedGenders.includes(d.gender)\n            }[\"CustomerReportPage.useMemo[pieTop10Data].filteredServiceData\"]);\n            // Lấy tên dịch vụ (ưu tiên d.serviceName, fallback d.type)\n            const serviceCountMap = new Map();\n            filteredServiceData.forEach({\n                \"CustomerReportPage.useMemo[pieTop10Data]\": (d)=>{\n                    const name = d.serviceName || d.type;\n                    serviceCountMap.set(name, (serviceCountMap.get(name) || 0) + 1);\n                }\n            }[\"CustomerReportPage.useMemo[pieTop10Data]\"]);\n            const sortedServices = Array.from(serviceCountMap.entries()).sort({\n                \"CustomerReportPage.useMemo[pieTop10Data].sortedServices\": (a, b)=>b[1] - a[1]\n            }[\"CustomerReportPage.useMemo[pieTop10Data].sortedServices\"]);\n            const top10Services = sortedServices.slice(0, 10);\n            const otherCount = sortedServices.slice(10).reduce({\n                \"CustomerReportPage.useMemo[pieTop10Data].otherCount\": (sum, param)=>{\n                    let [, count] = param;\n                    return sum + count;\n                }\n            }[\"CustomerReportPage.useMemo[pieTop10Data].otherCount\"], 0);\n            const result = top10Services.map({\n                \"CustomerReportPage.useMemo[pieTop10Data].result\": (param, idx)=>{\n                    let [name, value] = param;\n                    return {\n                        name,\n                        value,\n                        color: \"hsl(0,0%,\".concat(40 + idx * 5, \"%)\")\n                    };\n                }\n            }[\"CustomerReportPage.useMemo[pieTop10Data].result\"]);\n            if (otherCount > 0) {\n                result.push({\n                    name: \"Khác\",\n                    value: otherCount,\n                    color: \"#ededed\"\n                });\n            }\n            return result;\n        }\n    }[\"CustomerReportPage.useMemo[pieTop10Data]\"], [\n        top10ServicesRevenueData,\n        data,\n        weekStart,\n        weekEnd,\n        isInWeek,\n        selectedRegions,\n        selectedBranches,\n        selectedServiceTypes,\n        selectedGenders\n    ]);\n    // PieChart top 10 dịch vụ theo giá buổi (có filter)\n    const pieTop10AvgData = react__WEBPACK_IMPORTED_MODULE_1___default().useMemo({\n        \"CustomerReportPage.useMemo[pieTop10AvgData]\": ()=>{\n            if (top10ServicesUsageData) {\n                // Sử dụng dữ liệu API\n                return top10ServicesUsageData.map({\n                    \"CustomerReportPage.useMemo[pieTop10AvgData]\": (service, idx)=>({\n                            name: service.serviceName,\n                            value: service.count,\n                            color: \"hsl(30, 100%, \".concat(45 + idx * 5, \"%)\")\n                        })\n                }[\"CustomerReportPage.useMemo[pieTop10AvgData]\"]);\n            }\n            // Fallback data nếu API chưa load\n            const serviceValueMap = new Map();\n            filteredPieData.forEach({\n                \"CustomerReportPage.useMemo[pieTop10AvgData]\": (d)=>{\n                    const name = d.serviceName || d.type;\n                    if (!serviceValueMap.has(name)) {\n                        serviceValueMap.set(name, {\n                            totalValue: 0,\n                            count: 0\n                        });\n                    }\n                    const obj = serviceValueMap.get(name);\n                    obj.totalValue += d.value;\n                    obj.count += 1;\n                }\n            }[\"CustomerReportPage.useMemo[pieTop10AvgData]\"]);\n            const serviceAvgArr = Array.from(serviceValueMap.entries()).map({\n                \"CustomerReportPage.useMemo[pieTop10AvgData].serviceAvgArr\": (param)=>{\n                    let [name, { totalValue, count }] = param;\n                    return {\n                        name,\n                        avg: count > 0 ? totalValue / count : 0,\n                        count\n                    };\n                }\n            }[\"CustomerReportPage.useMemo[pieTop10AvgData].serviceAvgArr\"]);\n            const sortedAvg = serviceAvgArr.sort({\n                \"CustomerReportPage.useMemo[pieTop10AvgData].sortedAvg\": (a, b)=>b.avg - a.avg\n            }[\"CustomerReportPage.useMemo[pieTop10AvgData].sortedAvg\"]);\n            const top10Avg = sortedAvg.slice(0, 10);\n            const otherAvgSum = sortedAvg.slice(10).reduce({\n                \"CustomerReportPage.useMemo[pieTop10AvgData].otherAvgSum\": (sum, s)=>sum + s.avg\n            }[\"CustomerReportPage.useMemo[pieTop10AvgData].otherAvgSum\"], 0);\n            const result = top10Avg.map({\n                \"CustomerReportPage.useMemo[pieTop10AvgData].result\": (s, idx)=>({\n                        name: s.name,\n                        value: s.avg,\n                        color: \"hsl(30, 100%, \".concat(45 + idx * 5, \"%)\")\n                    })\n            }[\"CustomerReportPage.useMemo[pieTop10AvgData].result\"]);\n            if (sortedAvg.length > 10) {\n                result.push({\n                    name: \"Khác\",\n                    value: otherAvgSum,\n                    color: \"#ffe0b2\"\n                });\n            }\n            return result;\n        }\n    }[\"CustomerReportPage.useMemo[pieTop10AvgData]\"], [\n        top10ServicesUsageData,\n        filteredPieData\n    ]);\n    const renderPieLabel = (param)=>{\n        let { percent, x, y, index } = param;\n        var _pieTop10Data_;\n        if (isMobile && percent !== undefined && percent < 0.15) return null;\n        if (percent !== undefined && percent < 0.05) return null;\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"text\", {\n            x: x,\n            y: y,\n            fill: ((_pieTop10Data_ = pieTop10Data[index !== null && index !== void 0 ? index : 0]) === null || _pieTop10Data_ === void 0 ? void 0 : _pieTop10Data_.color) || \"#333\",\n            fontSize: isMobile ? 10 : 14,\n            fontWeight: \"bold\",\n            textAnchor: \"middle\",\n            dominantBaseline: \"central\",\n            children: [\n                (percent * 100).toFixed(1),\n                \"%\"\n            ]\n        }, void 0, true, {\n            fileName: \"/Users/lehoanganh/Documents/FB Network/FE/src/app/services/page.tsx\",\n            lineNumber: 1384,\n            columnNumber: 7\n        }, this);\n    };\n    const bottom3Data = react__WEBPACK_IMPORTED_MODULE_1___default().useMemo({\n        \"CustomerReportPage.useMemo[bottom3Data]\": ()=>{\n            if (bottom3ServicesUsageData) {\n                // Sử dụng dữ liệu API\n                const grayShades = [\n                    \"#bdbdbd\",\n                    \"#9e9e9e\",\n                    \"#e0e0e0\"\n                ];\n                return bottom3ServicesUsageData.map({\n                    \"CustomerReportPage.useMemo[bottom3Data]\": (service, idx)=>({\n                            name: service.serviceName,\n                            value: service.count,\n                            color: grayShades[idx % grayShades.length]\n                        })\n                }[\"CustomerReportPage.useMemo[bottom3Data]\"]);\n            }\n            // Fallback data nếu API chưa load\n            const serviceCountMap = new Map();\n            filteredPieData.forEach({\n                \"CustomerReportPage.useMemo[bottom3Data]\": (d)=>{\n                    const name = d.serviceName || d.type;\n                    serviceCountMap.set(name, (serviceCountMap.get(name) || 0) + 1);\n                }\n            }[\"CustomerReportPage.useMemo[bottom3Data]\"]);\n            const sorted = Array.from(serviceCountMap.entries()).sort({\n                \"CustomerReportPage.useMemo[bottom3Data].sorted\": (a, b)=>a[1] - b[1]\n            }[\"CustomerReportPage.useMemo[bottom3Data].sorted\"]);\n            const bottom3 = sorted.slice(0, 3);\n            const grayShades = [\n                \"#bdbdbd\",\n                \"#9e9e9e\",\n                \"#e0e0e0\"\n            ];\n            return bottom3.map({\n                \"CustomerReportPage.useMemo[bottom3Data]\": (param, idx)=>{\n                    let [name, value] = param;\n                    return {\n                        name,\n                        value,\n                        color: grayShades[idx % grayShades.length]\n                    };\n                }\n            }[\"CustomerReportPage.useMemo[bottom3Data]\"]);\n        }\n    }[\"CustomerReportPage.useMemo[bottom3Data]\"], [\n        bottom3ServicesUsageData,\n        filteredPieData\n    ]);\n    // Data cho bottom 3 dịch vụ theo giá buổi\n    const bottom3RevenueData = react__WEBPACK_IMPORTED_MODULE_1___default().useMemo({\n        \"CustomerReportPage.useMemo[bottom3RevenueData]\": ()=>{\n            if (bottom3ServicesRevenueData) {\n                // Sử dụng dữ liệu API\n                const grayShades = [\n                    \"#bdbdbd\",\n                    \"#9e9e9e\",\n                    \"#e0e0e0\"\n                ];\n                return bottom3ServicesRevenueData.map({\n                    \"CustomerReportPage.useMemo[bottom3RevenueData]\": (service, idx)=>({\n                            name: service.serviceName,\n                            value: service.servicePrice,\n                            color: grayShades[idx % grayShades.length]\n                        })\n                }[\"CustomerReportPage.useMemo[bottom3RevenueData]\"]);\n            }\n            // Fallback data nếu API chưa load\n            const serviceValueMap = new Map();\n            filteredPieData.forEach({\n                \"CustomerReportPage.useMemo[bottom3RevenueData]\": (d)=>{\n                    const name = d.serviceName || d.type;\n                    if (!serviceValueMap.has(name)) {\n                        serviceValueMap.set(name, {\n                            totalValue: 0,\n                            count: 0\n                        });\n                    }\n                    const obj = serviceValueMap.get(name);\n                    obj.totalValue += d.value;\n                    obj.count += 1;\n                }\n            }[\"CustomerReportPage.useMemo[bottom3RevenueData]\"]);\n            const serviceAvgArr = Array.from(serviceValueMap.entries()).map({\n                \"CustomerReportPage.useMemo[bottom3RevenueData].serviceAvgArr\": (param)=>{\n                    let [name, { totalValue, count }] = param;\n                    return {\n                        name,\n                        avg: count > 0 ? totalValue / count : 0,\n                        count\n                    };\n                }\n            }[\"CustomerReportPage.useMemo[bottom3RevenueData].serviceAvgArr\"]);\n            const sortedAvg = serviceAvgArr.sort({\n                \"CustomerReportPage.useMemo[bottom3RevenueData].sortedAvg\": (a, b)=>a.avg - b.avg\n            }[\"CustomerReportPage.useMemo[bottom3RevenueData].sortedAvg\"]);\n            const bottom3 = sortedAvg.slice(0, 3);\n            const grayShades = [\n                \"#bdbdbd\",\n                \"#9e9e9e\",\n                \"#e0e0e0\"\n            ];\n            return bottom3.map({\n                \"CustomerReportPage.useMemo[bottom3RevenueData]\": (s, idx)=>({\n                        name: s.name,\n                        value: s.avg,\n                        color: grayShades[idx % grayShades.length]\n                    })\n            }[\"CustomerReportPage.useMemo[bottom3RevenueData]\"]);\n        }\n    }[\"CustomerReportPage.useMemo[bottom3RevenueData]\"], [\n        bottom3ServicesRevenueData,\n        filteredPieData\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"p-2 sm:p-4 md:p-6\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: \"mb-6\",\n            children: [\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \" p-2\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                            className: \"text-2xl font-semibold text-gray-900 mb-2\",\n                            children: \"Services Report\"\n                        }, void 0, false, {\n                            fileName: \"/Users/lehoanganh/Documents/FB Network/FE/src/app/services/page.tsx\",\n                            lineNumber: 1474,\n                            columnNumber: 11\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_ServicesFilter__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                            startDate: startDate,\n                            endDate: endDate,\n                            setStartDate: setStartDate,\n                            setEndDate: setEndDate,\n                            selectedRegions: selectedRegions,\n                            setSelectedRegions: setSelectedRegions,\n                            selectedBranches: selectedBranches,\n                            setSelectedBranches: setSelectedBranches,\n                            selectedServiceTypes: selectedServiceTypes,\n                            setSelectedServiceTypes: setSelectedServiceTypes,\n                            selectedGenders: selectedGenders,\n                            setSelectedGenders: setSelectedGenders,\n                            regionOptions: regionOptions,\n                            locationOptions: locationOptions,\n                            filteredRegionOptions: filteredRegionOptions,\n                            ALL_SERVICE_TYPES: ALL_SERVICE_TYPES,\n                            ALL_GENDERS: ALL_GENDERS,\n                            filteredServiceTypes: filteredServiceTypes,\n                            filteredGenders: filteredGenders,\n                            genderActualPrice: genderActualPrice,\n                            formatMoneyShort: formatMoneyShort\n                        }, void 0, false, {\n                            fileName: \"/Users/lehoanganh/Documents/FB Network/FE/src/app/services/page.tsx\",\n                            lineNumber: 1477,\n                            columnNumber: 11\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"/Users/lehoanganh/Documents/FB Network/FE/src/app/services/page.tsx\",\n                    lineNumber: 1473,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_ServiceWeeklyChartData__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                    weeklyServiceChartData: weeklyServiceChartData,\n                    isMobile: isMobile\n                }, void 0, false, {\n                    fileName: \"/Users/lehoanganh/Documents/FB Network/FE/src/app/services/page.tsx\",\n                    lineNumber: 1503,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_ServicePieChartData__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                    pieChartData: pieChartData,\n                    pieTop10Data: pieTop10Data,\n                    pieTop10AvgData: pieTop10AvgData,\n                    top10ServicesLoading: top10ServicesLoading,\n                    top10ServicesError: top10ServicesError,\n                    top10ServicesUsageLoading: top10ServicesUsageLoading,\n                    top10ServicesUsageError: top10ServicesUsageError,\n                    isMobile: isMobile,\n                    renderPieLabel: renderPieLabel\n                }, void 0, false, {\n                    fileName: \"/Users/lehoanganh/Documents/FB Network/FE/src/app/services/page.tsx\",\n                    lineNumber: 1507,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_ServiceBottomPieData__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n                    bottom3ServicesUsageData: bottom3ServicesUsageData,\n                    bottom3ServicesUsageLoading: bottom3ServicesUsageLoading,\n                    bottom3ServicesUsageError: bottom3ServicesUsageError,\n                    bottom3ServicesRevenueLoading: bottom3ServicesRevenueLoading,\n                    bottom3ServicesRevenueError: bottom3ServicesRevenueError,\n                    bottom3Data: bottom3Data,\n                    bottom3RevenueData: bottom3RevenueData,\n                    filteredPieData: filteredPieData,\n                    isMobile: isMobile\n                }, void 0, false, {\n                    fileName: \"/Users/lehoanganh/Documents/FB Network/FE/src/app/services/page.tsx\",\n                    lineNumber: 1519,\n                    columnNumber: 8\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_ServiceStatCards__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n                    serviceSummary: serviceSummary,\n                    serviceSummaryLoading: serviceSummaryLoading,\n                    serviceSummaryError: serviceSummaryError\n                }, void 0, false, {\n                    fileName: \"/Users/lehoanganh/Documents/FB Network/FE/src/app/services/page.tsx\",\n                    lineNumber: 1533,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_ServiceStoreChartData__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {\n                    shopLoading: shopLoading,\n                    shopError: shopError,\n                    isMobile: isMobile,\n                    storeServiceChartData: storeServiceChartData\n                }, void 0, false, {\n                    fileName: \"/Users/lehoanganh/Documents/FB Network/FE/src/app/services/page.tsx\",\n                    lineNumber: 1540,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_ServicesRegionData__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {\n                    regionLoading: regionLoading,\n                    regionError: regionError,\n                    isMobile: isMobile,\n                    regionChartData: regionChartData\n                }, void 0, false, {\n                    fileName: \"/Users/lehoanganh/Documents/FB Network/FE/src/app/services/page.tsx\",\n                    lineNumber: 1548,\n                    columnNumber: 9\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_ServicesTable__WEBPACK_IMPORTED_MODULE_9__[\"default\"], {\n                    serviceTableData: serviceTableData,\n                    serviceTableLoading: serviceTableLoading,\n                    serviceTableError: serviceTableError,\n                    serviceData: serviceData\n                }, void 0, false, {\n                    fileName: \"/Users/lehoanganh/Documents/FB Network/FE/src/app/services/page.tsx\",\n                    lineNumber: 1556,\n                    columnNumber: 8\n                }, this)\n            ]\n        }, void 0, true, {\n            fileName: \"/Users/lehoanganh/Documents/FB Network/FE/src/app/services/page.tsx\",\n            lineNumber: 1472,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/lehoanganh/Documents/FB Network/FE/src/app/services/page.tsx\",\n        lineNumber: 1471,\n        columnNumber: 5\n    }, this);\n}\n_s1(CustomerReportPage, \"5gVd8yIaujf5/y3HCVVXseKVm+k=\", true, function() {\n    return [\n        useApiData,\n        useApiData,\n        useApiData,\n        useApiData,\n        useApiData,\n        useApiData,\n        useApiData,\n        useApiData,\n        useApiData\n    ];\n});\n_c = CustomerReportPage;\nvar _c;\n$RefreshReg$(_c, \"CustomerReportPage\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcHAvc2VydmljZXMvcGFnZS50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUMwQjtBQUMwQjtBQU1uQjtBQUVhO0FBQ2dCO0FBQ2I7QUFDUztBQUNSO0FBQ1U7QUFDTjtBQUNWO0FBZ0c1QyxNQUFNZSxlQUFlQyxxQ0FBb0M7QUFDekQsU0FBU0csV0FBY0MsR0FBVyxFQUFFQyxRQUFnQixFQUFFQyxNQUFjOztJQUNsRSxNQUFNLENBQUNDLE1BQU1DLFFBQVEsR0FBR3ZCLCtDQUFRQSxDQUFXO0lBQzNDLE1BQU0sQ0FBQ3dCLFNBQVNDLFdBQVcsR0FBR3pCLCtDQUFRQSxDQUFDO0lBQ3ZDLE1BQU0sQ0FBQzBCLE9BQU9DLFNBQVMsR0FBRzNCLCtDQUFRQSxDQUFnQjtJQUVsREMsZ0RBQVNBO2dDQUFDO1lBQ1IseUNBQXlDO1lBQ3pDLElBQUksQ0FBQ2tCLE9BQU8sQ0FBQ0wsY0FBYztnQkFDekJXLFdBQVc7Z0JBQ1g7WUFDRjtZQUVBQSxXQUFXO1lBQ1hFLFNBQVM7WUFFVEMsTUFBTVQsS0FBSztnQkFDVFUsUUFBUTtnQkFDUkMsU0FBUztvQkFBRSxnQkFBZ0I7Z0JBQW1CO2dCQUM5Q0MsTUFBTUMsS0FBS0MsU0FBUyxDQUFDO29CQUFFYjtvQkFBVUM7Z0JBQU87WUFDMUMsR0FDR2EsSUFBSTt3Q0FBQyxDQUFDQztvQkFDTCxJQUFJLENBQUNBLElBQUlDLEVBQUUsRUFBRTt3QkFDWCxtREFBbUQ7d0JBQ25ELElBQUlELElBQUlFLE1BQU0sS0FBSyxLQUFLOzRCQUN0QixPQUFPO3dCQUNUO3dCQUNBLE1BQU0sSUFBSUMsTUFBTSxnQkFBZ0JILElBQUlFLE1BQU07b0JBQzVDO29CQUNBLE9BQU9GLElBQUlJLElBQUk7Z0JBQ2pCO3VDQUNDTCxJQUFJO3dDQUFDLENBQUNaO29CQUNMQyxRQUFRRDtvQkFDUkcsV0FBVztnQkFDYjt1Q0FDQ2UsS0FBSzt3Q0FBQyxDQUFDQztvQkFDTixvQ0FBb0M7b0JB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Qiw4REFBQ3hFLDhEQUFxQkE7b0JBQ3BCNkUsYUFBYUE7b0JBQ2JDLFdBQVdBO29CQUNYNEIsVUFBVUE7b0JBQ1ZzSix1QkFBdUJBOzs7Ozs7OEJBSXpCLDhEQUFDL1AsMkRBQWtCQTtvQkFDakJ5RSxlQUFlQTtvQkFDZkMsYUFBYUE7b0JBQ2IrQixVQUFVQTtvQkFDVnNJLGlCQUFpQkE7Ozs7Ozs4QkFJcEIsOERBQUM5TyxzREFBYUE7b0JBQ1p5RixrQkFBa0JBO29CQUNsQkMscUJBQXFCQTtvQkFDckJDLG1CQUFtQkE7b0JBQ25Cd0osYUFBYUE7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBS3RCO0lBNTNDd0JwTjs7UUF3SFkxQjtRQVU5QkE7UUFVQUE7UUFVQUE7UUFVQUE7UUFVQUE7UUFVQUE7UUFVQUE7UUFVQUE7OztLQXhNa0IwQiIsInNvdXJjZXMiOlsiL1VzZXJzL2xlaG9hbmdhbmgvRG9jdW1lbnRzL0ZCIE5ldHdvcmsvRkUvc3JjL2FwcC9zZXJ2aWNlcy9wYWdlLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBjbGllbnRcIjtcbmltcG9ydCBSZWFjdCBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QsIHVzZVJlZiB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHtcbiAgQ2FsZW5kYXJEYXRlLFxuICB0b2RheSxcbiAgZ2V0TG9jYWxUaW1lWm9uZSxcbiAgcGFyc2VEYXRlLFxufSBmcm9tIFwiQGludGVybmF0aW9uYWxpemVkL2RhdGVcIjtcblxuaW1wb3J0IFNlcnZpY2VzRmlsdGVyIGZyb20gXCIuL1NlcnZpY2VzRmlsdGVyXCI7XG5pbXBvcnQgV2Vla2x5U2VydmljZUNoYXJ0RGF0YSBmcm9tIFwiLi9TZXJ2aWNlV2Vla2x5Q2hhcnREYXRhXCI7XG5pbXBvcnQgUGllQ2hhcnREYXRhIGZyb20gXCIuL1NlcnZpY2VQaWVDaGFydERhdGFcIjtcbmltcG9ydCBTZXJ2aWNlQm90dG9tUGllRGF0YSBmcm9tIFwiLi9TZXJ2aWNlQm90dG9tUGllRGF0YVwiO1xuaW1wb3J0IFNlcnZpY2VTdGF0Q2FyZHMgZnJvbSBcIi4vU2VydmljZVN0YXRDYXJkc1wiO1xuaW1wb3J0IFNlcnZpY2VTdG9yZUNoYXJ0RGF0YSBmcm9tIFwiLi9TZXJ2aWNlU3RvcmVDaGFydERhdGFcIjtcbmltcG9ydCBTZXJ2aWNlc1JlZ2lvbkRhdGEgZnJvbSBcIi4vU2VydmljZXNSZWdpb25EYXRhXCI7XG5pbXBvcnQgU2VydmljZXNUYWJsZSBmcm9tIFwiLi9TZXJ2aWNlc1RhYmxlXCI7XG5cbmludGVyZmFjZSBEYXRhUG9pbnQge1xuICBkYXRlOiBzdHJpbmc7XG4gIHZhbHVlOiBudW1iZXI7XG4gIHZhbHVlMjogbnVtYmVyO1xuICB0eXBlOiBzdHJpbmc7XG4gIHN0YXR1czogc3RyaW5nO1xuICBnZW5kZXI6IFwiTmFtXCIgfCBcIk7hu69cIiB8IFwiI04vQVwiO1xuICByZWdpb24/OiBzdHJpbmc7XG4gIGJyYW5jaD86IHN0cmluZztcbiAgc2VydmljZU5hbWU/OiBzdHJpbmc7XG59XG5cbmludGVyZmFjZSBUb3RhbFJlZ2lvbmFsU2FsZXMge1xuICBkYXRlOiBzdHJpbmc7XG4gIEhDTTogbnVtYmVyO1xuICBIYU5vaTogbnVtYmVyO1xuICBEYU5hbmc6IG51bWJlcjtcbiAgTmhhVHJhbmc6IG51bWJlcjtcbiAgRGFEb25nQ3VhOiBudW1iZXI7XG4gIHR5cGU6IHN0cmluZztcbiAgc3RhdHVzOiBzdHJpbmc7XG59XG5cbi8vIEludGVyZmFjZSBjaG8gZOG7ryBsaeG7h3UgQVBJIG3hu5tpXG5pbnRlcmZhY2UgU2VydmljZVR5cGVEYXRhIHtcbiAgZGF0ZTogc3RyaW5nO1xuICB0eXBlOiBzdHJpbmc7XG4gIGNvdW50OiBudW1iZXI7XG59XG5cbmludGVyZmFjZSBTZXJ2aWNlU3VtbWFyeURhdGEge1xuICB0b3RhbENvbWJvOiBudW1iZXI7XG4gIHRvdGFsTGU6IG51bWJlcjtcbiAgdG90YWxDVDogbnVtYmVyO1xuICB0b3RhbEdpZnQ6IG51bWJlcjtcbiAgdG90YWxBbGw6IG51bWJlcjtcbiAgcHJldkNvbWJvOiBudW1iZXI7XG4gIHByZXZMZTogbnVtYmVyO1xuICBwcmV2Q1Q6IG51bWJlcjtcbiAgcHJldkdpZnQ6IG51bWJlcjtcbiAgcHJldkFsbDogbnVtYmVyO1xuICBjb21ib0dyb3d0aDogbnVtYmVyO1xuICBsZUdyb3d0aDogbnVtYmVyO1xuICBjdEdyb3d0aDogbnVtYmVyO1xuICBnaWZ0R3Jvd3RoOiBudW1iZXI7XG4gIGFsbEdyb3d0aDogbnVtYmVyO1xufVxuXG5pbnRlcmZhY2UgUmVnaW9uRGF0YSB7XG4gIHJlZ2lvbjogc3RyaW5nO1xuICB0eXBlOiBzdHJpbmc7XG4gIHRvdGFsOiBudW1iZXI7XG59XG5cbmludGVyZmFjZSBTZXJ2aWNlRGF0YUl0ZW0ge1xuICB0ZW5EaWNoVnU6IHN0cmluZztcbiAgbG9haURpY2hWdTogc3RyaW5nO1xuICBzb0x1b25nOiBudW1iZXI7XG4gIHRvbmdHaWE6IG51bWJlcjtcbiAgcGVyY2VudFNvTHVvbmc6IHN0cmluZztcbiAgcGVyY2VudFRvbmdHaWE6IHN0cmluZztcbn1cblxuLy8gSW50ZXJmYWNlIGNobyBk4buvIGxp4buHdSBBUEkgc2hvcCBzZXJ2aWNlXG5pbnRlcmZhY2UgU2hvcFNlcnZpY2VEYXRhIHtcbiAgc2hvcE5hbWU6IHN0cmluZztcbiAgc2VydmljZVR5cGU6IHN0cmluZztcbiAgdG90YWw6IG51bWJlcjtcbn1cblxuLy8gSW50ZXJmYWNlIGNobyBk4buvIGxp4buHdSBBUEkgdG9wIDEwIHNlcnZpY2VzIHJldmVudWVcbmludGVyZmFjZSBUb3AxMFNlcnZpY2VzUmV2ZW51ZURhdGEge1xuICBzZXJ2aWNlTmFtZTogc3RyaW5nO1xuICBzZXJ2aWNlUHJpY2U6IG51bWJlcjtcbn1cblxuLy8gSW50ZXJmYWNlIGNobyBk4buvIGxp4buHdSBBUEkgdG9wIDEwIHNlcnZpY2VzIHVzYWdlXG5pbnRlcmZhY2UgVG9wMTBTZXJ2aWNlc1VzYWdlRGF0YSB7XG4gIHNlcnZpY2VOYW1lOiBzdHJpbmc7XG4gIGNvdW50OiBudW1iZXI7XG59XG5cbi8vIEludGVyZmFjZSBjaG8gZOG7ryBsaeG7h3UgQVBJIGLhuqNuZyBk4buLY2ggduG7pVxuaW50ZXJmYWNlIFNlcnZpY2VUYWJsZURhdGEge1xuICBzZXJ2aWNlTmFtZTogc3RyaW5nO1xuICB0eXBlOiBzdHJpbmc7XG4gIHVzYWdlQ291bnQ6IG51bWJlcjtcbiAgdXNhZ2VEZWx0YUNvdW50OiBudW1iZXI7XG4gIHVzYWdlUGVyY2VudDogbnVtYmVyO1xuICB0b3RhbFJldmVudWU6IG51bWJlcjtcbiAgcmV2ZW51ZURlbHRhUGVyY2VudDogbnVtYmVyO1xuICByZXZlbnVlUGVyY2VudDogbnVtYmVyO1xufVxuXG5jb25zdCBBUElfQkFTRV9VUkwgPSBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19BUElfQkFTRV9VUkw7XG5mdW5jdGlvbiB1c2VBcGlEYXRhPFQ+KHVybDogc3RyaW5nLCBmcm9tRGF0ZTogc3RyaW5nLCB0b0RhdGU6IHN0cmluZykge1xuICBjb25zdCBbZGF0YSwgc2V0RGF0YV0gPSB1c2VTdGF0ZTxUIHwgbnVsbD4obnVsbCk7XG4gIGNvbnN0IFtsb2FkaW5nLCBzZXRMb2FkaW5nXSA9IHVzZVN0YXRlKHRydWUpO1xuICBjb25zdCBbZXJyb3IsIHNldEVycm9yXSA9IHVzZVN0YXRlPHN0cmluZyB8IG51bGw+KG51bGwpO1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgLy8gU2tpcCBBUEkgY2FsbHMgaWYgVVJMIGlzIG5vdCBhdmFpbGFibGVcbiAgICBpZiAoIXVybCB8fCAhQVBJX0JBU0VfVVJMKSB7XG4gICAgICBzZXRMb2FkaW5nKGZhbHNlKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBzZXRMb2FkaW5nKHRydWUpO1xuICAgIHNldEVycm9yKG51bGwpO1xuXG4gICAgZmV0Y2godXJsLCB7XG4gICAgICBtZXRob2Q6IFwiUE9TVFwiLFxuICAgICAgaGVhZGVyczogeyBcIkNvbnRlbnQtVHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIiB9LFxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoeyBmcm9tRGF0ZSwgdG9EYXRlIH0pLFxuICAgIH0pXG4gICAgICAudGhlbigocmVzKSA9PiB7XG4gICAgICAgIGlmICghcmVzLm9rKSB7XG4gICAgICAgICAgLy8gRG9uJ3QgdGhyb3cgZXJyb3IgZm9yIDQwNCwganVzdCByZXR1cm4gbnVsbCBkYXRhXG4gICAgICAgICAgaWYgKHJlcy5zdGF0dXMgPT09IDQwNCkge1xuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgICAgfVxuICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkFQSSBlcnJvcjogXCIgKyByZXMuc3RhdHVzKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gcmVzLmpzb24oKTtcbiAgICAgIH0pXG4gICAgICAudGhlbigoZGF0YSkgPT4ge1xuICAgICAgICBzZXREYXRhKGRhdGEpO1xuICAgICAgICBzZXRMb2FkaW5nKGZhbHNlKTtcbiAgICAgIH0pXG4gICAgICAuY2F0Y2goKGVycikgPT4ge1xuICAgICAgICAvLyBPbmx5IHNldCBlcnJvciBmb3Igbm9uLTQwNCBlcnJvcnNcbiAgICAgICAgaWYgKCFlcnIubWVzc2FnZS5pbmNsdWRlcyhcIjQwNFwiKSkge1xuICAgICAgICAgIHNldEVycm9yKGVyci5tZXNzYWdlKTtcbiAgICAgICAgfVxuICAgICAgICBzZXRMb2FkaW5nKGZhbHNlKTtcbiAgICAgIH0pO1xuICB9LCBbdXJsLCBmcm9tRGF0ZSwgdG9EYXRlXSk7XG5cbiAgcmV0dXJuIHsgZGF0YSwgbG9hZGluZywgZXJyb3IgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gQ3VzdG9tZXJSZXBvcnRQYWdlKCkge1xuICAvLyBMb2FkIGluaXRpYWwgc3RhdGUgZnJvbSBsb2NhbFN0b3JhZ2Ugb3IgdXNlIGRlZmF1bHRzXG4gIGNvbnN0IGdldEluaXRpYWxEYXRlID0gKGtleTogc3RyaW5nLCBkZWZhdWx0VmFsdWU6IENhbGVuZGFyRGF0ZSkgPT4ge1xuICAgIGlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgY29uc3Qgc2F2ZWQgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShgc2VydmljZXNfJHtrZXl9YCk7XG4gICAgICBpZiAoc2F2ZWQpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICBjb25zdCBwYXJzZWQgPSBKU09OLnBhcnNlKHNhdmVkKTtcbiAgICAgICAgICAvLyBDcmVhdGUgZGF0ZSBzdHJpbmcgaW4gWVlZWS1NTS1ERCBmb3JtYXRcbiAgICAgICAgICBjb25zdCBkYXRlU3RyaW5nID0gYCR7cGFyc2VkLnllYXJ9LSR7U3RyaW5nKHBhcnNlZC5tb250aCkucGFkU3RhcnQoMiwgJzAnKX0tJHtTdHJpbmcocGFyc2VkLmRheSkucGFkU3RhcnQoMiwgJzAnKX1gO1xuICAgICAgICAgIHJldHVybiBwYXJzZURhdGUoZGF0ZVN0cmluZyk7XG4gICAgICAgIH0gY2F0Y2ggKGUpIHtcbiAgICAgICAgICBjb25zb2xlLndhcm4oYEZhaWxlZCB0byBwYXJzZSBzYXZlZCBkYXRlIGZvciAke2tleX06YCwgZSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGRlZmF1bHRWYWx1ZTtcbiAgfTtcblxuICBjb25zdCBnZXRJbml0aWFsQXJyYXkgPSAoa2V5OiBzdHJpbmcsIGRlZmF1bHRWYWx1ZTogc3RyaW5nW10pID0+IHtcbiAgICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIGNvbnN0IHNhdmVkID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oYHNlcnZpY2VzXyR7a2V5fWApO1xuICAgICAgaWYgKHNhdmVkKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgcmV0dXJuIEpTT04ucGFyc2Uoc2F2ZWQpO1xuICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgY29uc29sZS53YXJuKGBGYWlsZWQgdG8gcGFyc2Ugc2F2ZWQgYXJyYXkgZm9yICR7a2V5fTpgLCBlKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gZGVmYXVsdFZhbHVlO1xuICB9O1xuXG4gIGNvbnN0IFtzdGFydERhdGUsIHNldFN0YXJ0RGF0ZV0gPSB1c2VTdGF0ZTxDYWxlbmRhckRhdGU+KCgpID0+XG4gICAgZ2V0SW5pdGlhbERhdGUoJ3N0YXJ0RGF0ZScsIHRvZGF5KGdldExvY2FsVGltZVpvbmUoKSkuc3VidHJhY3QoeyBkYXlzOiA3IH0pKVxuICApO1xuICBjb25zdCBbZW5kRGF0ZSwgc2V0RW5kRGF0ZV0gPSB1c2VTdGF0ZTxDYWxlbmRhckRhdGU+KCgpID0+XG4gICAgZ2V0SW5pdGlhbERhdGUoJ2VuZERhdGUnLCB0b2RheShnZXRMb2NhbFRpbWVab25lKCkpKVxuICApO1xuICBjb25zdCBbc2VsZWN0ZWRCcmFuY2hlcywgc2V0U2VsZWN0ZWRCcmFuY2hlc10gPSB1c2VTdGF0ZTxzdHJpbmdbXT4oKCkgPT5cbiAgICBnZXRJbml0aWFsQXJyYXkoJ3NlbGVjdGVkQnJhbmNoZXMnLCBbXSlcbiAgKTtcbiAgY29uc3QgW3NlbGVjdGVkUmVnaW9ucywgc2V0U2VsZWN0ZWRSZWdpb25zXSA9IHVzZVN0YXRlPHN0cmluZ1tdPigoKSA9PlxuICAgIGdldEluaXRpYWxBcnJheSgnc2VsZWN0ZWRSZWdpb25zJywgW10pXG4gICk7XG4gIGNvbnN0IFtzZWxlY3RlZFNlcnZpY2VUeXBlcywgc2V0U2VsZWN0ZWRTZXJ2aWNlVHlwZXNdID0gdXNlU3RhdGU8c3RyaW5nW10+KCgpID0+XG4gICAgZ2V0SW5pdGlhbEFycmF5KCdzZWxlY3RlZFNlcnZpY2VUeXBlcycsIFtcbiAgICAgIFwiS2jDoWNoIGjDoG5nIFRow6BuaCB2acOqblwiLFxuICAgICAgXCJLSCB0cuG6o2kgbmdoaeG7h21cIixcbiAgICAgIFwiQWRkZWQgb25cIixcbiAgICAgIFwiUXXDoCB04bq3bmdcIixcbiAgICBdKVxuICApO1xuICBjb25zdCBbc2VsZWN0ZWRHZW5kZXJzLCBzZXRTZWxlY3RlZEdlbmRlcnNdID0gdXNlU3RhdGU8c3RyaW5nW10+KCgpID0+XG4gICAgZ2V0SW5pdGlhbEFycmF5KCdzZWxlY3RlZEdlbmRlcnMnLCBbXG4gICAgICBcIk5hbVwiLFxuICAgICAgXCJO4buvXCIsXG4gICAgICBcIiNOL0FcIixcbiAgICBdKVxuICApO1xuXG4gIC8vIFNhdmUgc3RhdGUgdG8gbG9jYWxTdG9yYWdlIHdoZW5ldmVyIGl0IGNoYW5nZXNcbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIGNvbnN0IGRhdGVEYXRhID0ge1xuICAgICAgICB5ZWFyOiBzdGFydERhdGUueWVhcixcbiAgICAgICAgbW9udGg6IHN0YXJ0RGF0ZS5tb250aCxcbiAgICAgICAgZGF5OiBzdGFydERhdGUuZGF5XG4gICAgICB9O1xuICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ3NlcnZpY2VzX3N0YXJ0RGF0ZScsIEpTT04uc3RyaW5naWZ5KGRhdGVEYXRhKSk7XG4gICAgICBjb25zb2xlLmxvZygnU2F2ZWQgc3RhcnREYXRlIHRvIGxvY2FsU3RvcmFnZTonLCBkYXRlRGF0YSk7XG4gICAgfVxuICB9LCBbc3RhcnREYXRlXSk7XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdzZXJ2aWNlc19lbmREYXRlJywgSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICB5ZWFyOiBlbmREYXRlLnllYXIsXG4gICAgICAgIG1vbnRoOiBlbmREYXRlLm1vbnRoLFxuICAgICAgICBkYXk6IGVuZERhdGUuZGF5XG4gICAgICB9KSk7XG4gICAgfVxuICB9LCBbZW5kRGF0ZV0pO1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnc2VydmljZXNfc2VsZWN0ZWRCcmFuY2hlcycsIEpTT04uc3RyaW5naWZ5KHNlbGVjdGVkQnJhbmNoZXMpKTtcbiAgICB9XG4gIH0sIFtzZWxlY3RlZEJyYW5jaGVzXSk7XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdzZXJ2aWNlc19zZWxlY3RlZFJlZ2lvbnMnLCBKU09OLnN0cmluZ2lmeShzZWxlY3RlZFJlZ2lvbnMpKTtcbiAgICB9XG4gIH0sIFtzZWxlY3RlZFJlZ2lvbnNdKTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIGlmICh0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ3NlcnZpY2VzX3NlbGVjdGVkU2VydmljZVR5cGVzJywgSlNPTi5zdHJpbmdpZnkoc2VsZWN0ZWRTZXJ2aWNlVHlwZXMpKTtcbiAgICB9XG4gIH0sIFtzZWxlY3RlZFNlcnZpY2VUeXBlc10pO1xuXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgnc2VydmljZXNfc2VsZWN0ZWRHZW5kZXJzJywgSlNPTi5zdHJpbmdpZnkoc2VsZWN0ZWRHZW5kZXJzKSk7XG4gICAgfVxuICB9LCBbc2VsZWN0ZWRHZW5kZXJzXSk7XG5cbiAgY29uc3QgZnJvbURhdGUgPSBzdGFydERhdGVcbiAgICA/IGAke3N0YXJ0RGF0ZS55ZWFyfS0ke1N0cmluZyhzdGFydERhdGUubW9udGgpLnBhZFN0YXJ0KDIsIFwiMFwiKX0tJHtTdHJpbmcoXG4gICAgICAgIHN0YXJ0RGF0ZS5kYXlcbiAgICAgICkucGFkU3RhcnQoMiwgXCIwXCIpfVQwMDowMDowMGBcbiAgICA6IFwiXCI7XG4gIGNvbnN0IHRvRGF0ZSA9IGVuZERhdGVcbiAgICA/IGAke2VuZERhdGUueWVhcn0tJHtTdHJpbmcoZW5kRGF0ZS5tb250aCkucGFkU3RhcnQoMiwgXCIwXCIpfS0ke1N0cmluZyhcbiAgICAgICAgZW5kRGF0ZS5kYXlcbiAgICAgICkucGFkU3RhcnQoMiwgXCIwXCIpfVQyMzo1OTo1OWBcbiAgICA6IFwiXCI7XG5cbiAgLy8gQVBJIGNhbGwgY2hvIGThu68gbGnhu4d1IGThu4tjaCB24bulIHRoZW8gbG/huqFpXG4gIGNvbnN0IHsgZGF0YTogc2VydmljZVR5cGVEYXRhIH0gPSB1c2VBcGlEYXRhPFNlcnZpY2VUeXBlRGF0YVtdPihcbiAgICBgJHtBUElfQkFTRV9VUkx9L2FwaS9zZXJ2aWNlLXJlY29yZC9zZXJ2aWNlLXR5cGUtYnJlYWtkb3duYCxcbiAgICBmcm9tRGF0ZSxcbiAgICB0b0RhdGVcbiAgKTtcblxuICBjb25zdCB7XG4gICAgZGF0YTogc2VydmljZVN1bW1hcnksXG4gICAgbG9hZGluZzogc2VydmljZVN1bW1hcnlMb2FkaW5nLFxuICAgIGVycm9yOiBzZXJ2aWNlU3VtbWFyeUVycm9yLFxuICB9ID0gdXNlQXBpRGF0YTxTZXJ2aWNlU3VtbWFyeURhdGE+KFxuICAgIGAke0FQSV9CQVNFX1VSTH0vYXBpL3NlcnZpY2UtcmVjb3JkL3NlcnZpY2Utc3VtbWFyeWAsXG4gICAgZnJvbURhdGUsXG4gICAgdG9EYXRlXG4gICk7XG5cbiAgY29uc3Qge1xuICAgIGRhdGE6IHJlZ2lvbkRhdGEsXG4gICAgbG9hZGluZzogcmVnaW9uTG9hZGluZyxcbiAgICBlcnJvcjogcmVnaW9uRXJyb3IsXG4gIH0gPSB1c2VBcGlEYXRhPFJlZ2lvbkRhdGFbXT4oXG4gICAgYCR7QVBJX0JBU0VfVVJMfS9hcGkvc2VydmljZS1yZWNvcmQvcmVnaW9uYCxcbiAgICBmcm9tRGF0ZSxcbiAgICB0b0RhdGVcbiAgKTtcblxuICBjb25zdCB7XG4gICAgZGF0YTogc2hvcERhdGEsXG4gICAgbG9hZGluZzogc2hvcExvYWRpbmcsXG4gICAgZXJyb3I6IHNob3BFcnJvcixcbiAgfSA9IHVzZUFwaURhdGE8U2hvcFNlcnZpY2VEYXRhW10+KFxuICAgIGAke0FQSV9CQVNFX1VSTH0vYXBpL3NlcnZpY2UtcmVjb3JkL3Nob3BgLFxuICAgIGZyb21EYXRlLFxuICAgIHRvRGF0ZVxuICApO1xuXG4gIGNvbnN0IHtcbiAgICBkYXRhOiB0b3AxMFNlcnZpY2VzUmV2ZW51ZURhdGEsXG4gICAgbG9hZGluZzogdG9wMTBTZXJ2aWNlc0xvYWRpbmcsXG4gICAgZXJyb3I6IHRvcDEwU2VydmljZXNFcnJvcixcbiAgfSA9IHVzZUFwaURhdGE8VG9wMTBTZXJ2aWNlc1JldmVudWVEYXRhW10+KFxuICAgIGAke0FQSV9CQVNFX1VSTH0vYXBpL3NlcnZpY2UtcmVjb3JkL3RvcDEwLXNlcnZpY2VzLXJldmVudWVgLFxuICAgIGZyb21EYXRlLFxuICAgIHRvRGF0ZVxuICApO1xuXG4gIGNvbnN0IHtcbiAgICBkYXRhOiB0b3AxMFNlcnZpY2VzVXNhZ2VEYXRhLFxuICAgIGxvYWRpbmc6IHRvcDEwU2VydmljZXNVc2FnZUxvYWRpbmcsXG4gICAgZXJyb3I6IHRvcDEwU2VydmljZXNVc2FnZUVycm9yLFxuICB9ID0gdXNlQXBpRGF0YTxUb3AxMFNlcnZpY2VzVXNhZ2VEYXRhW10+KFxuICAgIGAke0FQSV9CQVNFX1VSTH0vYXBpL3NlcnZpY2UtcmVjb3JkL3RvcDEwLXNlcnZpY2VzLXVzYWdlYCxcbiAgICBmcm9tRGF0ZSxcbiAgICB0b0RhdGVcbiAgKTtcblxuICBjb25zdCB7XG4gICAgZGF0YTogYm90dG9tM1NlcnZpY2VzVXNhZ2VEYXRhLFxuICAgIGxvYWRpbmc6IGJvdHRvbTNTZXJ2aWNlc1VzYWdlTG9hZGluZyxcbiAgICBlcnJvcjogYm90dG9tM1NlcnZpY2VzVXNhZ2VFcnJvcixcbiAgfSA9IHVzZUFwaURhdGE8VG9wMTBTZXJ2aWNlc1VzYWdlRGF0YVtdPihcbiAgICBgJHtBUElfQkFTRV9VUkx9L2FwaS9zZXJ2aWNlLXJlY29yZC9ib3R0b20zLXNlcnZpY2VzLXVzYWdlYCxcbiAgICBmcm9tRGF0ZSxcbiAgICB0b0RhdGVcbiAgKTtcblxuICBjb25zdCB7XG4gICAgZGF0YTogYm90dG9tM1NlcnZpY2VzUmV2ZW51ZURhdGEsXG4gICAgbG9hZGluZzogYm90dG9tM1NlcnZpY2VzUmV2ZW51ZUxvYWRpbmcsXG4gICAgZXJyb3I6IGJvdHRvbTNTZXJ2aWNlc1JldmVudWVFcnJvcixcbiAgfSA9IHVzZUFwaURhdGE8VG9wMTBTZXJ2aWNlc1JldmVudWVEYXRhW10+KFxuICAgIGAke0FQSV9CQVNFX1VSTH0vYXBpL3NlcnZpY2UtcmVjb3JkL2JvdHRvbTMtc2VydmljZXMtcmV2ZW51ZWAsXG4gICAgZnJvbURhdGUsXG4gICAgdG9EYXRlXG4gICk7XG5cbiAgY29uc3Qge1xuICAgIGRhdGE6IHNlcnZpY2VUYWJsZURhdGEsXG4gICAgbG9hZGluZzogc2VydmljZVRhYmxlTG9hZGluZyxcbiAgICBlcnJvcjogc2VydmljZVRhYmxlRXJyb3IsXG4gIH0gPSB1c2VBcGlEYXRhPFNlcnZpY2VUYWJsZURhdGFbXT4oXG4gICAgYCR7QVBJX0JBU0VfVVJMfS9hcGkvc2VydmljZS1yZWNvcmQvdG9wLXRhYmxlYCxcbiAgICBmcm9tRGF0ZSxcbiAgICB0b0RhdGVcbiAgKTtcblxuICAvLyBIb29rIGzhuqV5IHdpZHRoIHdpbmRvdyB24bubaSBkZWJvdW5jZSDEkeG7gyB0csOhbmggcGVyZm9ybWFuY2UgaXNzdWVzXG4gIGZ1bmN0aW9uIHVzZVdpbmRvd1dpZHRoKCkge1xuICAgIGNvbnN0IFt3aWR0aCwgc2V0V2lkdGhdID0gdXNlU3RhdGUoMTAyNCk7XG4gICAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICAgIGxldCB0aW1lb3V0SWQ6IE5vZGVKUy5UaW1lb3V0O1xuXG4gICAgICBmdW5jdGlvbiBoYW5kbGVSZXNpemUoKSB7XG4gICAgICAgIGNsZWFyVGltZW91dCh0aW1lb3V0SWQpO1xuICAgICAgICB0aW1lb3V0SWQgPSBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICBzZXRXaWR0aCh3aW5kb3cuaW5uZXJXaWR0aCk7XG4gICAgICAgIH0sIDEwMCk7IC8vIERlYm91bmNlIDEwMG1zXG4gICAgICB9XG5cbiAgICAgIGhhbmRsZVJlc2l6ZSgpO1xuICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJyZXNpemVcIiwgaGFuZGxlUmVzaXplKTtcbiAgICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKFwicmVzaXplXCIsIGhhbmRsZVJlc2l6ZSk7XG4gICAgICAgIGNsZWFyVGltZW91dCh0aW1lb3V0SWQpO1xuICAgICAgfTtcbiAgICB9LCBbXSk7XG4gICAgcmV0dXJuIHdpZHRoO1xuICB9XG5cbiAgY29uc3Qgd2luZG93V2lkdGggPSB1c2VXaW5kb3dXaWR0aCgpO1xuICBjb25zdCBpc01vYmlsZSA9IHdpbmRvd1dpZHRoIDwgNjQwO1xuXG4gIGNvbnN0IEFMTF9TRVJWSUNFX1RZUEVTID0gW1xuICAgIHsga2V5OiBcIktow6FjaCBow6BuZyBUaMOgbmggdmnDqm5cIiwgbGFiZWw6IFwiQ29tYm9cIiB9LFxuICAgIHsga2V5OiBcIktIIHRy4bqjaSBuZ2hp4buHbVwiLCBsYWJlbDogXCJE4buLY2ggduG7pVwiIH0sXG4gICAgeyBrZXk6IFwiQWRkZWQgb25cIiwgbGFiZWw6IFwiQWRkZWQgb25cIiB9LFxuICAgIHsga2V5OiBcIlF1w6AgdOG6t25nXCIsIGxhYmVsOiBcIkdpZnRzXCIgfSxcbiAgICB7IGtleTogXCJGb3ggY2FyZFwiLCBsYWJlbDogXCJGb3ggY2FyZFwiIH0sXG4gIF07XG4gIGNvbnN0IEFMTF9HRU5ERVJTID0gW1wiTmFtXCIsIFwiTuG7r1wiLCBcIiNOL0FcIl07XG4gIGNvbnN0IFtyZWdpb25TZWFyY2hdID0gdXNlU3RhdGUoXCJcIik7XG4gIGNvbnN0IGxvY2F0aW9uT3B0aW9ucyA9IFJlYWN0LnVzZU1lbW8oXG4gICAgKCkgPT4gW1xuICAgICAgXCJDcmVzY2VudCBNYWxsIFE3XCIsXG4gICAgICBcIlZpbmNvbSBUaOG6o28gxJBp4buBblwiLFxuICAgICAgXCJWaXN0YSBWZXJkZVwiLFxuICAgICAgXCJBZW9uIE1hbGwgVMOibiBQaMO6IENlbGFkb25cIixcbiAgICAgIFwiV2VzdHBvaW50IFBo4bqhbSBIw7luZ1wiLFxuICAgICAgXCJBZW9uIE1hbGwgQsOsbmggVMOiblwiLFxuICAgICAgXCJWaW5jb20gUGhhbiBWxINuIFRy4buLXCIsXG4gICAgICBcIlZpbmNvbSBMYW5kbWFyayA4MVwiLFxuICAgICAgXCJUVFRNIEVzdGVsbGEgUGxhY2VcIixcbiAgICAgIFwiVsO1IFRo4buLIFPDoXUgUS4xXCIsXG4gICAgICBcIlRoZSBTdW4gQXZlbnVlXCIsXG4gICAgICBcIlRyxrDGoW5nIMSQ4buLbmggUS4zXCIsXG4gICAgICBcIkhvYSBMYW4gUS5QTlwiLFxuICAgICAgXCJOb3d6b25lIFEuMVwiLFxuICAgICAgXCJFdmVycmljaCBJbmZpbml0eSBRLjVcIixcbiAgICAgIFwiU0MgVml2b0NpdHlcIixcbiAgICAgIFwixJDhuqNvIE5n4buNYyBOZ8WpIFjDoyBITlwiLFxuICAgICAgXCJWaW5jb20gTMOqIFbEg24gVmnhu4d0XCIsXG4gICAgICBcIlRoZSBCb25hdGljYSBRLlRCXCIsXG4gICAgICBcIk1pZHRvd24gUS43XCIsXG4gICAgICBcIlRy4bqnbiBQaMO6IMSQw6AgTuG6tW5nXCIsXG4gICAgICBcIlZpbmNvbSBRdWFuZyBUcnVuZ1wiLFxuICAgICAgXCJWaW5jb20gQsOgIFRyaeG7h3VcIixcbiAgICAgIFwiSW1wZXJpYSBTa3kgR2FyZGVuIEhOXCIsXG4gICAgICBcIkdvbGQgQ29hc3QgTmhhIFRyYW5nXCIsXG4gICAgICBcIlJpdmllcmEgUG9pbnQgUTdcIixcbiAgICAgIFwiU2FpZ29uIE9maWNlXCIsXG4gICAgICBcIk1pbGxlbml1bSBBcGFydG1lbnQgUS40XCIsXG4gICAgICBcIlBhcmMgTWFsbCBRLjhcIixcbiAgICAgIFwiU2FpZ29uIE1pYSBUcnVuZyBTxqFuXCIsXG4gICAgXSxcbiAgICBbXVxuICApO1xuICBjb25zdCBsb2NhdGlvblJlZ2lvbk1hcDogUmVjb3JkPHN0cmluZywgc3RyaW5nPiA9IFJlYWN0LnVzZU1lbW8oXG4gICAgKCkgPT4gKHtcbiAgICAgIFwiQ3Jlc2NlbnQgTWFsbCBRN1wiOiBcIkhDTVwiLFxuICAgICAgXCJWaW5jb20gVGjhuqNvIMSQaeG7gW5cIjogXCJIQ01cIixcbiAgICAgIFwiVmlzdGEgVmVyZGVcIjogXCJIQ01cIixcbiAgICAgIFwiQWVvbiBNYWxsIFTDom4gUGjDuiBDZWxhZG9uXCI6IFwiSENNXCIsXG4gICAgICBcIldlc3Rwb2ludCBQaOG6oW0gSMO5bmdcIjogXCJIQ01cIixcbiAgICAgIFwiQWVvbiBNYWxsIELDrG5oIFTDom5cIjogXCJIQ01cIixcbiAgICAgIFwiVmluY29tIFBoYW4gVsSDbiBUcuG7i1wiOiBcIkhDTVwiLFxuICAgICAgXCJWaW5jb20gTGFuZG1hcmsgODFcIjogXCJIQ01cIixcbiAgICAgIFwiVFRUTSBFc3RlbGxhIFBsYWNlXCI6IFwiSENNXCIsXG4gICAgICBcIlbDtSBUaOG7iyBTw6F1IFEuMVwiOiBcIkhDTVwiLFxuICAgICAgXCJUaGUgU3VuIEF2ZW51ZVwiOiBcIkhDTVwiLFxuICAgICAgXCJUcsawxqFuZyDEkOG7i25oIFEuM1wiOiBcIkhDTVwiLFxuICAgICAgXCJIb2EgTGFuIFEuUE5cIjogXCJIQ01cIixcbiAgICAgIFwiTm93em9uZSBRLjFcIjogXCJIQ01cIixcbiAgICAgIFwiRXZlcnJpY2ggSW5maW5pdHkgUS41XCI6IFwiSENNXCIsXG4gICAgICBcIlNDIFZpdm9DaXR5XCI6IFwiSENNXCIsXG4gICAgICBcIlZpbmNvbSBMw6ogVsSDbiBWaeG7h3RcIjogXCJIQ01cIixcbiAgICAgIFwiVGhlIEJvbmF0aWNhIFEuVEJcIjogXCJIQ01cIixcbiAgICAgIFwiTWlkdG93biBRLjdcIjogXCJIQ01cIixcbiAgICAgIFwiUml2aWVyYSBQb2ludCBRN1wiOiBcIkhDTVwiLFxuICAgICAgXCJTYWlnb24gT2ZpY2VcIjogXCJIQ01cIixcbiAgICAgIFwiTWlsbGVuaXVtIEFwYXJ0bWVudCBRLjRcIjogXCJIQ01cIixcbiAgICAgIFwiUGFyYyBNYWxsIFEuOFwiOiBcIkhDTVwiLFxuICAgICAgXCJTYWlnb24gTWlhIFRydW5nIFPGoW5cIjogXCJIQ01cIixcbiAgICAgIFwixJDhuqNvIE5n4buNYyBOZ8WpIFjDoyBITlwiOiBcIkjDoCBO4buZaVwiLFxuICAgICAgXCJJbXBlcmlhIFNreSBHYXJkZW4gSE5cIjogXCJIw6AgTuG7mWlcIixcbiAgICAgIFwiVmluY29tIELDoCBUcmnhu4d1XCI6IFwiSMOgIE7hu5lpXCIsXG4gICAgICBcIkdvbGQgQ29hc3QgTmhhIFRyYW5nXCI6IFwiTmhhIFRyYW5nXCIsXG4gICAgICBcIlRy4bqnbiBQaMO6IMSQw6AgTuG6tW5nXCI6IFwixJDDoCBO4bq1bmdcIixcbiAgICAgIFwiVmluY29tIFF1YW5nIFRydW5nXCI6IFwiSENNXCIsXG4gICAgfSksXG4gICAgW11cbiAgKTtcbiAgY29uc3QgZGF0YTogRGF0YVBvaW50W10gPSBSZWFjdC51c2VNZW1vKFxuICAgICgpID0+IFtcbiAgICAgIC4uLkFycmF5LmZyb20oeyBsZW5ndGg6IDMwIH0sIChfLCBpKSA9PiB7XG4gICAgICAgIGNvbnN0IGRheSA9IGkgKyAxO1xuICAgICAgICBjb25zdCBkYXRlU3RyID0gYCR7ZGF5fSB0aGcgNmA7XG4gICAgICAgIGNvbnN0IGFsbExvY2F0aW9ucyA9IFtcbiAgICAgICAgICBcIkNyZXNjZW50IE1hbGwgUTdcIixcbiAgICAgICAgICBcIlZpbmNvbSBUaOG6o28gxJBp4buBblwiLFxuICAgICAgICAgIFwiVmlzdGEgVmVyZGVcIixcbiAgICAgICAgICBcIkFlb24gTWFsbCBUw6JuIFBow7ogQ2VsYWRvblwiLFxuICAgICAgICAgIFwiV2VzdHBvaW50IFBo4bqhbSBIw7luZ1wiLFxuICAgICAgICAgIFwiQWVvbiBNYWxsIELDrG5oIFTDom5cIixcbiAgICAgICAgICBcIlZpbmNvbSBQaGFuIFbEg24gVHLhu4tcIixcbiAgICAgICAgICBcIlZpbmNvbSBMYW5kbWFyayA4MVwiLFxuICAgICAgICAgIFwiVFRUTSBFc3RlbGxhIFBsYWNlXCIsXG4gICAgICAgICAgXCJWw7UgVGjhu4sgU8OhdSBRLjFcIixcbiAgICAgICAgICBcIlRoZSBTdW4gQXZlbnVlXCIsXG4gICAgICAgICAgXCJUcsawxqFuZyDEkOG7i25oIFEuM1wiLFxuICAgICAgICAgIFwiSG9hIExhbiBRLlBOXCIsXG4gICAgICAgICAgXCJOb3d6b25lIFEuMVwiLFxuICAgICAgICAgIFwiRXZlcnJpY2ggSW5maW5pdHkgUS41XCIsXG4gICAgICAgICAgXCJTQyBWaXZvQ2l0eVwiLFxuICAgICAgICAgIFwixJDhuqNvIE5n4buNYyBOZ8WpIFjDoyBITlwiLFxuICAgICAgICAgIFwiVmluY29tIEzDqiBWxINuIFZp4buHdFwiLFxuICAgICAgICAgIFwiVGhlIEJvbmF0aWNhIFEuVEJcIixcbiAgICAgICAgICBcIk1pZHRvd24gUS43XCIsXG4gICAgICAgICAgXCJUcuG6p24gUGjDuiDEkMOgIE7hurVuZ1wiLFxuICAgICAgICAgIFwiVmluY29tIFF1YW5nIFRydW5nXCIsXG4gICAgICAgICAgXCJWaW5jb20gQsOgIFRyaeG7h3VcIixcbiAgICAgICAgICBcIkltcGVyaWEgU2t5IEdhcmRlbiBITlwiLFxuICAgICAgICAgIFwiR29sZCBDb2FzdCBOaGEgVHJhbmdcIixcbiAgICAgICAgICBcIlJpdmllcmEgUG9pbnQgUTdcIixcbiAgICAgICAgICBcIlNhaWdvbiBPZmljZVwiLFxuICAgICAgICAgIFwiTWlsbGVuaXVtIEFwYXJ0bWVudCBRLjRcIixcbiAgICAgICAgICBcIlBhcmMgTWFsbCBRLjhcIixcbiAgICAgICAgICBcIlNhaWdvbiBNaWEgVHJ1bmcgU8ahblwiLFxuICAgICAgICBdO1xuICAgICAgICByZXR1cm4gW1xuICAgICAgICAgIHtcbiAgICAgICAgICAgIGRhdGU6IGRhdGVTdHIsXG4gICAgICAgICAgICB2YWx1ZTogMTIwMDAwMCArIChpICUgNSkgKiAyMDAwMCArIGkgKiAxMDAwLFxuICAgICAgICAgICAgdmFsdWUyOiAxMDAwMDAwICsgKGkgJSAzKSAqIDE1MDAwICsgaSAqIDgwMCxcbiAgICAgICAgICAgIHR5cGU6IFwiS0ggdHLhuqNpIG5naGnhu4dtXCIsXG4gICAgICAgICAgICBzdGF0dXM6IFwiTmV3XCIsXG4gICAgICAgICAgICBnZW5kZXI6IFwiTmFtXCIgYXMgY29uc3QsXG4gICAgICAgICAgICByZWdpb246IGxvY2F0aW9uUmVnaW9uTWFwW2FsbExvY2F0aW9uc1tpICUgYWxsTG9jYXRpb25zLmxlbmd0aF1dLFxuICAgICAgICAgICAgYnJhbmNoOiBhbGxMb2NhdGlvbnNbaSAlIGFsbExvY2F0aW9ucy5sZW5ndGhdLFxuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgZGF0ZTogZGF0ZVN0cixcbiAgICAgICAgICAgIHZhbHVlOiAxMjUwMDAwICsgKGkgJSA0KSAqIDE4MDAwICsgaSAqIDEyMDAsXG4gICAgICAgICAgICB2YWx1ZTI6IDEwNTAwMDAgKyAoaSAlIDIpICogMTcwMDAgKyBpICogOTAwLFxuICAgICAgICAgICAgdHlwZTogXCJLSCB0cuG6o2kgbmdoaeG7h21cIixcbiAgICAgICAgICAgIHN0YXR1czogXCJOZXdcIixcbiAgICAgICAgICAgIGdlbmRlcjogXCJO4buvXCIgYXMgY29uc3QsXG4gICAgICAgICAgICByZWdpb246XG4gICAgICAgICAgICAgIGxvY2F0aW9uUmVnaW9uTWFwW2FsbExvY2F0aW9uc1soaSArIDEpICUgYWxsTG9jYXRpb25zLmxlbmd0aF1dLFxuICAgICAgICAgICAgYnJhbmNoOiBhbGxMb2NhdGlvbnNbKGkgKyAxKSAlIGFsbExvY2F0aW9ucy5sZW5ndGhdLFxuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgZGF0ZTogZGF0ZVN0cixcbiAgICAgICAgICAgIHZhbHVlOiAxMzAwMDAwICsgKGkgJSA2KSAqIDIyMDAwICsgaSAqIDExMDAsXG4gICAgICAgICAgICB2YWx1ZTI6IDExMDAwMDAgKyAoaSAlIDQpICogMTMwMDAgKyBpICogNzAwLFxuICAgICAgICAgICAgdHlwZTogXCJLaMOhY2ggaMOgbmcgVGjDoG5oIHZpw6puXCIsXG4gICAgICAgICAgICBzdGF0dXM6IFwiTmV3XCIsXG4gICAgICAgICAgICBnZW5kZXI6IFwiTmFtXCIgYXMgY29uc3QsXG4gICAgICAgICAgICByZWdpb246XG4gICAgICAgICAgICAgIGxvY2F0aW9uUmVnaW9uTWFwW2FsbExvY2F0aW9uc1soaSArIDIpICUgYWxsTG9jYXRpb25zLmxlbmd0aF1dLFxuICAgICAgICAgICAgYnJhbmNoOiBhbGxMb2NhdGlvbnNbKGkgKyAyKSAlIGFsbExvY2F0aW9ucy5sZW5ndGhdLFxuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgZGF0ZTogZGF0ZVN0cixcbiAgICAgICAgICAgIHZhbHVlOiAxMzUwMDAwICsgKGkgJSAzKSAqIDI1MDAwICsgaSAqIDkwMCxcbiAgICAgICAgICAgIHZhbHVlMjogMTE1MDAwMCArIChpICUgNSkgKiAxMjAwMCArIGkgKiA2MDAsXG4gICAgICAgICAgICB0eXBlOiBcIktow6FjaCBow6BuZyBUaMOgbmggdmnDqm5cIixcbiAgICAgICAgICAgIHN0YXR1czogXCJOZXdcIixcbiAgICAgICAgICAgIGdlbmRlcjogXCJO4buvXCIgYXMgY29uc3QsXG4gICAgICAgICAgICByZWdpb246XG4gICAgICAgICAgICAgIGxvY2F0aW9uUmVnaW9uTWFwW2FsbExvY2F0aW9uc1soaSArIDMpICUgYWxsTG9jYXRpb25zLmxlbmd0aF1dLFxuICAgICAgICAgICAgYnJhbmNoOiBhbGxMb2NhdGlvbnNbKGkgKyAzKSAlIGFsbExvY2F0aW9ucy5sZW5ndGhdLFxuICAgICAgICAgIH0sXG4gICAgICAgIF07XG4gICAgICB9KS5mbGF0KCksXG4gICAgXSxcbiAgICBbbG9jYXRpb25SZWdpb25NYXBdXG4gICk7XG5cbiAgY29uc3QgVG90YWxSZWdpb25hbFNhbGVzOiBUb3RhbFJlZ2lvbmFsU2FsZXNbXSA9IFtcbiAgICB7XG4gICAgICBkYXRlOiBcIjkgdGhnIDYsIDIwMjVcIixcbiAgICAgIEhDTTogMTAwLFxuICAgICAgSGFOb2k6IDkwLFxuICAgICAgRGFOYW5nOiA4MCxcbiAgICAgIE5oYVRyYW5nOiA3MCxcbiAgICAgIERhRG9uZ0N1YTogNjAsXG4gICAgICB0eXBlOiBcIlThu5VuZ1wiLFxuICAgICAgc3RhdHVzOiBcIkFsbFwiLFxuICAgIH0sXG5cbiAgICB7XG4gICAgICBkYXRlOiBcIjggdGhnIDYsIDIwMjVcIixcbiAgICAgIEhDTTogMTAwLFxuICAgICAgSGFOb2k6IDkwLFxuICAgICAgRGFOYW5nOiA4MCxcbiAgICAgIE5oYVRyYW5nOiA3MCxcbiAgICAgIERhRG9uZ0N1YTogNjAsXG4gICAgICB0eXBlOiBcIlThu5VuZ1wiLFxuICAgICAgc3RhdHVzOiBcIkFsbFwiLFxuICAgIH0sXG4gICAge1xuICAgICAgZGF0ZTogXCI3IHRoZyA2LCAyMDI1XCIsXG4gICAgICBIQ006IDEwMCxcbiAgICAgIEhhTm9pOiA5MCxcbiAgICAgIERhTmFuZzogODAsXG4gICAgICBOaGFUcmFuZzogNzAsXG4gICAgICBEYURvbmdDdWE6IDYwLFxuICAgICAgdHlwZTogXCJU4buVbmdcIixcbiAgICAgIHN0YXR1czogXCJBbGxcIixcbiAgICB9LFxuICAgIHtcbiAgICAgIGRhdGU6IFwiNiB0aGcgNiwgMjAyNVwiLFxuICAgICAgSENNOiAxMDAsXG4gICAgICBIYU5vaTogOTAsXG4gICAgICBEYU5hbmc6IDgwLFxuICAgICAgTmhhVHJhbmc6IDcwLFxuICAgICAgRGFEb25nQ3VhOiA2MCxcbiAgICAgIHR5cGU6IFwiVOG7lW5nXCIsXG4gICAgICBzdGF0dXM6IFwiQWxsXCIsXG4gICAgfSxcbiAgICB7XG4gICAgICBkYXRlOiBcIjUgdGhnIDYsIDIwMjVcIixcbiAgICAgIEhDTTogMTAwLFxuICAgICAgSGFOb2k6IDkwLFxuICAgICAgRGFOYW5nOiA4MCxcbiAgICAgIE5oYVRyYW5nOiA3MCxcbiAgICAgIERhRG9uZ0N1YTogNjAsXG4gICAgICB0eXBlOiBcIlThu5VuZ1wiLFxuICAgICAgc3RhdHVzOiBcIkFsbFwiLFxuICAgIH0sXG4gICAge1xuICAgICAgZGF0ZTogXCI0IHRoZyA2LCAyMDI1XCIsXG4gICAgICBIQ006IDEwMCxcbiAgICAgIEhhTm9pOiA5MCxcbiAgICAgIERhTmFuZzogODAsXG4gICAgICBOaGFUcmFuZzogNzAsXG4gICAgICBEYURvbmdDdWE6IDYwLFxuICAgICAgdHlwZTogXCJU4buVbmdcIixcbiAgICAgIHN0YXR1czogXCJBbGxcIixcbiAgICB9LFxuICAgIHtcbiAgICAgIGRhdGU6IFwiMyB0aGcgNiwgMjAyNVwiLFxuICAgICAgSENNOiAxMDAsXG4gICAgICBIYU5vaTogOTAsXG4gICAgICBEYU5hbmc6IDgwLFxuICAgICAgTmhhVHJhbmc6IDcwLFxuICAgICAgRGFEb25nQ3VhOiA2MCxcbiAgICAgIHR5cGU6IFwiVOG7lW5nXCIsXG4gICAgICBzdGF0dXM6IFwiQWxsXCIsXG4gICAgfSxcbiAgICB7XG4gICAgICBkYXRlOiBcIjEgdGhnIDYsIDIwMjVcIixcbiAgICAgIEhDTTogMTAwLFxuICAgICAgSGFOb2k6IDkwLFxuICAgICAgRGFOYW5nOiA4MCxcbiAgICAgIE5oYVRyYW5nOiA3MCxcbiAgICAgIERhRG9uZ0N1YTogNjAsXG4gICAgICB0eXBlOiBcIlThu5VuZ1wiLFxuICAgICAgc3RhdHVzOiBcIkFsbFwiLFxuICAgIH0sXG4gICAge1xuICAgICAgZGF0ZTogXCIyIHRoZyA2LCAyMDI1XCIsXG4gICAgICBIQ006IDEwMCxcbiAgICAgIEhhTm9pOiA5MCxcbiAgICAgIERhTmFuZzogODAsXG4gICAgICBOaGFUcmFuZzogNzAsXG4gICAgICBEYURvbmdDdWE6IDYwLFxuICAgICAgdHlwZTogXCJU4buVbmdcIixcbiAgICAgIHN0YXR1czogXCJBbGxcIixcbiAgICB9LFxuICBdO1xuXG4gIGZ1bmN0aW9uIGZvcm1hdE1vbmV5U2hvcnQodmFsOiBudW1iZXIpIHtcbiAgICBpZiAodmFsID49IDFfMDAwXzAwMF8wMDBfMDAwKVxuICAgICAgcmV0dXJuICh2YWwgLyAxXzAwMF8wMDBfMDAwXzAwMCkudG9GaXhlZCgxKSArIFwiIFRcIjtcbiAgICBpZiAodmFsID49IDFfMDAwXzAwMF8wMDApIHJldHVybiAodmFsIC8gMV8wMDBfMDAwXzAwMCkudG9GaXhlZCgxKSArIFwiIFRcIjtcbiAgICBpZiAodmFsID49IDFfMDAwXzAwMCkgcmV0dXJuICh2YWwgLyAxXzAwMF8wMDApLnRvRml4ZWQoMSkgKyBcIiBUclwiO1xuICAgIHJldHVybiB2YWwudG9Mb2NhbGVTdHJpbmcoKTtcbiAgfVxuXG4gIGNvbnN0IFJFR0lPTlMgPSBbXG4gICAgXCJIQ01cIixcbiAgICBcIkjDoCBO4buZaVwiLFxuICAgIFwixJDDoCBO4bq1bmdcIixcbiAgICBcIk5oYSBUcmFuZ1wiLFxuICAgIFwixJDDoyDEkMOzbmcgQ+G7rWFcIixcbiAgICBcIktow6FjXCIsXG4gIF07XG5cbiAgY29uc3QgaXNJbldlZWsgPSBSZWFjdC51c2VDYWxsYmFjayhcbiAgICAoZDogRGF0YVBvaW50LCBzdGFydDogQ2FsZW5kYXJEYXRlLCBlbmQ6IENhbGVuZGFyRGF0ZSkgPT4ge1xuICAgICAgY29uc3QgZERhdGUgPSBwYXJzZVZORGF0ZShkLmRhdGUpO1xuICAgICAgcmV0dXJuIGREYXRlLmNvbXBhcmUoc3RhcnQpID49IDAgJiYgZERhdGUuY29tcGFyZShlbmQpIDw9IDA7XG4gICAgfSxcbiAgICBbXVxuICApO1xuXG4gIC8vIMSQ4bq3dCBjw6FjIGJp4bq/biB0deG6p24gbMOqbiB0csaw4bubY1xuICBjb25zdCB3ZWVrU3RhcnQgPSBzdGFydERhdGU7XG4gIGNvbnN0IHdlZWtFbmQgPSBlbmREYXRlO1xuICBjb25zdCBwcmV2V2Vla1N0YXJ0ID0gc3RhcnREYXRlLnN1YnRyYWN0KHsgZGF5czogNyB9KTtcbiAgY29uc3QgcHJldldlZWtFbmQgPSBzdGFydERhdGUuc3VidHJhY3QoeyBkYXlzOiAxIH0pO1xuXG4gIGNvbnN0IHdlZWtSZXZlbnVlRGF0YSA9IGZpbHRlckRhdGEoXG4gICAgVG90YWxSZWdpb25hbFNhbGVzLFxuICAgIHNlbGVjdGVkUmVnaW9ucyxcbiAgICBzZWxlY3RlZEJyYW5jaGVzXG4gICk7XG4gIGNvbnN0IHByZXZXZWVrUmV2ZW51ZURhdGEgPSBmaWx0ZXJEYXRhKFxuICAgIFRvdGFsUmVnaW9uYWxTYWxlcyxcbiAgICBzZWxlY3RlZFJlZ2lvbnMsXG4gICAgc2VsZWN0ZWRCcmFuY2hlc1xuICApO1xuXG4gIC8vIEhlbHBlciB0byBtYXAgcmVnaW9uIGRpc3BsYXkgbmFtZSB0byBkYXRhIGtleVxuICBmdW5jdGlvbiBnZXRSZWdpb25LZXkocmVnaW9uOiBzdHJpbmcpOiBrZXlvZiBUb3RhbFJlZ2lvbmFsU2FsZXMgfCBzdHJpbmcge1xuICAgIHN3aXRjaCAocmVnaW9uKSB7XG4gICAgICBjYXNlIFwiSENNXCI6XG4gICAgICAgIHJldHVybiBcIkhDTVwiO1xuICAgICAgY2FzZSBcIkjDoCBO4buZaVwiOlxuICAgICAgICByZXR1cm4gXCJIYU5vaVwiO1xuICAgICAgY2FzZSBcIsSQw6AgTuG6tW5nXCI6XG4gICAgICAgIHJldHVybiBcIkRhTmFuZ1wiO1xuICAgICAgY2FzZSBcIk5oYSBUcmFuZ1wiOlxuICAgICAgICByZXR1cm4gXCJOaGFUcmFuZ1wiO1xuICAgICAgY2FzZSBcIsSQw6MgxJDDs25nIEPhu61hXCI6XG4gICAgICAgIHJldHVybiBcIkRhRG9uZ0N1YVwiO1xuICAgICAgY2FzZSBcIktow6FjXCI6XG4gICAgICAgIHJldHVybiBcIktoYWNcIjtcbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIHJldHVybiBcIkhDTVwiO1xuICAgIH1cbiAgfVxuXG4gIGNvbnN0IHJlZ2lvblN0YXRzID0gUkVHSU9OUy5tYXAoKHJlZ2lvbikgPT4ge1xuICAgIGNvbnN0IG9yZGVyc1RoaXNXZWVrID0gZGF0YS5maWx0ZXIoXG4gICAgICAoZCkgPT4gZC5yZWdpb24gPT09IHJlZ2lvbiAmJiBpc0luV2VlayhkLCB3ZWVrU3RhcnQsIHdlZWtFbmQpXG4gICAgKS5sZW5ndGg7XG4gICAgY29uc3Qgb3JkZXJzTGFzdFdlZWsgPSBkYXRhLmZpbHRlcihcbiAgICAgIChkKSA9PiBkLnJlZ2lvbiA9PT0gcmVnaW9uICYmIGlzSW5XZWVrKGQsIHByZXZXZWVrU3RhcnQsIHByZXZXZWVrRW5kKVxuICAgICkubGVuZ3RoO1xuICAgIGNvbnN0IGRlbHRhT3JkZXJzID0gb3JkZXJzVGhpc1dlZWsgLSBvcmRlcnNMYXN0V2VlaztcbiAgICBjb25zdCByZWdpb25LZXkgPSBnZXRSZWdpb25LZXkocmVnaW9uKSBhcyBrZXlvZiBUb3RhbFJlZ2lvbmFsU2FsZXM7XG4gICAgY29uc3QgcmV2ZW51ZVRoaXNXZWVrID0gd2Vla1JldmVudWVEYXRhLnJlZHVjZShcbiAgICAgIChzdW0sIGl0ZW0pID0+IHN1bSArIE51bWJlcihpdGVtW3JlZ2lvbktleV0gPz8gMCksXG4gICAgICAwXG4gICAgKTtcbiAgICBjb25zdCByZXZlbnVlTGFzdFdlZWsgPSBwcmV2V2Vla1JldmVudWVEYXRhLnJlZHVjZShcbiAgICAgIChzdW0sIGl0ZW0pID0+IHN1bSArIE51bWJlcihpdGVtW3JlZ2lvbktleV0gPz8gMCksXG4gICAgICAwXG4gICAgKTtcbiAgICBjb25zdCBwZXJjZW50RGVsdGEgPVxuICAgICAgcmV2ZW51ZUxhc3RXZWVrID09PSAwXG4gICAgICAgID8gbnVsbFxuICAgICAgICA6ICgocmV2ZW51ZVRoaXNXZWVrIC0gcmV2ZW51ZUxhc3RXZWVrKSAvIHJldmVudWVMYXN0V2VlaykgKiAxMDA7XG4gICAgcmV0dXJuIHtcbiAgICAgIHJlZ2lvbixcbiAgICAgIG9yZGVyc1RoaXNXZWVrLFxuICAgICAgZGVsdGFPcmRlcnMsXG4gICAgICByZXZlbnVlVGhpc1dlZWssXG4gICAgICBwZXJjZW50RGVsdGEsXG4gICAgICByZXZlbnVlTGFzdFdlZWssXG4gICAgfTtcbiAgfSk7XG5cblxuXG4gIGZ1bmN0aW9uIHBhcnNlVk5EYXRlKHN0cjogc3RyaW5nKTogQ2FsZW5kYXJEYXRlIHtcbiAgICBsZXQgbWF0Y2ggPSBzdHIubWF0Y2goL14oXFxkezEsMn0pIHRoZyAoXFxkezEsMn0pLCAoXFxkezR9KSQvKTtcbiAgICBpZiAobWF0Y2gpIHtcbiAgICAgIGNvbnN0IFssIGRheSwgbW9udGgsIHllYXJdID0gbWF0Y2g7XG4gICAgICByZXR1cm4gcGFyc2VEYXRlKFxuICAgICAgICBgJHt5ZWFyfS0ke21vbnRoLnBhZFN0YXJ0KDIsIFwiMFwiKX0tJHtkYXkucGFkU3RhcnQoMiwgXCIwXCIpfWBcbiAgICAgICk7XG4gICAgfVxuXG4gICAgbWF0Y2ggPSBzdHIubWF0Y2goL14oXFxkezEsMn0pIHRoZyAoXFxkezEsMn0pJC8pO1xuICAgIGlmIChtYXRjaCkge1xuICAgICAgY29uc3QgWywgZGF5LCBtb250aF0gPSBtYXRjaDtcbiAgICAgIGNvbnN0IHllYXIgPSBTdHJpbmcobmV3IERhdGUoKS5nZXRGdWxsWWVhcigpKTtcbiAgICAgIHJldHVybiBwYXJzZURhdGUoXG4gICAgICAgIGAke3llYXJ9LSR7bW9udGgucGFkU3RhcnQoMiwgXCIwXCIpfS0ke2RheS5wYWRTdGFydCgyLCBcIjBcIil9YFxuICAgICAgKTtcbiAgICB9XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiSW52YWxpZCBkYXRlIGZvcm1hdDogXCIgKyBzdHIpO1xuICB9XG5cbiAgLy8gU+G7rWEgZmlsdGVyRGF0YSDEkeG7gyBs4buNYyB0aGVvIHJlZ2lvbi9icmFuY2ggbuG6v3UgY8OzXG4gIGZ1bmN0aW9uIGZpbHRlckRhdGE8XG4gICAgVCBleHRlbmRzIHtcbiAgICAgIHR5cGU6IHN0cmluZztcbiAgICAgIHN0YXR1czogc3RyaW5nO1xuICAgICAgZGF0ZTogc3RyaW5nO1xuICAgICAgcmVnaW9uPzogc3RyaW5nO1xuICAgICAgYnJhbmNoPzogc3RyaW5nO1xuICAgIH1cbiAgPihkYXRhOiBUW10sIHNlbGVjdGVkUmVnaW9ucz86IHN0cmluZ1tdLCBzZWxlY3RlZEJyYW5jaGVzPzogc3RyaW5nW10pOiBUW10ge1xuICAgIHJldHVybiBkYXRhLmZpbHRlcigoaXRlbSkgPT4ge1xuICAgICAgY29uc3QgbWF0Y2hSZWdpb24gPVxuICAgICAgICAhc2VsZWN0ZWRSZWdpb25zIHx8XG4gICAgICAgIHNlbGVjdGVkUmVnaW9ucy5sZW5ndGggPT09IDAgfHxcbiAgICAgICAgIWl0ZW0ucmVnaW9uIHx8XG4gICAgICAgIHNlbGVjdGVkUmVnaW9ucy5pbmNsdWRlcyhpdGVtLnJlZ2lvbik7XG4gICAgICBjb25zdCBtYXRjaEJyYW5jaCA9XG4gICAgICAgICFzZWxlY3RlZEJyYW5jaGVzIHx8XG4gICAgICAgIHNlbGVjdGVkQnJhbmNoZXMubGVuZ3RoID09PSAwIHx8XG4gICAgICAgICFpdGVtLmJyYW5jaCB8fFxuICAgICAgICBzZWxlY3RlZEJyYW5jaGVzLmluY2x1ZGVzKGl0ZW0uYnJhbmNoKTtcbiAgICAgIHJldHVybiBtYXRjaFJlZ2lvbiAmJiBtYXRjaEJyYW5jaDtcbiAgICB9KTtcbiAgfVxuICBjb25zdCBbc2VydmljZVNlYXJjaF0gPSB1c2VTdGF0ZShcIlwiKTtcbiAgY29uc3QgW2dlbmRlclNlYXJjaF0gPSB1c2VTdGF0ZShcIlwiKTtcbiAgY29uc3Qgc2VydmljZURyb3Bkb3duUmVmID0gdXNlUmVmPEhUTUxEaXZFbGVtZW50PihudWxsKTtcbiAgY29uc3QgZ2VuZGVyRHJvcGRvd25SZWYgPSB1c2VSZWY8SFRNTERpdkVsZW1lbnQ+KG51bGwpO1xuXG4gIC8vIMSQw7NuZyBkcm9wZG93biBraGkgY2xpY2sgbmdvw6BpXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgZnVuY3Rpb24gaGFuZGxlQ2xpY2soZTogTW91c2VFdmVudCkge1xuICAgICAgaWYgKFxuICAgICAgICBzZXJ2aWNlRHJvcGRvd25SZWYuY3VycmVudCAmJlxuICAgICAgICAhc2VydmljZURyb3Bkb3duUmVmLmN1cnJlbnQuY29udGFpbnMoZS50YXJnZXQgYXMgTm9kZSlcbiAgICAgICkge1xuICAgICAgfVxuICAgICAgaWYgKFxuICAgICAgICBnZW5kZXJEcm9wZG93blJlZi5jdXJyZW50ICYmXG4gICAgICAgICFnZW5kZXJEcm9wZG93blJlZi5jdXJyZW50LmNvbnRhaW5zKGUudGFyZ2V0IGFzIE5vZGUpXG4gICAgICApIHtcbiAgICAgIH1cbiAgICB9XG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcIm1vdXNlZG93blwiLCBoYW5kbGVDbGljayk7XG4gICAgcmV0dXJuICgpID0+IGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJtb3VzZWRvd25cIiwgaGFuZGxlQ2xpY2spO1xuICB9LCBbXSk7XG5cbiAgLy8gRmlsdGVyIG9wdGlvbnMgdGhlbyBzZWFyY2hcbiAgY29uc3QgZmlsdGVyZWRTZXJ2aWNlVHlwZXMgPSBBTExfU0VSVklDRV9UWVBFUy5maWx0ZXIoKHMpID0+XG4gICAgcy5sYWJlbC50b0xvd2VyQ2FzZSgpLmluY2x1ZGVzKHNlcnZpY2VTZWFyY2gudG9Mb3dlckNhc2UoKSlcbiAgKTtcbiAgY29uc3QgZmlsdGVyZWRHZW5kZXJzID0gQUxMX0dFTkRFUlMuZmlsdGVyKChnKSA9PlxuICAgIGcudG9Mb3dlckNhc2UoKS5pbmNsdWRlcyhnZW5kZXJTZWFyY2gudG9Mb3dlckNhc2UoKSlcbiAgKTtcblxuICBjb25zdCByZWdpb25PcHRpb25zID0gcmVnaW9uU3RhdHMubWFwKChyKSA9PiAoe1xuICAgIG5hbWU6IHIucmVnaW9uLFxuICAgIHRvdGFsOiBPYmplY3QudmFsdWVzKGxvY2F0aW9uUmVnaW9uTWFwKS5maWx0ZXIoKHJlZykgPT4gcmVnID09PSByLnJlZ2lvbilcbiAgICAgIC5sZW5ndGgsXG4gIH0pKTtcbiAgY29uc3QgZmlsdGVyZWRSZWdpb25PcHRpb25zID0gUmVhY3QudXNlTWVtbyhcbiAgICAoKSA9PlxuICAgICAgcmVnaW9uT3B0aW9ucy5maWx0ZXIoKHIpID0+XG4gICAgICAgIHIubmFtZS50b0xvd2VyQ2FzZSgpLmluY2x1ZGVzKHJlZ2lvblNlYXJjaC50b0xvd2VyQ2FzZSgpKVxuICAgICAgKSxcbiAgICBbcmVnaW9uT3B0aW9ucywgcmVnaW9uU2VhcmNoXVxuICApO1xuXG4gIC8vIFTDrW5oIHRvcCAxMCBsb2NhdGlvbiAoY2hpIG5ow6FuaC9j4butYSBow6BuZykgdGhlbyB0aOG7sWMgdGh1IHR14bqnbiBuw6B5XG4gIGNvbnN0IGxvY2F0aW9uUmV2ZW51ZU1hcDogUmVjb3JkPHN0cmluZywgbnVtYmVyPiA9IHt9O1xuICBsb2NhdGlvbk9wdGlvbnMuZm9yRWFjaCgobG9jKSA9PiB7XG4gICAgbG9jYXRpb25SZXZlbnVlTWFwW2xvY10gPSBkYXRhXG4gICAgICAuZmlsdGVyKChkKSA9PiBkLmJyYW5jaCA9PT0gbG9jICYmIGlzSW5XZWVrKGQsIHdlZWtTdGFydCwgd2Vla0VuZCkpXG4gICAgICAucmVkdWNlKChzdW0sIGQpID0+IHN1bSArIGQudmFsdWUsIDApO1xuICB9KTtcblxuICBjb25zdCBvcmRlcnNCeURheTogUmVjb3JkPHN0cmluZywgeyBjb3VudDogbnVtYmVyOyBhdmdQZXJTaG9wOiBudW1iZXIgfT4gPSB7fTtcbiAgZGF0YS5mb3JFYWNoKChkKSA9PiB7XG4gICAgaWYgKGQudHlwZSAhPT0gXCJLaMOhY2ggaMOgbmcgVGjDoG5oIHZpw6puXCIpIHtcbiAgICAgIGlmICghb3JkZXJzQnlEYXlbZC5kYXRlXSkge1xuICAgICAgICBvcmRlcnNCeURheVtkLmRhdGVdID0geyBjb3VudDogMCwgYXZnUGVyU2hvcDogMCB9O1xuICAgICAgfVxuICAgICAgb3JkZXJzQnlEYXlbZC5kYXRlXS5jb3VudCsrO1xuICAgIH1cbiAgfSk7XG4gIC8vIFTDrW5oIHRydW5nIGLDrG5oIHPhu5EgbMaw4bujbmcgxJHGoW4gdOG6oWkgbeG7l2kgc2hvcCBjaG8gdOG7q25nIG5nw6B5XG4gIE9iamVjdC5rZXlzKG9yZGVyc0J5RGF5KS5mb3JFYWNoKChkYXRlKSA9PiB7XG4gICAgLy8gxJDhur9tIHPhu5Egc2hvcCBjw7MgxJHGoW4gdHJvbmcgbmfDoHkgxJHDs1xuICAgIGNvbnN0IHNob3BzID0gbmV3IFNldChcbiAgICAgIGRhdGFcbiAgICAgICAgLmZpbHRlcigoZCkgPT4gZC5kYXRlID09PSBkYXRlICYmIGQudHlwZSAhPT0gXCJLaMOhY2ggaMOgbmcgVGjDoG5oIHZpw6puXCIpXG4gICAgICAgIC5tYXAoKGQpID0+IGQuYnJhbmNoKVxuICAgICk7XG4gICAgb3JkZXJzQnlEYXlbZGF0ZV0uYXZnUGVyU2hvcCA9XG4gICAgICBzaG9wcy5zaXplID4gMCA/IE1hdGgucm91bmQob3JkZXJzQnlEYXlbZGF0ZV0uY291bnQgLyBzaG9wcy5zaXplKSA6IDA7XG4gIH0pO1xuICBjb25zdCBvcmRlcnNCeURheUFyciA9IE9iamVjdC5lbnRyaWVzKG9yZGVyc0J5RGF5KS5zb3J0KChhLCBiKSA9PiB7XG4gICAgLy8gU29ydCB0aGVvIG5nw6B5IHTEg25nIGThuqduXG4gICAgY29uc3QgW2QxLCBtMV0gPSBhWzBdLnNwbGl0KFwiIHRoZyBcIik7XG4gICAgY29uc3QgW2QyLCBtMl0gPSBiWzBdLnNwbGl0KFwiIHRoZyBcIik7XG4gICAgcmV0dXJuIE51bWJlcihtMSkgIT09IE51bWJlcihtMilcbiAgICAgID8gTnVtYmVyKG0xKSAtIE51bWJlcihtMilcbiAgICAgIDogTnVtYmVyKGQxKSAtIE51bWJlcihkMik7XG4gIH0pO1xuXG4gIC8vIEdp4bqjIGzhuq1wIHPhu5EgxJHGoW4gaMOgbmcgbeG7l2kgbmfDoHkgKHbDrSBk4bulIDMxIG5nw6B5KVxuICBjb25zdCBmYWtlT3JkZXJDb3VudHMgPSBbXG4gICAgMjQwLCAxNzMsIDIwMSwgMjgxLCAyNjksIDE2NywgMTY2LCAxMzEsIDIyOCwgMjQ3LCAzODAsIDQwMywgMjE3LCAxOTMsIDIxMCxcbiAgICAyMzYsIDI0NCwgMzY3LCA0MTEsIDI3MSwgMjU2LCAyODgsIDI5MSwgMzU4LCAzOTgsIDMwOSwgMTkxLCA0OSwgMTcsIDMxLCA2NyxcbiAgXTtcblxuICAvLyBHw6FuIGzhuqFpIHbDoG8gb3JkZXJzQnlEYXlBcnJcbiAgb3JkZXJzQnlEYXlBcnIuZm9yRWFjaCgoWywgdmFsXSwgaWR4KSA9PiB7XG4gICAgdmFsLmNvdW50ID0gZmFrZU9yZGVyQ291bnRzW2lkeCAlIGZha2VPcmRlckNvdW50cy5sZW5ndGhdO1xuICAgIC8vIFThuqFvIHRydW5nIGLDrG5oIHNob3Agbmfhuqt1IG5oacOqbiAoNS0xNSlcbiAgICB2YWwuYXZnUGVyU2hvcCA9IDUgKyBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAxMSk7XG4gIH0pO1xuXG4gIGNvbnN0IHdlZWtEYXRlczogQ2FsZW5kYXJEYXRlW10gPSBSZWFjdC51c2VNZW1vKCgpID0+IHtcbiAgICBjb25zdCBkYXRlczogQ2FsZW5kYXJEYXRlW10gPSBbXTtcbiAgICBsZXQgZCA9IHdlZWtTdGFydDtcbiAgICB3aGlsZSAoZC5jb21wYXJlKHdlZWtFbmQpIDw9IDApIHtcbiAgICAgIGRhdGVzLnB1c2goZCk7XG4gICAgICBkID0gZC5hZGQoeyBkYXlzOiAxIH0pO1xuICAgIH1cbiAgICByZXR1cm4gZGF0ZXM7XG4gIH0sIFt3ZWVrU3RhcnQsIHdlZWtFbmRdKTtcblxuICAvLyBY4butIGzDvSBk4buvIGxp4buHdSBBUEkgY2hvIGNoYXJ0IHThu5VuZyBk4buLY2ggduG7pSB0aOG7sWMgaGnhu4duIHRyb25nIHR14bqnblxuICBjb25zdCB3ZWVrbHlTZXJ2aWNlQ2hhcnREYXRhID0gUmVhY3QudXNlTWVtbygoKSA9PiB7XG4gICAgaWYgKCFzZXJ2aWNlVHlwZURhdGEpIHtcbiAgICAgIC8vIEZhbGxiYWNrIGRhdGEgbuG6v3UgQVBJIGNoxrBhIGxvYWRcbiAgICAgIHJldHVybiB3ZWVrRGF0ZXMubWFwKChkYXRlT2JqKSA9PiB7XG4gICAgICAgIGNvbnN0IGRhdGVTdHIgPSBgJHtkYXRlT2JqLmRheX0gdGhnICR7ZGF0ZU9iai5tb250aH1gO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIGRhdGU6IGRhdGVTdHIsXG4gICAgICAgICAgY29tYm86IDAsXG4gICAgICAgICAgc2VydmljZTogMCxcbiAgICAgICAgICBhZGRlZG9uOiAwLFxuICAgICAgICAgIGZveGNhcmQ6IDAsXG4gICAgICAgIH07XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICAvLyBU4bqhbyBtYXAgxJHhu4MgbmjDs20gZOG7ryBsaeG7h3UgdGhlbyBuZ8OgeVxuICAgIGNvbnN0IGRhdGFCeURhdGUgPSBuZXcgTWFwPFxuICAgICAgc3RyaW5nLFxuICAgICAgeyBjb21ibzogbnVtYmVyOyBzZXJ2aWNlOiBudW1iZXI7IGFkZGVkb246IG51bWJlcjsgZm94Y2FyZDogbnVtYmVyIH1cbiAgICA+KCk7XG5cbiAgICAvLyBLaOG7n2kgdOG6oW8gZOG7ryBsaeG7h3UgY2hvIHThuqV0IGPhuqMgY8OhYyBuZ8OgeSB0cm9uZyB0deG6p25cbiAgICB3ZWVrRGF0ZXMuZm9yRWFjaCgoZGF0ZU9iaikgPT4ge1xuICAgICAgY29uc3QgZGF0ZUtleSA9IGAke2RhdGVPYmoueWVhcn0tJHtTdHJpbmcoZGF0ZU9iai5tb250aCkucGFkU3RhcnQoXG4gICAgICAgIDIsXG4gICAgICAgIFwiMFwiXG4gICAgICApfS0ke1N0cmluZyhkYXRlT2JqLmRheSkucGFkU3RhcnQoMiwgXCIwXCIpfWA7XG4gICAgICBkYXRhQnlEYXRlLnNldChkYXRlS2V5LCB7IGNvbWJvOiAwLCBzZXJ2aWNlOiAwLCBhZGRlZG9uOiAwLCBmb3hjYXJkOiAwIH0pO1xuICAgIH0pO1xuXG4gICAgLy8gWOG7rSBsw70gZOG7ryBsaeG7h3UgdOG7qyBBUElcbiAgICBzZXJ2aWNlVHlwZURhdGEuZm9yRWFjaCgoaXRlbSkgPT4ge1xuICAgICAgY29uc3QgZGF0ZUtleSA9IGl0ZW0uZGF0ZTtcbiAgICAgIGNvbnN0IGV4aXN0aW5nID0gZGF0YUJ5RGF0ZS5nZXQoZGF0ZUtleSk7XG5cbiAgICAgIGlmIChleGlzdGluZykge1xuICAgICAgICBzd2l0Y2ggKGl0ZW0udHlwZSkge1xuICAgICAgICAgIGNhc2UgXCJDb21ib1wiOlxuICAgICAgICAgICAgZXhpc3RpbmcuY29tYm8gPSBpdGVtLmNvdW50O1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgY2FzZSBcIkThu4tjaCB24bulXCI6XG4gICAgICAgICAgICBleGlzdGluZy5zZXJ2aWNlID0gaXRlbS5jb3VudDtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgXCJLaMOhY1wiOlxuICAgICAgICAgICAgZXhpc3RpbmcuYWRkZWRvbiA9IGl0ZW0uY291bnQ7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgLy8gQ8OhYyBsb+G6oWkga2jDoWMgY8OzIHRo4buDIMSRxrDhu6NjIHjhu60gbMO9IOG7nyDEkcOieVxuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9KTtcblxuICAgIC8vIENodXnhu4NuIMSR4buVaSB0aMOgbmggZm9ybWF0IGNobyBjaGFydFxuICAgIHJldHVybiB3ZWVrRGF0ZXMubWFwKChkYXRlT2JqKSA9PiB7XG4gICAgICBjb25zdCBkYXRlS2V5ID0gYCR7ZGF0ZU9iai55ZWFyfS0ke1N0cmluZyhkYXRlT2JqLm1vbnRoKS5wYWRTdGFydChcbiAgICAgICAgMixcbiAgICAgICAgXCIwXCJcbiAgICAgICl9LSR7U3RyaW5nKGRhdGVPYmouZGF5KS5wYWRTdGFydCgyLCBcIjBcIil9YDtcbiAgICAgIGNvbnN0IGRhdGEgPSBkYXRhQnlEYXRlLmdldChkYXRlS2V5KSB8fCB7XG4gICAgICAgIGNvbWJvOiAwLFxuICAgICAgICBzZXJ2aWNlOiAwLFxuICAgICAgICBhZGRlZG9uOiAwLFxuICAgICAgICBmb3hjYXJkOiAwLFxuICAgICAgfTtcbiAgICAgIGNvbnN0IHRvdGFsID0gZGF0YS5jb21ibyArIGRhdGEuc2VydmljZSArIGRhdGEuYWRkZWRvbjtcbiAgICAgIGNvbnN0IGZveGNhcmQgPSBNYXRoLnJvdW5kKHRvdGFsICogMC4yMTgpO1xuXG4gICAgICByZXR1cm4ge1xuICAgICAgICBkYXRlOiBgJHtkYXRlT2JqLmRheX0gdGhnICR7ZGF0ZU9iai5tb250aH1gLFxuICAgICAgICBjb21ibzogZGF0YS5jb21ibyxcbiAgICAgICAgc2VydmljZTogZGF0YS5zZXJ2aWNlLFxuICAgICAgICBhZGRlZG9uOiBkYXRhLmFkZGVkb24sXG4gICAgICAgIGZveGNhcmQ6IGZveGNhcmQsXG4gICAgICB9O1xuICAgIH0pO1xuICB9LCBbc2VydmljZVR5cGVEYXRhLCB3ZWVrRGF0ZXNdKTtcblxuXG5cbiAgLy8gWOG7rSBsw70gZOG7ryBsaeG7h3UgY2hvIGNoYXJ0IHThu5VuZyBk4buLY2ggduG7pSB0aOG7sWMgaGnhu4duIHRoZW8ga2h1IHbhu7FjXG4gIGNvbnN0IHJlZ2lvbkNoYXJ0RGF0YSA9IFJlYWN0LnVzZU1lbW8oKCkgPT4ge1xuICAgIGlmICghcmVnaW9uRGF0YSkgcmV0dXJuIFtdO1xuXG4gICAgLy8gTmjDs20gZOG7ryBsaeG7h3UgdGhlbyBraHUgduG7sWNcbiAgICBjb25zdCByZWdpb25NYXAgPSBuZXcgTWFwPFxuICAgICAgc3RyaW5nLFxuICAgICAgeyBjb21ibzogbnVtYmVyOyBzZXJ2aWNlOiBudW1iZXI7IG90aGVyOiBudW1iZXIgfVxuICAgID4oKTtcblxuICAgIHJlZ2lvbkRhdGEuZm9yRWFjaCgoaXRlbSkgPT4ge1xuICAgICAgaWYgKCFyZWdpb25NYXAuaGFzKGl0ZW0ucmVnaW9uKSkge1xuICAgICAgICByZWdpb25NYXAuc2V0KGl0ZW0ucmVnaW9uLCB7IGNvbWJvOiAwLCBzZXJ2aWNlOiAwLCBvdGhlcjogMCB9KTtcbiAgICAgIH1cblxuICAgICAgY29uc3QgcmVnaW9uID0gcmVnaW9uTWFwLmdldChpdGVtLnJlZ2lvbikhO1xuICAgICAgc3dpdGNoIChpdGVtLnR5cGUpIHtcbiAgICAgICAgY2FzZSBcIkNvbWJvXCI6XG4gICAgICAgICAgcmVnaW9uLmNvbWJvID0gaXRlbS50b3RhbDtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgY2FzZSBcIkThu4tjaCB24bulXCI6XG4gICAgICAgICAgcmVnaW9uLnNlcnZpY2UgPSBpdGVtLnRvdGFsO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlIFwiS2jDoWNcIjpcbiAgICAgICAgICByZWdpb24ub3RoZXIgPSBpdGVtLnRvdGFsO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgfVxuICAgIH0pO1xuXG4gICAgLy8gQ2h1eeG7g24gxJHhu5VpIHRow6BuaCBmb3JtYXQgY2hvIGNoYXJ0XG4gICAgcmV0dXJuIEFycmF5LmZyb20ocmVnaW9uTWFwLmVudHJpZXMoKSlcbiAgICAgIC5tYXAoKFtyZWdpb25OYW1lLCBkYXRhXSkgPT4gKHtcbiAgICAgICAgcmVnaW9uOiByZWdpb25OYW1lLFxuICAgICAgICBjb21ibzogZGF0YS5jb21ibyxcbiAgICAgICAgc2VydmljZTogZGF0YS5zZXJ2aWNlLFxuICAgICAgICBvdGhlcjogZGF0YS5vdGhlcixcbiAgICAgICAgdG90YWw6IGRhdGEuY29tYm8gKyBkYXRhLnNlcnZpY2UgKyBkYXRhLm90aGVyLFxuICAgICAgfSkpXG4gICAgICAuc29ydCgoYSwgYikgPT4gYi50b3RhbCAtIGEudG90YWwpOyAvLyBT4bqvcCB44bq/cCB0aGVvIHThu5VuZyBnaeG6o20gZOG6p25cbiAgfSwgW3JlZ2lvbkRhdGFdKTtcblxuICAvLyBE4buvIGxp4buHdSBjaG8gYuG6o25nIGThu4tjaCB24bulXG4gIGNvbnN0IHNlcnZpY2VEYXRhOiBTZXJ2aWNlRGF0YUl0ZW1bXSA9IFJlYWN0LnVzZU1lbW8oKCkgPT4ge1xuICAgIGlmICghc2VydmljZVR5cGVEYXRhKSByZXR1cm4gW107XG5cbiAgICBjb25zdCBzZXJ2aWNlTWFwID0gbmV3IE1hcDxzdHJpbmcsIHsgY291bnQ6IG51bWJlcjsgdHlwZTogc3RyaW5nIH0+KCk7XG5cbiAgICBzZXJ2aWNlVHlwZURhdGEuZm9yRWFjaCgoaXRlbSkgPT4ge1xuICAgICAgY29uc3Qga2V5ID0gaXRlbS50eXBlO1xuICAgICAgaWYgKCFzZXJ2aWNlTWFwLmhhcyhrZXkpKSB7XG4gICAgICAgIHNlcnZpY2VNYXAuc2V0KGtleSwgeyBjb3VudDogMCwgdHlwZTogaXRlbS50eXBlIH0pO1xuICAgICAgfVxuICAgICAgc2VydmljZU1hcC5nZXQoa2V5KSEuY291bnQgKz0gaXRlbS5jb3VudDtcbiAgICB9KTtcblxuICAgIGNvbnN0IHRvdGFsQ291bnQgPSBBcnJheS5mcm9tKHNlcnZpY2VNYXAudmFsdWVzKCkpLnJlZHVjZShcbiAgICAgIChzdW0sIGl0ZW0pID0+IHN1bSArIGl0ZW0uY291bnQsXG4gICAgICAwXG4gICAgKTtcblxuICAgIHJldHVybiBBcnJheS5mcm9tKHNlcnZpY2VNYXAuZW50cmllcygpKS5tYXAoKFtrZXksIGl0ZW1dKSA9PiAoe1xuICAgICAgdGVuRGljaFZ1OiBrZXksXG4gICAgICBsb2FpRGljaFZ1OiBrZXksXG4gICAgICBzb0x1b25nOiBpdGVtLmNvdW50LFxuICAgICAgdG9uZ0dpYTogaXRlbS5jb3VudCAqIDEwMDAwMDAsIC8vIEdp4bqjIHPhu60gZ2nDoSB0cnVuZyBiw6xuaCAxIHRyaeG7h3VcbiAgICAgIHBlcmNlbnRTb0x1b25nOlxuICAgICAgICB0b3RhbENvdW50ID4gMCA/ICgoaXRlbS5jb3VudCAvIHRvdGFsQ291bnQpICogMTAwKS50b0ZpeGVkKDEpIDogXCIwLjBcIixcbiAgICAgIHBlcmNlbnRUb25nR2lhOlxuICAgICAgICB0b3RhbENvdW50ID4gMCA/ICgoaXRlbS5jb3VudCAvIHRvdGFsQ291bnQpICogMTAwKS50b0ZpeGVkKDEpIDogXCIwLjBcIixcbiAgICB9KSk7XG4gIH0sIFtzZXJ2aWNlVHlwZURhdGFdKTtcblxuICAvLyBM4bqleSBkYW5oIHPDoWNoIGPDoWMgY+G7rWEgaMOgbmdcbiAgY29uc3Qgc3RvcmVOYW1lcyA9IGxvY2F0aW9uT3B0aW9ucztcblxuICAvLyBC4buVIHN1bmcgZGF0YSBt4bqrdSBjaG8gY8OhYyB0csaw4budbmcgdHlwZSB2w6AgZ2VuZGVyIG7hur91IGNoxrBhIGPDs1xuICAvLyAoQ2jhu4kgdGjDqm0gdsOgbyBjdeG7kWkgbeG6o25nIGRhdGEsIGtow7RuZyDhuqNuaCBoxrDhu59uZyBsb2dpYyBjxakpXG4gIGlmICghZGF0YS5zb21lKChkKSA9PiBkLnR5cGUgPT09IFwiQWRkZWQgb25cIikpIHtcbiAgICBkYXRhLnB1c2goe1xuICAgICAgZGF0ZTogYCR7d2Vla1N0YXJ0LmRheX0gdGhnICR7d2Vla1N0YXJ0Lm1vbnRofWAsXG4gICAgICB2YWx1ZTogMTAwMDAwMCxcbiAgICAgIHZhbHVlMjogNTAwMDAwLFxuICAgICAgdHlwZTogXCJBZGRlZCBvblwiLFxuICAgICAgc3RhdHVzOiBcIk5ld1wiLFxuICAgICAgZ2VuZGVyOiBcIk5hbVwiLFxuICAgICAgcmVnaW9uOiBcIkhDTVwiLFxuICAgICAgYnJhbmNoOiBcIkNyZXNjZW50IE1hbGwgUTdcIixcbiAgICB9KTtcbiAgfVxuICBpZiAoIWRhdGEuc29tZSgoZCkgPT4gZC50eXBlID09PSBcIlF1w6AgdOG6t25nXCIpKSB7XG4gICAgZGF0YS5wdXNoKHtcbiAgICAgIGRhdGU6IGAke3dlZWtTdGFydC5kYXl9IHRoZyAke3dlZWtTdGFydC5tb250aH1gLFxuICAgICAgdmFsdWU6IDgwMDAwMCxcbiAgICAgIHZhbHVlMjogMzAwMDAwLFxuICAgICAgdHlwZTogXCJRdcOgIHThurduZ1wiLFxuICAgICAgc3RhdHVzOiBcIk5ld1wiLFxuICAgICAgZ2VuZGVyOiBcIiNOL0FcIixcbiAgICAgIHJlZ2lvbjogXCJIQ01cIixcbiAgICAgIGJyYW5jaDogXCJWaW5jb20gTGFuZG1hcmsgODFcIixcbiAgICB9KTtcbiAgfVxuICBpZiAoIWRhdGEuc29tZSgoZCkgPT4gZC5nZW5kZXIgPT09IFwiI04vQVwiKSkge1xuICAgIGRhdGEucHVzaCh7XG4gICAgICBkYXRlOiBgJHt3ZWVrU3RhcnQuZGF5fSB0aGcgJHt3ZWVrU3RhcnQubW9udGh9YCxcbiAgICAgIHZhbHVlOiAxMjAwMDAwLFxuICAgICAgdmFsdWUyOiA2MDAwMDAsXG4gICAgICB0eXBlOiBcIktIIHRy4bqjaSBuZ2hp4buHbVwiLFxuICAgICAgc3RhdHVzOiBcIk5ld1wiLFxuICAgICAgZ2VuZGVyOiBcIiNOL0FcIixcbiAgICAgIHJlZ2lvbjogXCJIQ01cIixcbiAgICAgIGJyYW5jaDogXCJWaXN0YSBWZXJkZVwiLFxuICAgIH0pO1xuICB9XG5cbiAgLy8gVMOtbmggc+G7kSBsxrDhu6NuZyB04burbmcgbG/huqFpIGThu4tjaCB24bulIHRoZW8gdOG7q25nIGPhu61hIGjDoG5nIHThu6sgQVBJIGRhdGFcbiAgY29uc3Qgc3RvcmVTZXJ2aWNlQ2hhcnREYXRhID0gc2hvcERhdGFcbiAgICA/ICgoKSA9PiB7XG4gICAgICAgIC8vIEdyb3VwIGRhdGEgYnkgc2hvcCBuYW1lXG4gICAgICAgIGNvbnN0IHNob3BHcm91cHMgPSBzaG9wRGF0YS5yZWR1Y2UoKGFjYywgaXRlbSkgPT4ge1xuICAgICAgICAgIGlmICghYWNjW2l0ZW0uc2hvcE5hbWVdKSB7XG4gICAgICAgICAgICBhY2NbaXRlbS5zaG9wTmFtZV0gPSB7fTtcbiAgICAgICAgICB9XG4gICAgICAgICAgYWNjW2l0ZW0uc2hvcE5hbWVdW2l0ZW0uc2VydmljZVR5cGVdID0gaXRlbS50b3RhbDtcbiAgICAgICAgICByZXR1cm4gYWNjO1xuICAgICAgICB9LCB7fSBhcyBSZWNvcmQ8c3RyaW5nLCBSZWNvcmQ8c3RyaW5nLCBudW1iZXI+Pik7XG5cbiAgICAgICAgLy8gQ29udmVydCB0byBjaGFydCBmb3JtYXRcbiAgICAgICAgcmV0dXJuIE9iamVjdC5lbnRyaWVzKHNob3BHcm91cHMpXG4gICAgICAgICAgLm1hcCgoW3Nob3BOYW1lLCBzZXJ2aWNlc10pID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGNvbWJvID0gc2VydmljZXNbXCJDb21ib1wiXSB8fCAwO1xuICAgICAgICAgICAgY29uc3Qgc2VydmljZSA9IHNlcnZpY2VzW1wiROG7i2NoIHbhu6VcIl0gfHwgMDtcbiAgICAgICAgICAgIGNvbnN0IG90aGVyID0gc2VydmljZXNbXCJLaMOhY1wiXSB8fCAwO1xuICAgICAgICAgICAgY29uc3QgdG90YWwgPSBjb21ibyArIHNlcnZpY2UgKyBvdGhlcjtcblxuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgc3RvcmU6IHNob3BOYW1lLFxuICAgICAgICAgICAgICBjb21ibyxcbiAgICAgICAgICAgICAgc2VydmljZSxcbiAgICAgICAgICAgICAgb3RoZXIsXG4gICAgICAgICAgICAgIHRvdGFsLCAvLyDEkeG7gyBzb3J0XG4gICAgICAgICAgICB9O1xuICAgICAgICAgIH0pXG4gICAgICAgICAgLnNvcnQoKGEsIGIpID0+IGIudG90YWwgLSBhLnRvdGFsKTtcbiAgICAgIH0pKClcbiAgICA6IHN0b3JlTmFtZXNcbiAgICAgICAgLm1hcCgoc3RvcmUpID0+IHtcbiAgICAgICAgICBjb25zdCBzdG9yZURhdGEgPSBkYXRhLmZpbHRlcihcbiAgICAgICAgICAgIChkKSA9PlxuICAgICAgICAgICAgICBkLmJyYW5jaCA9PT0gc3RvcmUgJiZcbiAgICAgICAgICAgICAgaXNJbldlZWsoZCwgd2Vla1N0YXJ0LCB3ZWVrRW5kKSAmJlxuICAgICAgICAgICAgICBzZWxlY3RlZFNlcnZpY2VUeXBlcy5pbmNsdWRlcyhkLnR5cGUpICYmXG4gICAgICAgICAgICAgIHNlbGVjdGVkR2VuZGVycy5pbmNsdWRlcyhkLmdlbmRlcilcbiAgICAgICAgICApO1xuICAgICAgICAgIGNvbnN0IGNvbWJvID0gc3RvcmVEYXRhLmZpbHRlcihcbiAgICAgICAgICAgIChkKSA9PiBkLnR5cGUgPT09IFwiS2jDoWNoIGjDoG5nIFRow6BuaCB2acOqblwiXG4gICAgICAgICAgKS5sZW5ndGg7XG4gICAgICAgICAgY29uc3Qgc2VydmljZSA9IHN0b3JlRGF0YS5maWx0ZXIoXG4gICAgICAgICAgICAoZCkgPT4gZC50eXBlID09PSBcIktIIHRy4bqjaSBuZ2hp4buHbVwiXG4gICAgICAgICAgKS5sZW5ndGg7XG4gICAgICAgICAgY29uc3QgYWRkZWRvbiA9IHN0b3JlRGF0YS5maWx0ZXIoKGQpID0+IGQudHlwZSA9PT0gXCJBZGRlZCBvblwiKS5sZW5ndGg7XG4gICAgICAgICAgY29uc3QgZ2lmdHMgPSBzdG9yZURhdGEuZmlsdGVyKChkKSA9PiBkLnR5cGUgPT09IFwiUXXDoCB04bq3bmdcIikubGVuZ3RoO1xuICAgICAgICAgIC8vIEZveCBjYXJkOiBnaeG6oyBs4bqtcCAyMS44JSB04buVbmcgc+G7kSDEkcahbiBj4bunYSBj4butYSBow6BuZ1xuICAgICAgICAgIGNvbnN0IHRvdGFsID0gY29tYm8gKyBzZXJ2aWNlICsgYWRkZWRvbiArIGdpZnRzO1xuICAgICAgICAgIGNvbnN0IGZveGNhcmQgPSBNYXRoLnJvdW5kKHRvdGFsICogMC4yMTgpO1xuICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBzdG9yZSxcbiAgICAgICAgICAgIGNvbWJvLFxuICAgICAgICAgICAgc2VydmljZSxcbiAgICAgICAgICAgIGFkZGVkb24sXG4gICAgICAgICAgICBnaWZ0cyxcbiAgICAgICAgICAgIGZveGNhcmQsXG4gICAgICAgICAgICB0b3RhbCwgLy8gxJHhu4Mgc29ydFxuICAgICAgICAgIH07XG4gICAgICAgIH0pXG4gICAgICAgIC5zb3J0KChhLCBiKSA9PiBiLnRvdGFsIC0gYS50b3RhbCk7XG5cbiAgLy8gVMOtbmggdOG7lW5nIGFjdHVhbCBwcmljZSBjaG8gdOG7q25nIGdp4bubaSB0w61uaCB0cm9uZyB0deG6p24gKHRoZW8gZmlsdGVyIGThu4tjaCB24bulIG7hur91IG114buRbilcbiAgY29uc3QgZ2VuZGVyQWN0dWFsUHJpY2UgPSBBTExfR0VOREVSUy5tYXAoKGdlbmRlcikgPT4ge1xuICAgIC8vIEzhu41jIHRoZW8gdHXhuqduLCB0aGVvIGZpbHRlciBk4buLY2ggduG7pSBu4bq/dSBtdeG7kW5cbiAgICBjb25zdCBmaWx0ZXJlZCA9IGRhdGEuZmlsdGVyKFxuICAgICAgKGQpID0+XG4gICAgICAgIGQuZ2VuZGVyID09PSBnZW5kZXIgJiZcbiAgICAgICAgaXNJbldlZWsoZCwgd2Vla1N0YXJ0LCB3ZWVrRW5kKSAmJlxuICAgICAgICBzZWxlY3RlZFNlcnZpY2VUeXBlcy5pbmNsdWRlcyhkLnR5cGUpXG4gICAgKTtcbiAgICBjb25zdCB0b3RhbCA9IGZpbHRlcmVkLnJlZHVjZSgoc3VtLCBkKSA9PiBzdW0gKyBkLnZhbHVlLCAwKTtcbiAgICByZXR1cm4geyBnZW5kZXIsIHRvdGFsIH07XG4gIH0pO1xuXG4gIC8vIEZpbHRlcmVkIGRhdGEgZm9yIHBpZSBjaGFydHMgYW5kIG90aGVyIGNvbXBvbmVudHNcbiAgY29uc3QgZmlsdGVyZWRQaWVEYXRhID0gZGF0YS5maWx0ZXIoXG4gICAgKGQpID0+XG4gICAgICBpc0luV2VlayhkLCB3ZWVrU3RhcnQsIHdlZWtFbmQpICYmXG4gICAgICAoc2VsZWN0ZWRSZWdpb25zLmxlbmd0aCA9PT0gMCB8fFxuICAgICAgICAhZC5yZWdpb24gfHxcbiAgICAgICAgc2VsZWN0ZWRSZWdpb25zLmluY2x1ZGVzKGQucmVnaW9uKSkgJiZcbiAgICAgIChzZWxlY3RlZEJyYW5jaGVzLmxlbmd0aCA9PT0gMCB8fFxuICAgICAgICAhZC5icmFuY2ggfHxcbiAgICAgICAgc2VsZWN0ZWRCcmFuY2hlcy5pbmNsdWRlcyhkLmJyYW5jaCkpICYmXG4gICAgICBzZWxlY3RlZFNlcnZpY2VUeXBlcy5pbmNsdWRlcyhkLnR5cGUpICYmXG4gICAgICBzZWxlY3RlZEdlbmRlcnMuaW5jbHVkZXMoZC5nZW5kZXIpXG4gICk7XG5cbiAgLy8gUGllIGNoYXJ0IGRhdGEgZm9yIHThu4kgbOG7hyBk4buLY2ggduG7pS9jb21iby9j4buZbmcgdGjDqm0gKGPDsyBmaWx0ZXIpXG4gIGNvbnN0IHBpZUNoYXJ0RGF0YSA9IFJlYWN0LnVzZU1lbW8oKCkgPT4ge1xuICAgIGlmIChzZXJ2aWNlU3VtbWFyeSkge1xuICAgICAgLy8gU+G7rSBk4bulbmcgZOG7ryBsaeG7h3UgQVBJIHNlcnZpY2VTdW1tYXJ5XG4gICAgICBjb25zdCBwaWVEYXRhID0gW1xuICAgICAgICB7XG4gICAgICAgICAga2V5OiBcImNvbWJvXCIsXG4gICAgICAgICAgbGFiZWw6IFwiQ29tYm9cIixcbiAgICAgICAgICB2YWx1ZTogc2VydmljZVN1bW1hcnkudG90YWxDb21ibyxcbiAgICAgICAgICBjb2xvcjogXCIjNzk1NTQ4XCIsXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBrZXk6IFwic2VydmljZVwiLFxuICAgICAgICAgIGxhYmVsOiBcIkThu4tjaCB24bulXCIsXG4gICAgICAgICAgdmFsdWU6IHNlcnZpY2VTdW1tYXJ5LnRvdGFsTGUsXG4gICAgICAgICAgY29sb3I6IFwiI2M1ZTFhNVwiLFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAga2V5OiBcImFkZGVkb25cIixcbiAgICAgICAgICBsYWJlbDogXCJBZGRlZCBvblwiLFxuICAgICAgICAgIHZhbHVlOiBzZXJ2aWNlU3VtbWFyeS50b3RhbENULFxuICAgICAgICAgIGNvbG9yOiBcIiNmMTZhM2ZcIixcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIGtleTogXCJnaWZ0c1wiLFxuICAgICAgICAgIGxhYmVsOiBcIkdpZnRzXCIsXG4gICAgICAgICAgdmFsdWU6IHNlcnZpY2VTdW1tYXJ5LnRvdGFsR2lmdCxcbiAgICAgICAgICBjb2xvcjogXCIjOGZkMWZjXCIsXG4gICAgICAgIH0sXG4gICAgICBdO1xuICAgICAgY29uc3QgdG90YWxQaWUgPSBwaWVEYXRhLnJlZHVjZSgoc3VtLCBkKSA9PiBzdW0gKyBkLnZhbHVlLCAwKTtcbiAgICAgIGNvbnN0IGZveENhcmRWYWx1ZSA9IE1hdGgucm91bmQodG90YWxQaWUgKiAwLjIxOCk7XG4gICAgICByZXR1cm4gW1xuICAgICAgICAuLi5waWVEYXRhLFxuICAgICAgICB7XG4gICAgICAgICAga2V5OiBcImZveGNhcmRcIixcbiAgICAgICAgICBsYWJlbDogXCJGb3ggY2FyZFwiLFxuICAgICAgICAgIHZhbHVlOiBmb3hDYXJkVmFsdWUsXG4gICAgICAgICAgY29sb3I6IFwiI2IyNmU3YVwiLFxuICAgICAgICB9LFxuICAgICAgXTtcbiAgICB9XG5cbiAgICAvLyBGYWxsYmFjayBkYXRhIG7hur91IEFQSSBjaMawYSBsb2FkXG4gICAgY29uc3QgcGllRGF0YSA9IFtcbiAgICAgIHtcbiAgICAgICAga2V5OiBcImNvbWJvXCIsXG4gICAgICAgIGxhYmVsOiBcIkNvbWJvXCIsXG4gICAgICAgIHZhbHVlOiBmaWx0ZXJlZFBpZURhdGEuZmlsdGVyKChkKSA9PiBkLnR5cGUgPT09IFwiS2jDoWNoIGjDoG5nIFRow6BuaCB2acOqblwiKVxuICAgICAgICAgIC5sZW5ndGgsXG4gICAgICAgIGNvbG9yOiBcIiM3OTU1NDhcIixcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGtleTogXCJzZXJ2aWNlXCIsXG4gICAgICAgIGxhYmVsOiBcIkThu4tjaCB24bulXCIsXG4gICAgICAgIHZhbHVlOiBmaWx0ZXJlZFBpZURhdGEuZmlsdGVyKChkKSA9PiBkLnR5cGUgPT09IFwiS0ggdHLhuqNpIG5naGnhu4dtXCIpXG4gICAgICAgICAgLmxlbmd0aCxcbiAgICAgICAgY29sb3I6IFwiI2M1ZTFhNVwiLFxuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAga2V5OiBcImFkZGVkb25cIixcbiAgICAgICAgbGFiZWw6IFwiQWRkZWQgb25cIixcbiAgICAgICAgdmFsdWU6IGZpbHRlcmVkUGllRGF0YS5maWx0ZXIoKGQpID0+IGQudHlwZSA9PT0gXCJBZGRlZCBvblwiKS5sZW5ndGgsXG4gICAgICAgIGNvbG9yOiBcIiNmMTZhM2ZcIixcbiAgICAgIH0sXG4gICAgICB7XG4gICAgICAgIGtleTogXCJnaWZ0c1wiLFxuICAgICAgICBsYWJlbDogXCJHaWZ0c1wiLFxuICAgICAgICB2YWx1ZTogZmlsdGVyZWRQaWVEYXRhLmZpbHRlcigoZCkgPT4gZC50eXBlID09PSBcIlF1w6AgdOG6t25nXCIpLmxlbmd0aCxcbiAgICAgICAgY29sb3I6IFwiIzhmZDFmY1wiLFxuICAgICAgfSxcbiAgICBdO1xuICAgIGNvbnN0IHRvdGFsUGllID0gcGllRGF0YS5yZWR1Y2UoKHN1bSwgZCkgPT4gc3VtICsgZC52YWx1ZSwgMCk7XG4gICAgY29uc3QgZm94Q2FyZFZhbHVlID0gTWF0aC5yb3VuZCh0b3RhbFBpZSAqIDAuMjE4KTtcbiAgICByZXR1cm4gW1xuICAgICAgLi4ucGllRGF0YSxcbiAgICAgIHtcbiAgICAgICAga2V5OiBcImZveGNhcmRcIixcbiAgICAgICAgbGFiZWw6IFwiRm94IGNhcmRcIixcbiAgICAgICAgdmFsdWU6IGZveENhcmRWYWx1ZSxcbiAgICAgICAgY29sb3I6IFwiI2IyNmU3YVwiLFxuICAgICAgfSxcbiAgICBdO1xuICB9LCBbc2VydmljZVN1bW1hcnksIGZpbHRlcmVkUGllRGF0YV0pO1xuXG4gIC8vIFBpZUNoYXJ0IHRvcCAxMCBk4buLY2ggduG7pSB0aGVvIHPhu5EgbMaw4bujbmcgKGPDsyBmaWx0ZXIpXG4gIGNvbnN0IHBpZVRvcDEwRGF0YSA9IFJlYWN0LnVzZU1lbW8oKCkgPT4ge1xuICAgIGlmICh0b3AxMFNlcnZpY2VzUmV2ZW51ZURhdGEpIHtcbiAgICAgIC8vIFPhu60gZOG7pW5nIGThu68gbGnhu4d1IEFQSVxuICAgICAgcmV0dXJuIHRvcDEwU2VydmljZXNSZXZlbnVlRGF0YS5tYXAoKHNlcnZpY2UsIGlkeCkgPT4gKHtcbiAgICAgICAgbmFtZTogc2VydmljZS5zZXJ2aWNlTmFtZSxcbiAgICAgICAgdmFsdWU6IHNlcnZpY2Uuc2VydmljZVByaWNlLFxuICAgICAgICBjb2xvcjogYGhzbCgwLDAlLCR7NDAgKyBpZHggKiA1fSUpYCwgLy8gZ3JhZGllbnQgeMOhbVxuICAgICAgfSkpO1xuICAgIH1cblxuICAgIC8vIEZhbGxiYWNrIGRhdGEgbuG6v3UgQVBJIGNoxrBhIGxvYWRcbiAgICBjb25zdCBmaWx0ZXJlZFNlcnZpY2VEYXRhID0gZGF0YS5maWx0ZXIoXG4gICAgICAoZCkgPT5cbiAgICAgICAgaXNJbldlZWsoZCwgd2Vla1N0YXJ0LCB3ZWVrRW5kKSAmJlxuICAgICAgICAoc2VsZWN0ZWRSZWdpb25zLmxlbmd0aCA9PT0gMCB8fFxuICAgICAgICAgICFkLnJlZ2lvbiB8fFxuICAgICAgICAgIHNlbGVjdGVkUmVnaW9ucy5pbmNsdWRlcyhkLnJlZ2lvbikpICYmXG4gICAgICAgIChzZWxlY3RlZEJyYW5jaGVzLmxlbmd0aCA9PT0gMCB8fFxuICAgICAgICAgICFkLmJyYW5jaCB8fFxuICAgICAgICAgIHNlbGVjdGVkQnJhbmNoZXMuaW5jbHVkZXMoZC5icmFuY2gpKSAmJlxuICAgICAgICBzZWxlY3RlZFNlcnZpY2VUeXBlcy5pbmNsdWRlcyhkLnR5cGUpICYmXG4gICAgICAgIHNlbGVjdGVkR2VuZGVycy5pbmNsdWRlcyhkLmdlbmRlcilcbiAgICApO1xuICAgIC8vIEzhuqV5IHTDqm4gZOG7i2NoIHbhu6UgKMawdSB0acOqbiBkLnNlcnZpY2VOYW1lLCBmYWxsYmFjayBkLnR5cGUpXG4gICAgY29uc3Qgc2VydmljZUNvdW50TWFwID0gbmV3IE1hcCgpO1xuICAgIGZpbHRlcmVkU2VydmljZURhdGEuZm9yRWFjaCgoZCkgPT4ge1xuICAgICAgY29uc3QgbmFtZSA9IGQuc2VydmljZU5hbWUgfHwgZC50eXBlO1xuICAgICAgc2VydmljZUNvdW50TWFwLnNldChuYW1lLCAoc2VydmljZUNvdW50TWFwLmdldChuYW1lKSB8fCAwKSArIDEpO1xuICAgIH0pO1xuICAgIGNvbnN0IHNvcnRlZFNlcnZpY2VzID0gQXJyYXkuZnJvbShzZXJ2aWNlQ291bnRNYXAuZW50cmllcygpKS5zb3J0KFxuICAgICAgKGEsIGIpID0+IGJbMV0gLSBhWzFdXG4gICAgKTtcbiAgICBjb25zdCB0b3AxMFNlcnZpY2VzID0gc29ydGVkU2VydmljZXMuc2xpY2UoMCwgMTApO1xuICAgIGNvbnN0IG90aGVyQ291bnQgPSBzb3J0ZWRTZXJ2aWNlc1xuICAgICAgLnNsaWNlKDEwKVxuICAgICAgLnJlZHVjZSgoc3VtLCBbLCBjb3VudF0pID0+IHN1bSArIGNvdW50LCAwKTtcbiAgICBjb25zdCByZXN1bHQgPSB0b3AxMFNlcnZpY2VzLm1hcCgoW25hbWUsIHZhbHVlXSwgaWR4KSA9PiAoe1xuICAgICAgbmFtZSxcbiAgICAgIHZhbHVlLFxuICAgICAgY29sb3I6IGBoc2woMCwwJSwkezQwICsgaWR4ICogNX0lKWAsIC8vIGdyYWRpZW50IHjDoW1cbiAgICB9KSk7XG4gICAgaWYgKG90aGVyQ291bnQgPiAwKSB7XG4gICAgICByZXN1bHQucHVzaCh7IG5hbWU6IFwiS2jDoWNcIiwgdmFsdWU6IG90aGVyQ291bnQsIGNvbG9yOiBcIiNlZGVkZWRcIiB9KTtcbiAgICB9XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfSwgW1xuICAgIHRvcDEwU2VydmljZXNSZXZlbnVlRGF0YSxcbiAgICBkYXRhLFxuICAgIHdlZWtTdGFydCxcbiAgICB3ZWVrRW5kLFxuICAgIGlzSW5XZWVrLFxuICAgIHNlbGVjdGVkUmVnaW9ucyxcbiAgICBzZWxlY3RlZEJyYW5jaGVzLFxuICAgIHNlbGVjdGVkU2VydmljZVR5cGVzLFxuICAgIHNlbGVjdGVkR2VuZGVycyxcbiAgXSk7XG5cbiAgLy8gUGllQ2hhcnQgdG9wIDEwIGThu4tjaCB24bulIHRoZW8gZ2nDoSBideG7lWkgKGPDsyBmaWx0ZXIpXG4gIGNvbnN0IHBpZVRvcDEwQXZnRGF0YSA9IFJlYWN0LnVzZU1lbW8oKCkgPT4ge1xuICAgIGlmICh0b3AxMFNlcnZpY2VzVXNhZ2VEYXRhKSB7XG4gICAgICAvLyBT4butIGThu6VuZyBk4buvIGxp4buHdSBBUElcbiAgICAgIHJldHVybiB0b3AxMFNlcnZpY2VzVXNhZ2VEYXRhLm1hcCgoc2VydmljZSwgaWR4KSA9PiAoe1xuICAgICAgICBuYW1lOiBzZXJ2aWNlLnNlcnZpY2VOYW1lLFxuICAgICAgICB2YWx1ZTogc2VydmljZS5jb3VudCxcbiAgICAgICAgY29sb3I6IGBoc2woMzAsIDEwMCUsICR7NDUgKyBpZHggKiA1fSUpYCwgLy8gZ3JhZGllbnQgY2FtXG4gICAgICB9KSk7XG4gICAgfVxuXG4gICAgLy8gRmFsbGJhY2sgZGF0YSBu4bq/dSBBUEkgY2jGsGEgbG9hZFxuICAgIGNvbnN0IHNlcnZpY2VWYWx1ZU1hcCA9IG5ldyBNYXAoKTtcbiAgICBmaWx0ZXJlZFBpZURhdGEuZm9yRWFjaCgoZCkgPT4ge1xuICAgICAgY29uc3QgbmFtZSA9IGQuc2VydmljZU5hbWUgfHwgZC50eXBlO1xuICAgICAgaWYgKCFzZXJ2aWNlVmFsdWVNYXAuaGFzKG5hbWUpKSB7XG4gICAgICAgIHNlcnZpY2VWYWx1ZU1hcC5zZXQobmFtZSwgeyB0b3RhbFZhbHVlOiAwLCBjb3VudDogMCB9KTtcbiAgICAgIH1cbiAgICAgIGNvbnN0IG9iaiA9IHNlcnZpY2VWYWx1ZU1hcC5nZXQobmFtZSk7XG4gICAgICBvYmoudG90YWxWYWx1ZSArPSBkLnZhbHVlO1xuICAgICAgb2JqLmNvdW50ICs9IDE7XG4gICAgfSk7XG4gICAgY29uc3Qgc2VydmljZUF2Z0FyciA9IEFycmF5LmZyb20oc2VydmljZVZhbHVlTWFwLmVudHJpZXMoKSkubWFwKFxuICAgICAgKFtuYW1lLCB7IHRvdGFsVmFsdWUsIGNvdW50IH1dKSA9PiAoe1xuICAgICAgICBuYW1lLFxuICAgICAgICBhdmc6IGNvdW50ID4gMCA/IHRvdGFsVmFsdWUgLyBjb3VudCA6IDAsXG4gICAgICAgIGNvdW50LFxuICAgICAgfSlcbiAgICApO1xuICAgIGNvbnN0IHNvcnRlZEF2ZyA9IHNlcnZpY2VBdmdBcnIuc29ydCgoYSwgYikgPT4gYi5hdmcgLSBhLmF2Zyk7XG4gICAgY29uc3QgdG9wMTBBdmcgPSBzb3J0ZWRBdmcuc2xpY2UoMCwgMTApO1xuICAgIGNvbnN0IG90aGVyQXZnU3VtID0gc29ydGVkQXZnLnNsaWNlKDEwKS5yZWR1Y2UoKHN1bSwgcykgPT4gc3VtICsgcy5hdmcsIDApO1xuICAgIGNvbnN0IHJlc3VsdCA9IHRvcDEwQXZnLm1hcCgocywgaWR4KSA9PiAoe1xuICAgICAgbmFtZTogcy5uYW1lLFxuICAgICAgdmFsdWU6IHMuYXZnLFxuICAgICAgY29sb3I6IGBoc2woMzAsIDEwMCUsICR7NDUgKyBpZHggKiA1fSUpYCwgLy8gZ3JhZGllbnQgY2FtXG4gICAgfSkpO1xuICAgIGlmIChzb3J0ZWRBdmcubGVuZ3RoID4gMTApIHtcbiAgICAgIHJlc3VsdC5wdXNoKHtcbiAgICAgICAgbmFtZTogXCJLaMOhY1wiLFxuICAgICAgICB2YWx1ZTogb3RoZXJBdmdTdW0sXG4gICAgICAgIGNvbG9yOiBcIiNmZmUwYjJcIixcbiAgICAgIH0pO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xuICB9LCBbdG9wMTBTZXJ2aWNlc1VzYWdlRGF0YSwgZmlsdGVyZWRQaWVEYXRhXSk7XG5cbiAgY29uc3QgcmVuZGVyUGllTGFiZWwgPSAoe1xuICAgIHBlcmNlbnQsXG4gICAgeCxcbiAgICB5LFxuICAgIGluZGV4LFxuICB9OiB7XG4gICAgcGVyY2VudD86IG51bWJlcjtcbiAgICB4PzogbnVtYmVyO1xuICAgIHk/OiBudW1iZXI7XG4gICAgaW5kZXg/OiBudW1iZXI7XG4gIH0pID0+IHtcbiAgICBpZiAoaXNNb2JpbGUgJiYgcGVyY2VudCAhPT0gdW5kZWZpbmVkICYmIHBlcmNlbnQgPCAwLjE1KSByZXR1cm4gbnVsbDtcbiAgICBpZiAocGVyY2VudCAhPT0gdW5kZWZpbmVkICYmIHBlcmNlbnQgPCAwLjA1KSByZXR1cm4gbnVsbDtcbiAgICByZXR1cm4gKFxuICAgICAgPHRleHRcbiAgICAgICAgeD17eH1cbiAgICAgICAgeT17eX1cbiAgICAgICAgZmlsbD17cGllVG9wMTBEYXRhW2luZGV4ID8/IDBdPy5jb2xvciB8fCBcIiMzMzNcIn1cbiAgICAgICAgZm9udFNpemU9e2lzTW9iaWxlID8gMTAgOiAxNH1cbiAgICAgICAgZm9udFdlaWdodD1cImJvbGRcIlxuICAgICAgICB0ZXh0QW5jaG9yPVwibWlkZGxlXCJcbiAgICAgICAgZG9taW5hbnRCYXNlbGluZT1cImNlbnRyYWxcIlxuICAgICAgPlxuICAgICAgICB7KHBlcmNlbnQhICogMTAwKS50b0ZpeGVkKDEpfSVcbiAgICAgIDwvdGV4dD5cbiAgICApO1xuICB9O1xuXG4gIGNvbnN0IGJvdHRvbTNEYXRhID0gUmVhY3QudXNlTWVtbygoKSA9PiB7XG4gICAgaWYgKGJvdHRvbTNTZXJ2aWNlc1VzYWdlRGF0YSkge1xuICAgICAgLy8gU+G7rSBk4bulbmcgZOG7ryBsaeG7h3UgQVBJXG4gICAgICBjb25zdCBncmF5U2hhZGVzID0gW1wiI2JkYmRiZFwiLCBcIiM5ZTllOWVcIiwgXCIjZTBlMGUwXCJdO1xuICAgICAgcmV0dXJuIGJvdHRvbTNTZXJ2aWNlc1VzYWdlRGF0YS5tYXAoKHNlcnZpY2UsIGlkeCkgPT4gKHtcbiAgICAgICAgbmFtZTogc2VydmljZS5zZXJ2aWNlTmFtZSxcbiAgICAgICAgdmFsdWU6IHNlcnZpY2UuY291bnQsXG4gICAgICAgIGNvbG9yOiBncmF5U2hhZGVzW2lkeCAlIGdyYXlTaGFkZXMubGVuZ3RoXSxcbiAgICAgIH0pKTtcbiAgICB9XG5cbiAgICAvLyBGYWxsYmFjayBkYXRhIG7hur91IEFQSSBjaMawYSBsb2FkXG4gICAgY29uc3Qgc2VydmljZUNvdW50TWFwID0gbmV3IE1hcCgpO1xuICAgIGZpbHRlcmVkUGllRGF0YS5mb3JFYWNoKChkKSA9PiB7XG4gICAgICBjb25zdCBuYW1lID0gZC5zZXJ2aWNlTmFtZSB8fCBkLnR5cGU7XG4gICAgICBzZXJ2aWNlQ291bnRNYXAuc2V0KG5hbWUsIChzZXJ2aWNlQ291bnRNYXAuZ2V0KG5hbWUpIHx8IDApICsgMSk7XG4gICAgfSk7XG4gICAgY29uc3Qgc29ydGVkID0gQXJyYXkuZnJvbShzZXJ2aWNlQ291bnRNYXAuZW50cmllcygpKS5zb3J0KFxuICAgICAgKGEsIGIpID0+IGFbMV0gLSBiWzFdXG4gICAgKTtcbiAgICBjb25zdCBib3R0b20zID0gc29ydGVkLnNsaWNlKDAsIDMpO1xuICAgIGNvbnN0IGdyYXlTaGFkZXMgPSBbXCIjYmRiZGJkXCIsIFwiIzllOWU5ZVwiLCBcIiNlMGUwZTBcIl07XG4gICAgcmV0dXJuIGJvdHRvbTMubWFwKChbbmFtZSwgdmFsdWVdLCBpZHgpID0+ICh7XG4gICAgICBuYW1lLFxuICAgICAgdmFsdWUsXG4gICAgICBjb2xvcjogZ3JheVNoYWRlc1tpZHggJSBncmF5U2hhZGVzLmxlbmd0aF0sXG4gICAgfSkpO1xuICB9LCBbYm90dG9tM1NlcnZpY2VzVXNhZ2VEYXRhLCBmaWx0ZXJlZFBpZURhdGFdKTtcblxuICAvLyBEYXRhIGNobyBib3R0b20gMyBk4buLY2ggduG7pSB0aGVvIGdpw6EgYnXhu5VpXG4gIGNvbnN0IGJvdHRvbTNSZXZlbnVlRGF0YSA9IFJlYWN0LnVzZU1lbW8oKCkgPT4ge1xuICAgIGlmIChib3R0b20zU2VydmljZXNSZXZlbnVlRGF0YSkge1xuICAgICAgLy8gU+G7rSBk4bulbmcgZOG7ryBsaeG7h3UgQVBJXG4gICAgICBjb25zdCBncmF5U2hhZGVzID0gW1wiI2JkYmRiZFwiLCBcIiM5ZTllOWVcIiwgXCIjZTBlMGUwXCJdO1xuICAgICAgcmV0dXJuIGJvdHRvbTNTZXJ2aWNlc1JldmVudWVEYXRhLm1hcCgoc2VydmljZSwgaWR4KSA9PiAoe1xuICAgICAgICBuYW1lOiBzZXJ2aWNlLnNlcnZpY2VOYW1lLFxuICAgICAgICB2YWx1ZTogc2VydmljZS5zZXJ2aWNlUHJpY2UsXG4gICAgICAgIGNvbG9yOiBncmF5U2hhZGVzW2lkeCAlIGdyYXlTaGFkZXMubGVuZ3RoXSxcbiAgICAgIH0pKTtcbiAgICB9XG5cbiAgICAvLyBGYWxsYmFjayBkYXRhIG7hur91IEFQSSBjaMawYSBsb2FkXG4gICAgY29uc3Qgc2VydmljZVZhbHVlTWFwID0gbmV3IE1hcCgpO1xuICAgIGZpbHRlcmVkUGllRGF0YS5mb3JFYWNoKChkKSA9PiB7XG4gICAgICBjb25zdCBuYW1lID0gZC5zZXJ2aWNlTmFtZSB8fCBkLnR5cGU7XG4gICAgICBpZiAoIXNlcnZpY2VWYWx1ZU1hcC5oYXMobmFtZSkpIHtcbiAgICAgICAgc2VydmljZVZhbHVlTWFwLnNldChuYW1lLCB7XG4gICAgICAgICAgdG90YWxWYWx1ZTogMCxcbiAgICAgICAgICBjb3VudDogMCxcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgICBjb25zdCBvYmogPSBzZXJ2aWNlVmFsdWVNYXAuZ2V0KG5hbWUpO1xuICAgICAgb2JqLnRvdGFsVmFsdWUgKz0gZC52YWx1ZTtcbiAgICAgIG9iai5jb3VudCArPSAxO1xuICAgIH0pO1xuICAgIGNvbnN0IHNlcnZpY2VBdmdBcnIgPSBBcnJheS5mcm9tKHNlcnZpY2VWYWx1ZU1hcC5lbnRyaWVzKCkpLm1hcChcbiAgICAgIChbbmFtZSwgeyB0b3RhbFZhbHVlLCBjb3VudCB9XSkgPT4gKHtcbiAgICAgICAgbmFtZSxcbiAgICAgICAgYXZnOiBjb3VudCA+IDAgPyB0b3RhbFZhbHVlIC8gY291bnQgOiAwLFxuICAgICAgICBjb3VudCxcbiAgICAgIH0pXG4gICAgKTtcbiAgICBjb25zdCBzb3J0ZWRBdmcgPSBzZXJ2aWNlQXZnQXJyLnNvcnQoKGEsIGIpID0+IGEuYXZnIC0gYi5hdmcpO1xuICAgIGNvbnN0IGJvdHRvbTMgPSBzb3J0ZWRBdmcuc2xpY2UoMCwgMyk7XG4gICAgY29uc3QgZ3JheVNoYWRlcyA9IFtcIiNiZGJkYmRcIiwgXCIjOWU5ZTllXCIsIFwiI2UwZTBlMFwiXTtcbiAgICByZXR1cm4gYm90dG9tMy5tYXAoKHMsIGlkeCkgPT4gKHtcbiAgICAgIG5hbWU6IHMubmFtZSxcbiAgICAgIHZhbHVlOiBzLmF2ZyxcbiAgICAgIGNvbG9yOiBncmF5U2hhZGVzW2lkeCAlIGdyYXlTaGFkZXMubGVuZ3RoXSxcbiAgICB9KSk7XG4gIH0sIFtib3R0b20zU2VydmljZXNSZXZlbnVlRGF0YSwgZmlsdGVyZWRQaWVEYXRhXSk7XG5cbiAgcmV0dXJuIChcbiAgICA8ZGl2IGNsYXNzTmFtZT1cInAtMiBzbTpwLTQgbWQ6cC02XCI+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cIm1iLTZcIj5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCIgcC0yXCI+XG4gICAgICAgICAgPGgxIGNsYXNzTmFtZT1cInRleHQtMnhsIGZvbnQtc2VtaWJvbGQgdGV4dC1ncmF5LTkwMCBtYi0yXCI+XG4gICAgICAgICAgICBTZXJ2aWNlcyBSZXBvcnRcbiAgICAgICAgICA8L2gxPlxuICAgICAgICAgIDxTZXJ2aWNlc0ZpbHRlclxuICAgICAgICAgICAgc3RhcnREYXRlPXtzdGFydERhdGV9XG4gICAgICAgICAgICBlbmREYXRlPXtlbmREYXRlfVxuICAgICAgICAgICAgc2V0U3RhcnREYXRlPXtzZXRTdGFydERhdGV9XG4gICAgICAgICAgICBzZXRFbmREYXRlPXtzZXRFbmREYXRlfVxuICAgICAgICAgICAgc2VsZWN0ZWRSZWdpb25zPXtzZWxlY3RlZFJlZ2lvbnN9XG4gICAgICAgICAgICBzZXRTZWxlY3RlZFJlZ2lvbnM9e3NldFNlbGVjdGVkUmVnaW9uc31cbiAgICAgICAgICAgIHNlbGVjdGVkQnJhbmNoZXM9e3NlbGVjdGVkQnJhbmNoZXN9XG4gICAgICAgICAgICBzZXRTZWxlY3RlZEJyYW5jaGVzPXtzZXRTZWxlY3RlZEJyYW5jaGVzfVxuICAgICAgICAgICAgc2VsZWN0ZWRTZXJ2aWNlVHlwZXM9e3NlbGVjdGVkU2VydmljZVR5cGVzfVxuICAgICAgICAgICAgc2V0U2VsZWN0ZWRTZXJ2aWNlVHlwZXM9e3NldFNlbGVjdGVkU2VydmljZVR5cGVzfVxuICAgICAgICAgICAgc2VsZWN0ZWRHZW5kZXJzPXtzZWxlY3RlZEdlbmRlcnN9XG4gICAgICAgICAgICBzZXRTZWxlY3RlZEdlbmRlcnM9e3NldFNlbGVjdGVkR2VuZGVyc31cbiAgICAgICAgICAgIHJlZ2lvbk9wdGlvbnM9e3JlZ2lvbk9wdGlvbnN9XG4gICAgICAgICAgICBsb2NhdGlvbk9wdGlvbnM9e2xvY2F0aW9uT3B0aW9uc31cbiAgICAgICAgICAgIGZpbHRlcmVkUmVnaW9uT3B0aW9ucz17ZmlsdGVyZWRSZWdpb25PcHRpb25zfVxuICAgICAgICAgICAgQUxMX1NFUlZJQ0VfVFlQRVM9e0FMTF9TRVJWSUNFX1RZUEVTfVxuICAgICAgICAgICAgQUxMX0dFTkRFUlM9e0FMTF9HRU5ERVJTfVxuICAgICAgICAgICAgZmlsdGVyZWRTZXJ2aWNlVHlwZXM9e2ZpbHRlcmVkU2VydmljZVR5cGVzfVxuICAgICAgICAgICAgZmlsdGVyZWRHZW5kZXJzPXtmaWx0ZXJlZEdlbmRlcnN9XG4gICAgICAgICAgICBnZW5kZXJBY3R1YWxQcmljZT17Z2VuZGVyQWN0dWFsUHJpY2V9XG4gICAgICAgICAgICBmb3JtYXRNb25leVNob3J0PXtmb3JtYXRNb25leVNob3J0fVxuICAgICAgICAgIC8+XG4gICAgICAgIDwvZGl2PlxuXG4gICAgICAgIHsvKiBU4buVbmcgZOG7i2NoIHbhu6UgdGjhu7FjIGhp4buHbiB0cm9uZyB0deG6p24gKi99XG4gICAgICAgIDxXZWVrbHlTZXJ2aWNlQ2hhcnREYXRhXG4gICAgICAgICAgd2Vla2x5U2VydmljZUNoYXJ0RGF0YT17d2Vla2x5U2VydmljZUNoYXJ0RGF0YX1cbiAgICAgICAgICBpc01vYmlsZT17aXNNb2JpbGV9XG4gICAgICAgIC8+XG4gICAgICAgIDxQaWVDaGFydERhdGFcbiAgICAgICAgICBwaWVDaGFydERhdGE9e3BpZUNoYXJ0RGF0YX1cbiAgICAgICAgICBwaWVUb3AxMERhdGE9e3BpZVRvcDEwRGF0YX1cbiAgICAgICAgICBwaWVUb3AxMEF2Z0RhdGE9e3BpZVRvcDEwQXZnRGF0YX1cbiAgICAgICAgICB0b3AxMFNlcnZpY2VzTG9hZGluZz17dG9wMTBTZXJ2aWNlc0xvYWRpbmd9XG4gICAgICAgICAgdG9wMTBTZXJ2aWNlc0Vycm9yPXt0b3AxMFNlcnZpY2VzRXJyb3J9XG4gICAgICAgICAgdG9wMTBTZXJ2aWNlc1VzYWdlTG9hZGluZz17dG9wMTBTZXJ2aWNlc1VzYWdlTG9hZGluZ31cbiAgICAgICAgICB0b3AxMFNlcnZpY2VzVXNhZ2VFcnJvcj17dG9wMTBTZXJ2aWNlc1VzYWdlRXJyb3J9XG4gICAgICAgICAgaXNNb2JpbGU9e2lzTW9iaWxlfVxuICAgICAgICAgIHJlbmRlclBpZUxhYmVsPXtyZW5kZXJQaWVMYWJlbH1cbiAgICAgICAgLz5cblxuICAgICAgIDxTZXJ2aWNlQm90dG9tUGllRGF0YVxuICAgICAgICAgYm90dG9tM1NlcnZpY2VzVXNhZ2VEYXRhPXtib3R0b20zU2VydmljZXNVc2FnZURhdGF9XG4gICAgICAgICBib3R0b20zU2VydmljZXNVc2FnZUxvYWRpbmc9e2JvdHRvbTNTZXJ2aWNlc1VzYWdlTG9hZGluZ31cbiAgICAgICAgIGJvdHRvbTNTZXJ2aWNlc1VzYWdlRXJyb3I9e2JvdHRvbTNTZXJ2aWNlc1VzYWdlRXJyb3J9XG4gICAgICAgICBib3R0b20zU2VydmljZXNSZXZlbnVlTG9hZGluZz17Ym90dG9tM1NlcnZpY2VzUmV2ZW51ZUxvYWRpbmd9XG4gICAgICAgICBib3R0b20zU2VydmljZXNSZXZlbnVlRXJyb3I9e2JvdHRvbTNTZXJ2aWNlc1JldmVudWVFcnJvcn1cbiAgICAgICAgIGJvdHRvbTNEYXRhPXtib3R0b20zRGF0YX1cbiAgICAgICAgIGJvdHRvbTNSZXZlbnVlRGF0YT17Ym90dG9tM1JldmVudWVEYXRhfVxuICAgICAgICAgZmlsdGVyZWRQaWVEYXRhPXtmaWx0ZXJlZFBpZURhdGF9XG4gICAgICAgICBpc01vYmlsZT17aXNNb2JpbGV9XG4gICAgICAgLz5cblxuICAgICAgICB7LyogNSBi4bqjbmcgdOG7lW5nIGThu4tjaCB24bulICovfVxuXG4gICAgICAgIDxTZXJ2aWNlU3RhdENhcmRzXG4gICAgICAgICAgc2VydmljZVN1bW1hcnk9e3NlcnZpY2VTdW1tYXJ5fVxuICAgICAgICAgIHNlcnZpY2VTdW1tYXJ5TG9hZGluZz17c2VydmljZVN1bW1hcnlMb2FkaW5nfVxuICAgICAgICAgIHNlcnZpY2VTdW1tYXJ5RXJyb3I9e3NlcnZpY2VTdW1tYXJ5RXJyb3J9XG4gICAgICAgIC8+XG5cbiAgICAgICAgey8qIFThu5VuZyBk4buLY2ggduG7pSB0aOG7sWMgaGnhu4duIHRoZW8gY+G7rWEgaMOgbmcqL31cbiAgICAgICAgPFNlcnZpY2VTdG9yZUNoYXJ0RGF0YVxuICAgICAgICAgIHNob3BMb2FkaW5nPXtzaG9wTG9hZGluZ31cbiAgICAgICAgICBzaG9wRXJyb3I9e3Nob3BFcnJvcn1cbiAgICAgICAgICBpc01vYmlsZT17aXNNb2JpbGV9XG4gICAgICAgICAgc3RvcmVTZXJ2aWNlQ2hhcnREYXRhPXtzdG9yZVNlcnZpY2VDaGFydERhdGF9XG4gICAgICAgIC8+XG5cbiAgICAgICAgey8qIFThu5VuZyBk4buLY2ggduG7pSB0aOG7sWMgaGnhu4duIHRoZW8ga2h1IHbhu7FjICovfVxuICAgICAgICA8U2VydmljZXNSZWdpb25EYXRhXG4gICAgICAgICAgcmVnaW9uTG9hZGluZz17cmVnaW9uTG9hZGluZ31cbiAgICAgICAgICByZWdpb25FcnJvcj17cmVnaW9uRXJyb3J9XG4gICAgICAgICAgaXNNb2JpbGU9e2lzTW9iaWxlfVxuICAgICAgICAgIHJlZ2lvbkNoYXJ0RGF0YT17cmVnaW9uQ2hhcnREYXRhfVxuICAgICAgICAvPlxuXG4gICAgICAgIHsvKiBC4bqjbmcgdGjhu5FuZyBrw6ogdOG6pXQgY+G6oyBjw6FjIGThu4tjaCB24bulICovfVxuICAgICAgIDxTZXJ2aWNlc1RhYmxlXG4gICAgICAgICBzZXJ2aWNlVGFibGVEYXRhPXtzZXJ2aWNlVGFibGVEYXRhfVxuICAgICAgICAgc2VydmljZVRhYmxlTG9hZGluZz17c2VydmljZVRhYmxlTG9hZGluZ31cbiAgICAgICAgIHNlcnZpY2VUYWJsZUVycm9yPXtzZXJ2aWNlVGFibGVFcnJvcn1cbiAgICAgICAgIHNlcnZpY2VEYXRhPXtzZXJ2aWNlRGF0YX1cbiAgICAgICAvPlxuICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG4gICk7XG59Il0sIm5hbWVzIjpbIlJlYWN0IiwidXNlU3RhdGUiLCJ1c2VFZmZlY3QiLCJ1c2VSZWYiLCJ0b2RheSIsImdldExvY2FsVGltZVpvbmUiLCJwYXJzZURhdGUiLCJTZXJ2aWNlc0ZpbHRlciIsIldlZWtseVNlcnZpY2VDaGFydERhdGEiLCJQaWVDaGFydERhdGEiLCJTZXJ2aWNlQm90dG9tUGllRGF0YSIsIlNlcnZpY2VTdGF0Q2FyZHMiLCJTZXJ2aWNlU3RvcmVDaGFydERhdGEiLCJTZXJ2aWNlc1JlZ2lvbkRhdGEiLCJTZXJ2aWNlc1RhYmxlIiwiQVBJX0JBU0VfVVJMIiwicHJvY2VzcyIsImVudiIsIk5FWFRfUFVCTElDX0FQSV9CQVNFX1VSTCIsInVzZUFwaURhdGEiLCJ1cmwiLCJmcm9tRGF0ZSIsInRvRGF0ZSIsImRhdGEiLCJzZXREYXRhIiwibG9hZGluZyIsInNldExvYWRpbmciLCJlcnJvciIsInNldEVycm9yIiwiZmV0Y2giLCJtZXRob2QiLCJoZWFkZXJzIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJ0aGVuIiwicmVzIiwib2siLCJzdGF0dXMiLCJFcnJvciIsImpzb24iLCJjYXRjaCIsImVyciIsIm1lc3NhZ2UiLCJpbmNsdWRlcyIsIkN1c3RvbWVyUmVwb3J0UGFnZSIsImdldEluaXRpYWxEYXRlIiwia2V5IiwiZGVmYXVsdFZhbHVlIiwic2F2ZWQiLCJsb2NhbFN0b3JhZ2UiLCJnZXRJdGVtIiwicGFyc2VkIiwicGFyc2UiLCJkYXRlU3RyaW5nIiwiU3RyaW5nIiwieWVhciIsIm1vbnRoIiwicGFkU3RhcnQiLCJkYXkiLCJlIiwiY29uc29sZSIsIndhcm4iLCJnZXRJbml0aWFsQXJyYXkiLCJzdGFydERhdGUiLCJzZXRTdGFydERhdGUiLCJzdWJ0cmFjdCIsImRheXMiLCJlbmREYXRlIiwic2V0RW5kRGF0ZSIsInNlbGVjdGVkQnJhbmNoZXMiLCJzZXRTZWxlY3RlZEJyYW5jaGVzIiwic2VsZWN0ZWRSZWdpb25zIiwic2V0U2VsZWN0ZWRSZWdpb25zIiwic2VsZWN0ZWRTZXJ2aWNlVHlwZXMiLCJzZXRTZWxlY3RlZFNlcnZpY2VUeXBlcyIsInNlbGVjdGVkR2VuZGVycyIsInNldFNlbGVjdGVkR2VuZGVycyIsImRhdGVEYXRhIiwic2V0SXRlbSIsImxvZyIsInNlcnZpY2VUeXBlRGF0YSIsInNlcnZpY2VTdW1tYXJ5Iiwic2VydmljZVN1bW1hcnlMb2FkaW5nIiwic2VydmljZVN1bW1hcnlFcnJvciIsInJlZ2lvbkRhdGEiLCJyZWdpb25Mb2FkaW5nIiwicmVnaW9uRXJyb3IiLCJzaG9wRGF0YSIsInNob3BMb2FkaW5nIiwic2hvcEVycm9yIiwidG9wMTBTZXJ2aWNlc1JldmVudWVEYXRhIiwidG9wMTBTZXJ2aWNlc0xvYWRpbmciLCJ0b3AxMFNlcnZpY2VzRXJyb3IiLCJ0b3AxMFNlcnZpY2VzVXNhZ2VEYXRhIiwidG9wMTBTZXJ2aWNlc1VzYWdlTG9hZGluZyIsInRvcDEwU2VydmljZXNVc2FnZUVycm9yIiwiYm90dG9tM1NlcnZpY2VzVXNhZ2VEYXRhIiwiYm90dG9tM1NlcnZpY2VzVXNhZ2VMb2FkaW5nIiwiYm90dG9tM1NlcnZpY2VzVXNhZ2VFcnJvciIsImJvdHRvbTNTZXJ2aWNlc1JldmVudWVEYXRhIiwiYm90dG9tM1NlcnZpY2VzUmV2ZW51ZUxvYWRpbmciLCJib3R0b20zU2VydmljZXNSZXZlbnVlRXJyb3IiLCJzZXJ2aWNlVGFibGVEYXRhIiwic2VydmljZVRhYmxlTG9hZGluZyIsInNlcnZpY2VUYWJsZUVycm9yIiwidXNlV2luZG93V2lkdGgiLCJ3aWR0aCIsInNldFdpZHRoIiwidGltZW91dElkIiwiaGFuZGxlUmVzaXplIiwiY2xlYXJUaW1lb3V0Iiwic2V0VGltZW91dCIsIndpbmRvdyIsImlubmVyV2lkdGgiLCJhZGRFdmVudExpc3RlbmVyIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsIndpbmRvd1dpZHRoIiwiaXNNb2JpbGUiLCJBTExfU0VSVklDRV9UWVBFUyIsImxhYmVsIiwiQUxMX0dFTkRFUlMiLCJyZWdpb25TZWFyY2giLCJsb2NhdGlvbk9wdGlvbnMiLCJ1c2VNZW1vIiwibG9jYXRpb25SZWdpb25NYXAiLCJBcnJheSIsImZyb20iLCJsZW5ndGgiLCJfIiwiaSIsImRhdGVTdHIiLCJhbGxMb2NhdGlvbnMiLCJkYXRlIiwidmFsdWUiLCJ2YWx1ZTIiLCJ0eXBlIiwiZ2VuZGVyIiwicmVnaW9uIiwiYnJhbmNoIiwiZmxhdCIsIlRvdGFsUmVnaW9uYWxTYWxlcyIsIkhDTSIsIkhhTm9pIiwiRGFOYW5nIiwiTmhhVHJhbmciLCJEYURvbmdDdWEiLCJmb3JtYXRNb25leVNob3J0IiwidmFsIiwidG9GaXhlZCIsInRvTG9jYWxlU3RyaW5nIiwiUkVHSU9OUyIsImlzSW5XZWVrIiwidXNlQ2FsbGJhY2siLCJkIiwic3RhcnQiLCJlbmQiLCJkRGF0ZSIsInBhcnNlVk5EYXRlIiwiY29tcGFyZSIsIndlZWtTdGFydCIsIndlZWtFbmQiLCJwcmV2V2Vla1N0YXJ0IiwicHJldldlZWtFbmQiLCJ3ZWVrUmV2ZW51ZURhdGEiLCJmaWx0ZXJEYXRhIiwicHJldldlZWtSZXZlbnVlRGF0YSIsImdldFJlZ2lvbktleSIsInJlZ2lvblN0YXRzIiwibWFwIiwib3JkZXJzVGhpc1dlZWsiLCJmaWx0ZXIiLCJvcmRlcnNMYXN0V2VlayIsImRlbHRhT3JkZXJzIiwicmVnaW9uS2V5IiwicmV2ZW51ZVRoaXNXZWVrIiwicmVkdWNlIiwic3VtIiwiaXRlbSIsIk51bWJlciIsInJldmVudWVMYXN0V2VlayIsInBlcmNlbnREZWx0YSIsInN0ciIsIm1hdGNoIiwiRGF0ZSIsImdldEZ1bGxZZWFyIiwibWF0Y2hSZWdpb24iLCJtYXRjaEJyYW5jaCIsInNlcnZpY2VTZWFyY2giLCJnZW5kZXJTZWFyY2giLCJzZXJ2aWNlRHJvcGRvd25SZWYiLCJnZW5kZXJEcm9wZG93blJlZiIsImhhbmRsZUNsaWNrIiwiY3VycmVudCIsImNvbnRhaW5zIiwidGFyZ2V0IiwiZG9jdW1lbnQiLCJmaWx0ZXJlZFNlcnZpY2VUeXBlcyIsInMiLCJ0b0xvd2VyQ2FzZSIsImZpbHRlcmVkR2VuZGVycyIsImciLCJyZWdpb25PcHRpb25zIiwiciIsIm5hbWUiLCJ0b3RhbCIsIk9iamVjdCIsInZhbHVlcyIsInJlZyIsImZpbHRlcmVkUmVnaW9uT3B0aW9ucyIsImxvY2F0aW9uUmV2ZW51ZU1hcCIsImZvckVhY2giLCJsb2MiLCJvcmRlcnNCeURheSIsImNvdW50IiwiYXZnUGVyU2hvcCIsImtleXMiLCJzaG9wcyIsIlNldCIsInNpemUiLCJNYXRoIiwicm91bmQiLCJvcmRlcnNCeURheUFyciIsImVudHJpZXMiLCJzb3J0IiwiYSIsImIiLCJkMSIsIm0xIiwic3BsaXQiLCJkMiIsIm0yIiwiZmFrZU9yZGVyQ291bnRzIiwiaWR4IiwiZmxvb3IiLCJyYW5kb20iLCJ3ZWVrRGF0ZXMiLCJkYXRlcyIsInB1c2giLCJhZGQiLCJ3ZWVrbHlTZXJ2aWNlQ2hhcnREYXRhIiwiZGF0ZU9iaiIsImNvbWJvIiwic2VydmljZSIsImFkZGVkb24iLCJmb3hjYXJkIiwiZGF0YUJ5RGF0ZSIsIk1hcCIsImRhdGVLZXkiLCJzZXQiLCJleGlzdGluZyIsImdldCIsInJlZ2lvbkNoYXJ0RGF0YSIsInJlZ2lvbk1hcCIsImhhcyIsIm90aGVyIiwicmVnaW9uTmFtZSIsInNlcnZpY2VEYXRhIiwic2VydmljZU1hcCIsInRvdGFsQ291bnQiLCJ0ZW5EaWNoVnUiLCJsb2FpRGljaFZ1Iiwic29MdW9uZyIsInRvbmdHaWEiLCJwZXJjZW50U29MdW9uZyIsInBlcmNlbnRUb25nR2lhIiwic3RvcmVOYW1lcyIsInNvbWUiLCJzdG9yZVNlcnZpY2VDaGFydERhdGEiLCJzaG9wR3JvdXBzIiwiYWNjIiwic2hvcE5hbWUiLCJzZXJ2aWNlVHlwZSIsInNlcnZpY2VzIiwic3RvcmUiLCJzdG9yZURhdGEiLCJnaWZ0cyIsImdlbmRlckFjdHVhbFByaWNlIiwiZmlsdGVyZWQiLCJmaWx0ZXJlZFBpZURhdGEiLCJwaWVDaGFydERhdGEiLCJwaWVEYXRhIiwidG90YWxDb21ibyIsImNvbG9yIiwidG90YWxMZSIsInRvdGFsQ1QiLCJ0b3RhbEdpZnQiLCJ0b3RhbFBpZSIsImZveENhcmRWYWx1ZSIsInBpZVRvcDEwRGF0YSIsInNlcnZpY2VOYW1lIiwic2VydmljZVByaWNlIiwiZmlsdGVyZWRTZXJ2aWNlRGF0YSIsInNlcnZpY2VDb3VudE1hcCIsInNvcnRlZFNlcnZpY2VzIiwidG9wMTBTZXJ2aWNlcyIsInNsaWNlIiwib3RoZXJDb3VudCIsInJlc3VsdCIsInBpZVRvcDEwQXZnRGF0YSIsInNlcnZpY2VWYWx1ZU1hcCIsInRvdGFsVmFsdWUiLCJvYmoiLCJzZXJ2aWNlQXZnQXJyIiwiYXZnIiwic29ydGVkQXZnIiwidG9wMTBBdmciLCJvdGhlckF2Z1N1bSIsInJlbmRlclBpZUxhYmVsIiwicGVyY2VudCIsIngiLCJ5IiwiaW5kZXgiLCJ1bmRlZmluZWQiLCJ0ZXh0IiwiZmlsbCIsImZvbnRTaXplIiwiZm9udFdlaWdodCIsInRleHRBbmNob3IiLCJkb21pbmFudEJhc2VsaW5lIiwiYm90dG9tM0RhdGEiLCJncmF5U2hhZGVzIiwic29ydGVkIiwiYm90dG9tMyIsImJvdHRvbTNSZXZlbnVlRGF0YSIsImRpdiIsImNsYXNzTmFtZSIsImgxIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/services/page.tsx\n"));

/***/ })

});