/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/notifications/route";
exports.ids = ["app/api/notifications/route"];
exports.modules = {

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fnotifications%2Froute&page=%2Fapi%2Fnotifications%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fnotifications%2Froute.ts&appDir=%2FUsers%2Flehoanganh%2FDocuments%2FFB%20Network%2FFE%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Flehoanganh%2FDocuments%2FFB%20Network%2FFE&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fnotifications%2Froute&page=%2Fapi%2Fnotifications%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fnotifications%2Froute.ts&appDir=%2FUsers%2Flehoanganh%2FDocuments%2FFB%20Network%2FFE%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Flehoanganh%2FDocuments%2FFB%20Network%2FFE&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   workAsyncStorage: () => (/* binding */ workAsyncStorage),\n/* harmony export */   workUnitAsyncStorage: () => (/* binding */ workUnitAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(rsc)/./node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_lehoanganh_Documents_FB_Network_FE_src_app_api_notifications_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/notifications/route.ts */ \"(rsc)/./src/app/api/notifications/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/notifications/route\",\n        pathname: \"/api/notifications\",\n        filename: \"route\",\n        bundlePath: \"app/api/notifications/route\"\n    },\n    resolvedPagePath: \"/Users/lehoanganh/Documents/FB Network/FE/src/app/api/notifications/route.ts\",\n    nextConfigOutput,\n    userland: _Users_lehoanganh_Documents_FB_Network_FE_src_app_api_notifications_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { workAsyncStorage, workUnitAsyncStorage, serverHooks } = routeModule;\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        workAsyncStorage,\n        workUnitAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIvaW5kZXguanM/bmFtZT1hcHAlMkZhcGklMkZub3RpZmljYXRpb25zJTJGcm91dGUmcGFnZT0lMkZhcGklMkZub3RpZmljYXRpb25zJTJGcm91dGUmYXBwUGF0aHM9JnBhZ2VQYXRoPXByaXZhdGUtbmV4dC1hcHAtZGlyJTJGYXBpJTJGbm90aWZpY2F0aW9ucyUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRmxlaG9hbmdhbmglMkZEb2N1bWVudHMlMkZGQiUyME5ldHdvcmslMkZGRSUyRnNyYyUyRmFwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9JTJGVXNlcnMlMkZsZWhvYW5nYW5oJTJGRG9jdW1lbnRzJTJGRkIlMjBOZXR3b3JrJTJGRkUmaXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQStGO0FBQ3ZDO0FBQ3FCO0FBQzRCO0FBQ3pHO0FBQ0E7QUFDQTtBQUNBLHdCQUF3Qix5R0FBbUI7QUFDM0M7QUFDQSxjQUFjLGtFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxZQUFZO0FBQ1osQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsc0RBQXNEO0FBQzlEO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQzBGOztBQUUxRiIsInNvdXJjZXMiOlsiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcFJvdXRlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIvVXNlcnMvbGVob2FuZ2FuaC9Eb2N1bWVudHMvRkIgTmV0d29yay9GRS9zcmMvYXBwL2FwaS9ub3RpZmljYXRpb25zL3JvdXRlLnRzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcIlwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9ub3RpZmljYXRpb25zL3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvbm90aWZpY2F0aW9uc1wiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvbm90aWZpY2F0aW9ucy9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIi9Vc2Vycy9sZWhvYW5nYW5oL0RvY3VtZW50cy9GQiBOZXR3b3JrL0ZFL3NyYy9hcHAvYXBpL25vdGlmaWNhdGlvbnMvcm91dGUudHNcIixcbiAgICBuZXh0Q29uZmlnT3V0cHV0LFxuICAgIHVzZXJsYW5kXG59KTtcbi8vIFB1bGwgb3V0IHRoZSBleHBvcnRzIHRoYXQgd2UgbmVlZCB0byBleHBvc2UgZnJvbSB0aGUgbW9kdWxlLiBUaGlzIHNob3VsZFxuLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4vLyBhcmUgdXNlZCB0byBob29rIGludG8gdGhlIHJvdXRlLlxuY29uc3QgeyB3b3JrQXN5bmNTdG9yYWdlLCB3b3JrVW5pdEFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MgfSA9IHJvdXRlTW9kdWxlO1xuZnVuY3Rpb24gcGF0Y2hGZXRjaCgpIHtcbiAgICByZXR1cm4gX3BhdGNoRmV0Y2goe1xuICAgICAgICB3b3JrQXN5bmNTdG9yYWdlLFxuICAgICAgICB3b3JrVW5pdEFzeW5jU3RvcmFnZVxuICAgIH0pO1xufVxuZXhwb3J0IHsgcm91dGVNb2R1bGUsIHdvcmtBc3luY1N0b3JhZ2UsIHdvcmtVbml0QXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fnotifications%2Froute&page=%2Fapi%2Fnotifications%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fnotifications%2Froute.ts&appDir=%2FUsers%2Flehoanganh%2FDocuments%2FFB%20Network%2FFE%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Flehoanganh%2FDocuments%2FFB%20Network%2FFE&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "(rsc)/./src/app/api/notifications/route.ts":
/*!********************************************!*\
  !*** ./src/app/api/notifications/route.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n\nconst API_ENDPOINTS = [];\nconst pageStatuses = new Map();\nasync function checkAPIStatus() {\n    const results = [];\n    const baseUrl = process.env.NEXT_PUBLIC_BASE_URL || \"http://localhost:3000\";\n    for (const endpoint of API_ENDPOINTS){\n        const startTime = Date.now();\n        try {\n            const response = await fetch(`${baseUrl}${endpoint.url}`, {\n                method: \"GET\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                signal: AbortSignal.timeout(5000)\n            });\n            results.push({\n                name: endpoint.name,\n                url: endpoint.url,\n                status: response.status,\n                responseTime: Date.now() - startTime,\n                isHealthy: response.status === endpoint.expectedStatus,\n                error: null\n            });\n        } catch (error) {\n            results.push({\n                name: endpoint.name,\n                url: endpoint.url,\n                status: \"ERROR\",\n                responseTime: Date.now() - startTime,\n                isHealthy: false,\n                error: error instanceof Error ? error.message : \"Unknown error\"\n            });\n        }\n    }\n    return results;\n}\nasync function getSystemHealth() {\n    try {\n        const fs = await Promise.resolve(/*! import() */).then(__webpack_require__.t.bind(__webpack_require__, /*! fs */ \"fs\", 23)).then((m)=>m.promises);\n        const path = await Promise.resolve(/*! import() */).then(__webpack_require__.t.bind(__webpack_require__, /*! path */ \"path\", 23));\n        const dataFiles = [\n            \"src/data/danh_sach_ban_hang.json\",\n            \"src/data/khach_hang_su_dung_app.json\",\n            \"src/data/dich_vu_ban_hang.json\",\n            \"src/data/ban_hang_doanh_so.json\"\n        ];\n        const fileStatus = await Promise.all(dataFiles.map(async (file)=>{\n            try {\n                const filePath = path.join(process.cwd(), file);\n                await fs.access(filePath);\n                const stats = await fs.stat(filePath);\n                return {\n                    name: path.basename(file),\n                    exists: true,\n                    size: stats.size,\n                    lastModified: stats.mtime\n                };\n            } catch (error) {\n                return {\n                    name: path.basename(file),\n                    exists: false,\n                    error: error instanceof Error ? error.message : \"File not found\"\n                };\n            }\n        }));\n        return {\n            timestamp: new Date(),\n            fileStatus,\n            memoryUsage: process.memoryUsage(),\n            uptime: process.uptime()\n        };\n    } catch (error) {\n        return {\n            timestamp: new Date(),\n            error: error instanceof Error ? error.message : \"System health check failed\"\n        };\n    }\n}\nfunction formatTimeAgo(timestamp) {\n    const now = new Date();\n    const diff = now.getTime() - timestamp.getTime();\n    const minutes = Math.floor(diff / 60000);\n    const hours = Math.floor(diff / 3600000);\n    if (minutes < 1) return \"Vừa xong\";\n    if (minutes < 60) return `${minutes} phút trước`;\n    if (hours < 24) return `${hours} giờ trước`;\n    return `${Math.floor(hours / 24)} ngày trước`;\n}\nfunction getPageDisplayName(pageName) {\n    const pageNames = {\n        customers: \"Khách hàng\",\n        orders: \"Đơn hàng\",\n        services: \"Dịch vụ\",\n        dashboard: \"Tổng quan\"\n    };\n    return pageNames[pageName] || pageName;\n}\nfunction generatePageNotifications() {\n    const notifications = [];\n    const now = new Date();\n    pageStatuses.forEach((status, pageName)=>{\n        const inactiveMinutes = Math.floor((now.getTime() - status.lastActivity.getTime()) / 60000);\n        if (status.errorCount > 0 && status.lastError) {\n            notifications.push({\n                id: `${pageName}_error_${Date.now()}`,\n                title: `${getPageDisplayName(pageName)} - Lỗi`,\n                message: status.lastError,\n                time: formatTimeAgo(status.lastActivity),\n                read: false,\n                type: \"api_error\"\n            });\n        }\n        if (status.successCount > 0 && status.lastSuccess) {\n            notifications.push({\n                id: `${pageName}_success_${Date.now()}`,\n                title: `${getPageDisplayName(pageName)} - Thành công`,\n                message: status.lastSuccess,\n                time: formatTimeAgo(status.lastActivity),\n                read: false,\n                type: \"api_status\"\n            });\n        }\n        if (inactiveMinutes > 30 && status.dataLoaded) {\n            notifications.push({\n                id: `${pageName}_inactive_${Date.now()}`,\n                title: `${getPageDisplayName(pageName)} - Không hoạt động`,\n                message: `Trang không có hoạt động trong ${Math.floor(inactiveMinutes / 60)} giờ`,\n                time: formatTimeAgo(status.lastActivity),\n                read: false,\n                type: \"system_health\"\n            });\n        }\n    });\n    return notifications;\n}\nfunction updatePageStatus(pageName, data) {\n    const now = new Date();\n    const current = pageStatuses.get(pageName) || {\n        page: pageName,\n        lastActivity: now,\n        dataLoaded: false,\n        errorCount: 0,\n        successCount: 0\n    };\n    pageStatuses.set(pageName, {\n        ...current,\n        ...data,\n        lastActivity: now\n    });\n}\nasync function GET() {\n    try {\n        const apiStatus = await checkAPIStatus();\n        const systemHealth = await getSystemHealth();\n        const notifications = [];\n        apiStatus.forEach((api, index)=>{\n            if (!api.isHealthy) {\n                notifications.push({\n                    id: `api_error_${index}`,\n                    title: `${api.name} - Error`,\n                    message: `Error: ${api.error || `Status ${api.status}`}, Response time: ${api.responseTime}ms`,\n                    time: \"Vừa xong\",\n                    read: false,\n                    type: \"api_error\"\n                });\n            }\n        });\n        notifications.push(...generatePageNotifications());\n        if (pageStatuses.size > 0) {\n            const activePages = Array.from(pageStatuses.values()).filter((p)=>p.dataLoaded).length;\n            notifications.push({\n                id: \"system_status\",\n                title: \"Trạng thái hệ thống\",\n                message: `${activePages}/${pageStatuses.size} trang đã sẵn sàng sử dụng`,\n                time: \"Vừa xong\",\n                read: true,\n                type: \"system_health\"\n            });\n        }\n        if (systemHealth.fileStatus) {\n            const healthyFiles = systemHealth.fileStatus?.filter((f)=>f.exists).length ?? 0;\n            if (healthyFiles < systemHealth.fileStatus.length) {\n                notifications.push({\n                    id: \"system_files\",\n                    title: \"Data Files Status\",\n                    message: `${healthyFiles}/${systemHealth.fileStatus.length} data files accessible`,\n                    time: \"Vừa xong\",\n                    read: false,\n                    type: \"system_health\"\n                });\n            }\n        }\n        if (systemHealth.memoryUsage) {\n            const memoryMB = Math.round(systemHealth.memoryUsage.heapUsed / 1024 / 1024);\n            if (memoryMB > 512) {\n                notifications.push({\n                    id: \"memory_usage\",\n                    title: \"Memory Usage\",\n                    message: `Heap used: ${memoryMB}MB, Uptime: ${Math.round(systemHealth.uptime / 60)} minutes`,\n                    time: \"Vừa xong\",\n                    read: true,\n                    type: \"api_performance\"\n                });\n            }\n        }\n        const unreadCount = notifications.filter((n)=>!n.read).length;\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            notifications,\n            count: unreadCount,\n            apiStatus,\n            systemHealth,\n            pageStatuses: Object.fromEntries(pageStatuses),\n            lastUpdated: new Date().toISOString()\n        });\n    } catch (error) {\n        console.error(\"Error fetching API status:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            notifications: [\n                {\n                    id: \"api_error\",\n                    title: \"API Status Check Failed\",\n                    message: \"Không thể kiểm tra trạng thái API\",\n                    time: \"Vừa xong\",\n                    read: false,\n                    type: \"api_error\"\n                }\n            ],\n            count: 1,\n            error: \"Failed to check API status\"\n        }, {\n            status: 500\n        });\n    }\n}\nasync function POST(request) {\n    try {\n        const { pageName, ...statusData } = await request.json();\n        if (!pageName) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Page name is required\"\n            }, {\n                status: 400\n            });\n        }\n        updatePageStatus(pageName, statusData);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            message: `Page status updated for ${pageName}`\n        });\n    } catch (error) {\n        console.error(\"Error updating page status:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Failed to update page status\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/notifications/route.ts\n");

/***/ }),

/***/ "(ssr)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true!":
/*!******************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?server=true! ***!
  \******************************************************************************************************/
/***/ (() => {



/***/ }),

/***/ "../app-render/after-task-async-storage.external":
/*!***********************************************************************************!*\
  !*** external "next/dist/server/app-render/after-task-async-storage.external.js" ***!
  \***********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/after-task-async-storage.external.js");

/***/ }),

/***/ "../app-render/work-async-storage.external":
/*!*****************************************************************************!*\
  !*** external "next/dist/server/app-render/work-async-storage.external.js" ***!
  \*****************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-async-storage.external.js");

/***/ }),

/***/ "./work-unit-async-storage.external":
/*!**********************************************************************************!*\
  !*** external "next/dist/server/app-render/work-unit-async-storage.external.js" ***!
  \**********************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/server/app-render/work-unit-async-storage.external.js");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

"use strict";
module.exports = require("fs");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

"use strict";
module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

"use strict";
module.exports = require("path");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader/index.js?name=app%2Fapi%2Fnotifications%2Froute&page=%2Fapi%2Fnotifications%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fnotifications%2Froute.ts&appDir=%2FUsers%2Flehoanganh%2FDocuments%2FFB%20Network%2FFE%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Flehoanganh%2FDocuments%2FFB%20Network%2FFE&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();